{"version":3,"sources":["webpack://roosterjs/webpack/bootstrap","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/changeFontSize.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/clearBlockFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/clearFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/createLink.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/getFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/insertImage.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/removeLink.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/replaceWithNode.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setAlignment.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setBackgroundColor.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setDirection.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setFontName.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setFontSize.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setImageAltText.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setIndentation.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/setTextColor.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBlockQuote.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBold.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleBullet.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleCodeBlock.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleHeader.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleItalic.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleNumbering.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleStrikethrough.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleSubscript.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleSuperscript.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/format/toggleUnderline.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/editTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/formatTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/table/insertTable.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/applyInlineStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/collapseSelectedBlocks.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/execCommand.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/processList.ts","webpack://roosterjs/./packages/roosterjs-editor-api/lib/utils/toggleTagCore.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/attachDomEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/calculateDefaultFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/editWithUndo.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/focus.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/getCustomData.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/getSelectionRange.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/hasFocus.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/insertNode.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/selectRange.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/coreAPI/triggerEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/CopyPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/DOMEventPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/EditPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/FirefoxTypeAfterLink.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/MouseUpPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/corePlugins/TypeInContainerPlugin.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/darkMode/convertContentToDarkMode.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/darkMode/getColorNormalizedContent.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/Editor.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/adjustBrowserBehavior.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/createEditorCore.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/editor/mapPluginEvents.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/cacheGetContentSearcher.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/cacheGetElementAtCursor.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/cacheGetEventData.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/clearEventDataCache.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/isCharacterValue.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/eventApi/isModifierKey.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/undo/Undo.ts","webpack://roosterjs/./packages/roosterjs-editor-core/lib/undo/UndoSnapshots.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/NodeBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/StartEndBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/getBlockElementAtNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/blockElements/getFirstLastBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/BodyScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/ContentTraverser.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/PositionContentSearcher.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionBlockScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/contentTraverser/SelectionScoper.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/index.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/EmptyInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/ImageInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/LinkInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/NodeInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/PartialInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getFirstLastInlineElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementAtNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/inlineElements/getInlineElementBeforeAfter.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/Position.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/createRange.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/getPositionRect.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/getSelectionPath.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/selection/isPositionAtBeginningOf.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/table/VTable.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/Browser.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/adjustNodeInsertPosition.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/applyFormat.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/applyTextStyle.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/changeElementTag.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/collapseNodes.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/contains.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/extractClipboardEvent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/findClosestElementAncestor.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/fromHtml.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getComputedStyles.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getLeafNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getLeafSibling.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getPendableFormatState.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getTagOfNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/getTextContent.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isBlockElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isNodeAfter.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isNodeEmpty.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/isVoidHtmlElement.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/matchLink.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/queryElements.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/shouldSkipNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/splitParentNode.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/unwrap.ts","webpack://roosterjs/./packages/roosterjs-editor-dom/lib/utils/wrap.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/ContentEdit.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/ContentEditFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/autoLinkFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/insertLineBeforeStructuredNodeFeature.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/listFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/quoteFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/shortcutFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/ContentEdit/features/tableFeatures.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/CustomReplace/CustomReplace.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/HyperLink/HyperLink.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/Paste.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/buildClipboardData.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/excelConverter/convertPastedContentFromExcel.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/fragmentHandler.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/textToHtml.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/CustomData.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/LevelLists.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/WordConverterArguments.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/convertPastedContentFromWord.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/converterUtils.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Paste/wordConverter/wordConverter.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/TableResize/TableResize.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/Watermark/Watermark.ts","webpack://roosterjs/./packages/roosterjs-editor-plugins/lib/index.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/index.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/sanitizer/HtmlSanitizer.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/utils/cloneObject.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/utils/getAllowedValues.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/utils/getInheritableStyles.ts","webpack://roosterjs/./packages/roosterjs-html-sanitizer/lib/utils/htmlToDom.ts","webpack://roosterjs/./packages/roosterjs-plugin-image-resize/lib/ImageResize.ts","webpack://roosterjs/./packages/roosterjs-plugin-image-resize/lib/index.ts","webpack://roosterjs/./packages/roosterjs-plugin-picker/lib/PickerPlugin.ts","webpack://roosterjs/./packages/roosterjs-plugin-picker/lib/index.ts","webpack://roosterjs/./packages/roosterjs/lib/createEditor.ts","webpack://roosterjs/./packages/roosterjs/lib/index.ts"],"names":[],"mappings":"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","file":"rooster.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/roosterjs/lib/index.ts\");\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { FontSizeChange } from 'roosterjs-editor-types';\r\nimport { getComputedStyle } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Default font size sequence, in pt. Suggest editor UI use this sequence as your font size list,\r\n * So that when increase/decrease font size, the font size can match the sequence of your font size picker\r\n */\r\nexport const FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72];\r\nconst MIN_FONT_SIZE = 1;\r\nconst MAX_FONT_SIZE = 1000;\r\n\r\n/**\r\n * Increase or decrease font size in selection\r\n * @param editor The editor instance\r\n * @param change Whether increase or decrease font size\r\n * @param fontSizes A sorted font size array, in pt. Default value is FONT_SIZES\r\n */\r\nexport default function changeFontSize(\r\n    editor: Editor,\r\n    change: FontSizeChange,\r\n    fontSizes: number[] = FONT_SIZES\r\n) {\r\n    let changeBase: 1 | -1 = change == FontSizeChange.Increase ? 1 : -1;\r\n    applyInlineStyle(editor, element => {\r\n        let pt = parseFloat(getComputedStyle(element, 'font-size'));\r\n        element.style.fontSize = getNewFontSize(pt, changeBase, fontSizes) + 'pt';\r\n        let lineHeight = getComputedStyle(element, 'line-height');\r\n        if (lineHeight != 'normal') {\r\n            element.style.lineHeight = 'normal';\r\n        }\r\n    });\r\n}\r\n\r\nexport function getNewFontSize(pt: number, changeBase: 1 | -1, fontSizes: number[]): number {\r\n    pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n    let last = fontSizes[fontSizes.length - 1];\r\n    if (pt <= fontSizes[0]) {\r\n        pt = Math.max(pt + changeBase, MIN_FONT_SIZE);\r\n    } else if (pt > last || (pt == last && changeBase == 1)) {\r\n        pt = pt / 10;\r\n        pt = changeBase == 1 ? Math.floor(pt) : Math.ceil(pt);\r\n        pt = Math.min(Math.max((pt + changeBase) * 10, last), MAX_FONT_SIZE);\r\n    } else if (changeBase == 1) {\r\n        for (let i = 0; i < fontSizes.length; i++) {\r\n            if (pt < fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        for (let i = fontSizes.length - 1; i >= 0; i--) {\r\n            if (pt > fontSizes[i]) {\r\n                pt = fontSizes[i];\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return pt;\r\n}\r\n","import collapseSelectedBlocks from '../utils/collapseSelectedBlocks';\r\nimport { ChangeSource, NodeType } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport {\r\n    getTagOfNode,\r\n    isBlockElement,\r\n    unwrap,\r\n    wrap,\r\n    splitBalancedNodeRange,\r\n} from 'roosterjs-editor-dom';\r\n\r\nexport const TAGS_TO_UNWRAP = 'B,I,U,STRONG,EM,SUB,SUP,STRIKE,FONT,CENTER,H1,H2,H3,H4,H5,H6,UL,OL,LI,SPAN,P,BLOCKQUOTE,CODE,S,PRE'.split(\r\n    ','\r\n);\r\nexport const TAGS_TO_STOP_UNWRAP = ['TD', 'TH', 'TR', 'TABLE', 'TBODY', 'THEAD'];\r\nexport const ATTRIBUTES_TO_PRESERVE = ['href'];\r\n\r\n/**\r\n * Clear all formats of selected blocks.\r\n * When selection is collapsed, only clear format of current block.\r\n * @param editor The editor instance\r\n * @param tagsToUnwrap Optional. A string array contains HTML tags in upper case which we will unwrap when clear format\r\n * @param tagsToStopUnwrap Optional. A string array contains HTML tags in upper case which we will stop unwrap if these tags are hit\r\n */\r\nexport default function clearBlockFormat(\r\n    editor: Editor,\r\n    tagsToUnwrap: string[] = TAGS_TO_UNWRAP,\r\n    tagsToStopUnwrap: string[] = TAGS_TO_STOP_UNWRAP,\r\n    attributesToPreserve: string[] = ATTRIBUTES_TO_PRESERVE\r\n) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot((start, end) => {\r\n        let groups: {\r\n            first?: HTMLElement;\r\n            last?: HTMLElement;\r\n            td?: HTMLElement;\r\n        }[] = [{}];\r\n        let stopUnwrapSelector = tagsToStopUnwrap.join(',');\r\n\r\n        // 1. Collapse the selected blocks and get first and last element\r\n        collapseSelectedBlocks(editor, element => {\r\n            let group = groups[groups.length - 1];\r\n            let td = editor.getElementAtCursor(stopUnwrapSelector, element);\r\n            if (td != group.td && group.first) {\r\n                groups.push((group = {}));\r\n            }\r\n\r\n            group.td = td;\r\n            group.first = group.first || element;\r\n            group.last = element;\r\n        });\r\n\r\n        groups\r\n            .filter(group => group.first)\r\n            .forEach(group => {\r\n                // 2. Collapse with first and last element to make them under same parent\r\n                let nodes = editor.collapseNodes(group.first, group.last, true /*canSplitParent*/);\r\n\r\n                // 3. Continue collapse until we can't collapse any more (hit root node, or a table)\r\n                if (canCollapse(tagsToStopUnwrap, nodes[0])) {\r\n                    while (\r\n                        editor.contains(nodes[0].parentNode) &&\r\n                        canCollapse(tagsToStopUnwrap, nodes[0].parentNode as HTMLElement)\r\n                    ) {\r\n                        nodes = [splitBalancedNodeRange(nodes)];\r\n                    }\r\n                }\r\n\r\n                // 4. Clear formats of the nodes\r\n                nodes.forEach(node =>\r\n                    clearNodeFormat(\r\n                        node as HTMLElement,\r\n                        tagsToUnwrap,\r\n                        tagsToStopUnwrap,\r\n                        attributesToPreserve\r\n                    )\r\n                );\r\n\r\n                // 5. Clear CSS of container TD if exist\r\n                if (group.td) {\r\n                    let styles = group.td.getAttribute('style') || '';\r\n                    let styleArray = styles.split(';');\r\n                    styleArray = styleArray.filter(\r\n                        style =>\r\n                            style\r\n                                .trim()\r\n                                .toLowerCase()\r\n                                .indexOf('border') == 0\r\n                    );\r\n                    styles = styleArray.join(';');\r\n                    if (styles) {\r\n                        group.td.setAttribute('style', styles);\r\n                    } else {\r\n                        group.td.removeAttribute('style');\r\n                    }\r\n                }\r\n            });\r\n\r\n        editor.select(start, end);\r\n    }, ChangeSource.Format);\r\n}\r\n\r\nfunction clearNodeFormat(\r\n    node: Node,\r\n    tagsToUnwrap: string[],\r\n    tagsToStopUnwrap: string[],\r\n    attributesToPreserve: string[]\r\n): boolean {\r\n    if (node.nodeType != NodeType.Element || getTagOfNode(node) == 'BR') {\r\n        return false;\r\n    }\r\n\r\n    // 1. Recursively clear format of all its child nodes\r\n    let allChildrenAreBlock = ([].slice.call(node.childNodes) as Node[])\r\n        .map(n => clearNodeFormat(n, tagsToUnwrap, tagsToStopUnwrap, attributesToPreserve))\r\n        .reduce((previousValue, value) => previousValue && value, true);\r\n\r\n    if (!canCollapse(tagsToStopUnwrap, node)) {\r\n        return false;\r\n    }\r\n\r\n    let returnBlockElement = isBlockElement(node);\r\n\r\n    // 2. If we should unwrap this tag, put it into an array and unwrap it later\r\n    if (tagsToUnwrap.indexOf(getTagOfNode(node)) >= 0 || allChildrenAreBlock) {\r\n        if (returnBlockElement && !allChildrenAreBlock) {\r\n            wrap(node);\r\n        }\r\n        unwrap(node);\r\n    } else {\r\n        // 3. Otherwise, remove all attributes\r\n        clearAttribute(node as HTMLElement, attributesToPreserve);\r\n    }\r\n\r\n    return returnBlockElement;\r\n}\r\n\r\nfunction clearAttribute(element: HTMLElement, attributesToPreserve: string[]) {\r\n    for (let attr of [].slice.call(element.attributes) as Attr[]) {\r\n        if (\r\n            attributesToPreserve.indexOf(attr.name.toLowerCase()) < 0 &&\r\n            attr.name.indexOf('data-') != 0\r\n        ) {\r\n            element.removeAttribute(attr.name);\r\n        }\r\n    }\r\n}\r\n\r\nfunction canCollapse(tagsToStopUnwrap: string[], node: Node) {\r\n    return tagsToStopUnwrap.indexOf(getTagOfNode(node)) < 0;\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport setBackgroundColor from './setBackgroundColor';\r\nimport setFontName from './setFontName';\r\nimport setFontSize from './setFontSize';\r\nimport setTextColor from './setTextColor';\r\nimport toggleBold from './toggleBold';\r\nimport toggleItalic from './toggleItalic';\r\nimport toggleUnderline from './toggleUnderline';\r\nimport { ChangeSource, DocumentCommand, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\nconst STYLES_TO_REMOVE = ['font', 'text-decoration', 'color', 'background'];\r\n\r\n/**\r\n * Clear the format in current selection, after cleaning, the format will be\r\n * changed to default format. The format that get cleaned include B/I/U/font name/\r\n * font size/text color/background color/align left/align right/align center/superscript/subscript\r\n * @param editor The editor instance\r\n */\r\nexport default function clearFormat(editor: Editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(() => {\r\n        execCommand(editor, DocumentCommand.RemoveFormat);\r\n\r\n        editor.queryElements('[class]', QueryScope.OnSelection, node =>\r\n            node.removeAttribute('class')\r\n        );\r\n\r\n        const defaultFormat = editor.getDefaultFormat();\r\n        const isDefaultFormatEmpty = Object.keys(defaultFormat).length === 0;\r\n        editor.queryElements('[style]', QueryScope.InSelection, node => {\r\n            STYLES_TO_REMOVE.forEach(style => node.style.removeProperty(style));\r\n\r\n            // when default format is empty, keep the HTML minimum by removing style attribute if there's no style\r\n            // (note: because default format is empty, we're not adding style back in)\r\n            if (isDefaultFormatEmpty && node.getAttribute('style') === '') {\r\n                node.removeAttribute('style');\r\n            }\r\n        });\r\n\r\n        if (!isDefaultFormatEmpty) {\r\n            if (defaultFormat.fontFamily) {\r\n                setFontName(editor, defaultFormat.fontFamily);\r\n            }\r\n            if (defaultFormat.fontSize) {\r\n                setFontSize(editor, defaultFormat.fontSize);\r\n            }\r\n            if (defaultFormat.textColor) {\r\n                if (defaultFormat.textColors) {\r\n                    setTextColor(editor, defaultFormat.textColors);\r\n                } else {\r\n                    setTextColor(editor, defaultFormat.textColor);\r\n                }\r\n            }\r\n            if (defaultFormat.backgroundColor) {\r\n                if (defaultFormat.backgroundColors) {\r\n                    setBackgroundColor(editor, defaultFormat.backgroundColors);\r\n                } else {\r\n                    setBackgroundColor(editor, defaultFormat.backgroundColor);\r\n                }\r\n            }\r\n            if (defaultFormat.bold) {\r\n                toggleBold(editor);\r\n            }\r\n            if (defaultFormat.italic) {\r\n                toggleItalic(editor);\r\n            }\r\n            if (defaultFormat.underline) {\r\n                toggleUnderline(editor);\r\n            }\r\n        }\r\n    }, ChangeSource.Format);\r\n}\r\n","import { ChangeSource, DocumentCommand, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { matchLink } from 'roosterjs-editor-dom';\r\n\r\n// Regex matching Uri scheme\r\nconst URI_REGEX = /^[a-zA-Z]+:/i;\r\n// Regex matching begin of email address\r\nconst MAILTO_REGEX = /^[\\w.%+-]+@/i;\r\n// Regex matching begin of ftp, i.e. ftp.microsoft.com\r\nconst FTP_REGEX = /^ftp\\./i;\r\nconst TEMP_TITLE = 'istemptitle';\r\n\r\nfunction applyLinkPrefix(url: string): string {\r\n    if (!url) {\r\n        return url;\r\n    }\r\n\r\n    // Add link prefix per rule:\r\n    // (a) if the url always starts with a URI scheme, leave it as it is\r\n    // (b) if the url is an email address, xxx@... add mailto: prefix\r\n    // (c) if the url starts with ftp., add ftp:// prefix\r\n    // (d) rest, add http:// prefix\r\n    let prefix = '';\r\n    if (url.search(URI_REGEX) < 0) {\r\n        if (url.search(MAILTO_REGEX) == 0) {\r\n            prefix = 'mailto:';\r\n        } else if (url.search(FTP_REGEX) == 0) {\r\n            prefix = 'ftp://';\r\n        } else {\r\n            // fallback to http://\r\n            prefix = 'http://';\r\n        }\r\n    }\r\n\r\n    return prefix + url;\r\n}\r\n\r\n/**\r\n * Insert a hyperlink at cursor.\r\n * When there is a selection, hyperlink will be applied to the selection,\r\n * otherwise a hyperlink will be inserted to the cursor position.\r\n * @param editor Editor object\r\n * @param link Link address, can be http(s), mailto, notes, file, unc, ftp, news, telnet, gopher, wais.\r\n * When protocol is not specified, a best matched protocol will be predicted.\r\n * @param altText Optional alt text of the link, will be shown when hover on the link\r\n * @param displayText Optional display text for the link.\r\n * If specified, the display text of link will be replaced with this text.\r\n * If not specified and there wasn't a link, the link url will be used as display text.\r\n */\r\nexport default function createLink(\r\n    editor: Editor,\r\n    link: string,\r\n    altText?: string,\r\n    displayText?: string\r\n) {\r\n    editor.focus();\r\n    let url = link ? link.trim() : '';\r\n    if (url) {\r\n        let linkData = matchLink(url);\r\n        // matchLink can match most links, but not all, i.e. if you pass link a link as \"abc\", it won't match\r\n        // we know in that case, users will want to insert a link like http://abc\r\n        // so we have separate logic in applyLinkPrefix to add link prefix depending on the format of the link\r\n        // i.e. if the link starts with something like abc@xxx, we will add mailto: prefix\r\n        // if the link starts with ftp.xxx, we will add ftp:// link. For more, see applyLinkPrefix\r\n        let normalizedUrl = linkData ? linkData.normalizedUrl : applyLinkPrefix(url);\r\n        let originalUrl = linkData ? linkData.originalUrl : url;\r\n\r\n        editor.addUndoSnapshot(() => {\r\n            let range = editor.getSelectionRange();\r\n            let anchor: HTMLAnchorElement = null;\r\n            if (range && range.collapsed) {\r\n                anchor = getAnchorNodeAtCursor(editor);\r\n\r\n                // If there is already a link, just change its href\r\n                if (anchor) {\r\n                    anchor.href = normalizedUrl;\r\n                    // Change text content if it is specified\r\n                    updateAnchorDisplayText(anchor, displayText);\r\n                } else {\r\n                    anchor = editor.getDocument().createElement('A') as HTMLAnchorElement;\r\n                    anchor.textContent = displayText || originalUrl;\r\n                    anchor.href = normalizedUrl;\r\n                    editor.insertNode(anchor);\r\n                }\r\n            } else {\r\n                // the selection is not collapsed, use browser execCommand\r\n                editor.getDocument().execCommand(DocumentCommand.CreateLink, false, normalizedUrl);\r\n                anchor = getAnchorNodeAtCursor(editor);\r\n                updateAnchorDisplayText(anchor, displayText);\r\n            }\r\n            if (altText && anchor) {\r\n                // Hack: Ideally this should be done by HyperLink plugin.\r\n                // We make a hack here since we don't have an event to notify HyperLink plugin\r\n                // before we apply the link.\r\n                anchor.removeAttribute(TEMP_TITLE);\r\n                anchor.title = altText;\r\n            }\r\n            return anchor;\r\n        }, ChangeSource.CreateLink);\r\n    }\r\n}\r\n\r\nfunction getAnchorNodeAtCursor(editor: Editor): HTMLAnchorElement {\r\n    return editor.queryElements('a[href]', QueryScope.OnSelection)[0] as HTMLAnchorElement;\r\n}\r\n\r\nfunction updateAnchorDisplayText(anchor: HTMLAnchorElement, displayText: string) {\r\n    if (displayText && anchor.textContent != displayText) {\r\n        anchor.textContent = displayText;\r\n    }\r\n}\r\n","import { cacheGetElementAtCursor, Editor } from 'roosterjs-editor-core';\r\nimport { getComputedStyles, getTagOfNode, Position } from 'roosterjs-editor-dom';\r\nimport { getPendableFormatState } from 'roosterjs-editor-dom';\r\nimport {\r\n    ElementBasedFormatState,\r\n    FormatState,\r\n    PluginEvent,\r\n    QueryScope,\r\n    StyleBasedFormatState,\r\n} from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get element based Format State at cursor\r\n * @param editor The editor instance\r\n * @param event (Optional) The plugin event, it stores the event cached data for looking up.\r\n * In this function the event cache is used to get list state and header level. If not passed,\r\n * it will query the node within selection to get the info\r\n * @returns An ElementBasedFormatState object\r\n */\r\nexport function getElementBasedFormatState(\r\n    editor: Editor,\r\n    event?: PluginEvent\r\n): ElementBasedFormatState {\r\n    let listTag = getTagOfNode(cacheGetElementAtCursor(editor, event, 'OL,UL'));\r\n    let headerTag = getTagOfNode(cacheGetElementAtCursor(editor, event, 'H1,H2,H3,H4,H5,H6'));\r\n\r\n    return {\r\n        isBullet: listTag == 'UL',\r\n        isNumbering: listTag == 'OL',\r\n        headerLevel: (headerTag && parseInt(headerTag[1])) || 0,\r\n\r\n        canUnlink: !!editor.queryElements('a[href]', QueryScope.OnSelection)[0],\r\n        canAddImageAltText: !!editor.queryElements('img', QueryScope.OnSelection)[0],\r\n        isBlockQuote: !!editor.queryElements('blockquote', QueryScope.OnSelection)[0],\r\n    };\r\n}\r\n\r\n/**\r\n * Get style based Format State at cursor\r\n * @param editor The editor instance\r\n * @returns A StyleBasedFormatState object\r\n */\r\nexport function getStyleBasedFormatState(editor: Editor): StyleBasedFormatState {\r\n    let range = editor.getSelectionRange();\r\n    let node = range && Position.getStart(range).normalize().node;\r\n    let styles = node ? getComputedStyles(node) : [];\r\n    return {\r\n        fontName: styles[0],\r\n        fontSize: styles[1],\r\n        textColor: styles[2],\r\n        backgroundColor: styles[3],\r\n    };\r\n}\r\n\r\n/**\r\n * Get format state at cursor\r\n * A format state is a collection of all format related states, e.g.,\r\n * bold, italic, underline, font name, font size, etc.\r\n * @param editor The editor instance\r\n * @param event (Optional) The plugin event, it stores the event cached data for looking up.\r\n * In this function the event cache is used to get list state and header level. If not passed,\r\n * it will query the node within selection to get the info\r\n * @returns The format state at cursor\r\n */\r\nexport default function getFormatState(editor: Editor, event?: PluginEvent): FormatState {\r\n    return {\r\n        ...getPendableFormatState(editor.getDocument()),\r\n        ...getElementBasedFormatState(editor, event),\r\n        ...getStyleBasedFormatState(editor),\r\n        canUndo: editor.canUndo(),\r\n        canRedo: editor.canRedo(),\r\n    };\r\n}\r\n","import { ChangeSource } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Insert an image to editor at current selection\r\n * @param editor The editor instance\r\n * @param imageFile The image file. There are at least 3 ways to obtain the file object:\r\n * From local file, from clipboard data, from drag-and-drop\r\n */\r\nexport default function insertImage(editor: Editor, imageFile: File) {\r\n    let reader = new FileReader();\r\n    reader.onload = (event: ProgressEvent) => {\r\n        if (!editor.isDisposed()) {\r\n            editor.addUndoSnapshot(() => {\r\n                let image = editor.getDocument().createElement('img');\r\n                image.src = (event.target as FileReader).result as string;\r\n                image.style.maxWidth = '100%';\r\n                editor.insertNode(image);\r\n            }, ChangeSource.Format);\r\n        }\r\n    };\r\n    reader.readAsDataURL(imageFile);\r\n}\r\n","import { ChangeSource, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { unwrap } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Remove link at selection. If no links at selection, do nothing.\r\n * If selection contains multiple links, all of the link styles will be removed.\r\n * If only part of a link is selected, the whole link style will be removed.\r\n * @param editor The editor instance\r\n */\r\nexport default function removeLink(editor: Editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot((start, end) => {\r\n        editor.queryElements('a[href]', QueryScope.OnSelection, unwrap);\r\n        editor.select(start, end);\r\n    }, ChangeSource.Format);\r\n}\r\n","import { ContentPosition } from 'roosterjs-editor-types';\nimport { Editor } from 'roosterjs-editor-core';\nimport { PositionContentSearcher } from 'roosterjs-editor-dom';\n\n/**\n * Replace text before current selection with a node, current selection will be kept if possible\n * @param editor The editor instance\n * @param text The text for matching. We will try to match the text with the text before cursor\n * @param node The node to replace the text with\n * @param exactMatch True if the text must appear exactly before selection,\n * otherwise there can be some text between the tearget text and selection\n * @param searcher Optional PositionContentSearcher of current selection to help search text\n */\nexport default function replaceWithNode(\n    editor: Editor,\n    text: string,\n    node: Node,\n    exactMatch: boolean,\n    searcher?: PositionContentSearcher\n): boolean;\n\n/**\n * Replace a given range with a node, current selection will be kept if possible\n * @param editor The editor instance\n * @param range The range to replace from\n * @param node The node to replace the text with\n * @param exactMatch True if the text must appear exactly before selection,\n * otherwise there can be some text between the tearget text and selection\n */\nexport default function replaceWithNode(\n    editor: Editor,\n    range: Range,\n    node: Node,\n    exactMatch: boolean\n): boolean;\n\nexport default function replaceWithNode(\n    editor: Editor,\n    textOrRange: string | Range,\n    node: Node,\n    exactMatch: boolean,\n    searcher?: PositionContentSearcher\n): boolean {\n    // Make sure the text and node is valid\n    if (!textOrRange || !node) {\n        return false;\n    }\n\n    let range: Range;\n\n    if (typeof textOrRange == 'string') {\n        searcher = searcher || editor.getContentSearcherOfCursor();\n        range = searcher && searcher.getRangeFromText(textOrRange, exactMatch);\n    } else {\n        range = textOrRange;\n    }\n\n    if (range) {\n        const backupRange = editor.getSelectionRange();\n\n        // If the range to replace is right before current cursor, it is actually an exact match\n        if (\n            backupRange.collapsed &&\n            range.endContainer == backupRange.startContainer &&\n            range.endOffset == backupRange.startOffset\n        ) {\n            exactMatch = true;\n        }\n\n        editor.insertNode(node, {\n            position: ContentPosition.Range,\n            updateCursor: exactMatch,\n            replaceSelection: true,\n            insertOnNewLine: false,\n            range: range,\n        });\n\n        return true;\n    }\n\n    return false;\n}\n","import execCommand from '../utils/execCommand';\r\nimport { Alignment, ChangeSource, DocumentCommand, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Set content alignment\r\n * @param editor The editor instance\r\n * @param alignment The alignment option:\r\n * Alignment.Center, Alignment.Left, Alignment.Right\r\n */\r\nexport default function setAlignment(editor: Editor, alignment: Alignment) {\r\n    let command = DocumentCommand.JustifyLeft;\r\n    let align = 'left';\r\n\r\n    if (alignment == Alignment.Center) {\r\n        command = DocumentCommand.JustifyCenter;\r\n        align = 'center';\r\n    } else if (alignment == Alignment.Right) {\r\n        command = DocumentCommand.JustifyRight;\r\n        align = 'right';\r\n    }\r\n\r\n    editor.addUndoSnapshot(() => {\r\n        execCommand(editor, command);\r\n        editor.queryElements(\r\n            '[align]',\r\n            QueryScope.OnSelection,\r\n            node => (node.style.textAlign = align)\r\n        );\r\n    }, ChangeSource.Format);\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { ModeIndependentColor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set background color at current selection\r\n * @param editor The editor instance\r\n * @param color One of two options:\r\n * The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n * Alternatively, you can pass a @typedef ModeIndepenentColor. If in light mode, the lightModeColor property will be used.\r\n * If in dark mode, the darkModeColor will be used and the lightModeColor will be used when converting back to light mode.\r\n **/\r\nexport default function setBackgroundColor(editor: Editor, color: string | ModeIndependentColor) {\r\n    if (typeof color === 'string') {\r\n        const trimmedColor = color.trim();\r\n        applyInlineStyle(editor, (element, isInnerNode) => {\r\n            element.style.backgroundColor = isInnerNode ? '' : trimmedColor;\r\n        });\r\n    } else {\r\n        const darkMode = editor.isDarkMode();\r\n        const appliedColor = darkMode ? color.darkModeColor : color.lightModeColor;\r\n        applyInlineStyle(editor, (element, isInnerNode) => {\r\n            element.style.backgroundColor = isInnerNode ? '' : appliedColor;\r\n            if (darkMode) {\r\n                element.dataset.ogsb = color.lightModeColor;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import collapseSelectedBlocks from '../utils/collapseSelectedBlocks';\r\nimport { ChangeSource, Direction } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Change direction for the blocks/paragraph at selection\r\n * @param editor The editor instance\r\n * @param direction The direction option:\r\n * Direction.LeftToRight refers to 'ltr', Direction.RightToLeft refers to 'rtl'\r\n */\r\nexport default function setDirection(editor: Editor, direction: Direction) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot((start, end) => {\r\n        collapseSelectedBlocks(editor, element => {\r\n            element.setAttribute('dir', direction == Direction.LeftToRight ? 'ltr' : 'rtl');\r\n            element.style.textAlign = direction == Direction.LeftToRight ? 'left' : 'right';\r\n        });\r\n        editor.select(start, end);\r\n    }, ChangeSource.Format);\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Set font name at selection\r\n * @param editor The editor instance\r\n * @param fontName The fontName string, should be a valid CSS font-family style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nexport default function setFontName(editor: Editor, fontName: string) {\r\n    fontName = fontName.trim();\r\n    // The browser provided execCommand creates a HTML <font> tag with face attribute. <font> is not HTML5 standard\r\n    // (http://www.w3schools.com/tags/tag_font.asp). Use applyInlineStyle which gives flexibility on applying inline style\r\n    // for here, we use CSS font-family style\r\n    applyInlineStyle(editor, (element, isInnerNode) => {\r\n        element.style.fontFamily = isInnerNode ? '' : fontName;\r\n    });\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { getComputedStyle } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Set font size at selection\r\n * @param editor The editor instance\r\n * @param fontSize The fontSize string, should be a valid CSS font-size style.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n */\r\nexport default function setFontSize(editor: Editor, fontSize: string) {\r\n    fontSize = fontSize.trim();\r\n    // The browser provided execCommand only accepts 1-7 point value. In addition, it uses HTML <font> tag with size attribute.\r\n    // <font> is not HTML5 standard (http://www.w3schools.com/tags/tag_font.asp). Use applyInlineStyle which gives flexibility on applying inline style\r\n    // for here, we use CSS font-size style\r\n    applyInlineStyle(editor, (element, isInnerNode) => {\r\n        element.style.fontSize = isInnerNode ? '' : fontSize;\r\n        let lineHeight = getComputedStyle(element, 'line-height');\r\n        if (lineHeight != 'normal') {\r\n            element.style.lineHeight = 'normal';\r\n        }\r\n    });\r\n}\r\n","import { ChangeSource, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Set image alt text for all selected images at selection. If no images is contained\r\n * in selection, do nothing.\r\n * The alt attribute provides alternative information for an image if a user for some reason\r\n * cannot view it (because of slow connection, an error in the src attribute, or if the user\r\n * uses a screen reader). See https://www.w3schools.com/tags/att_img_alt.asp\r\n * @param editor The editor instance\r\n * @param altText The image alt text\r\n */\r\nexport default function setImageAltText(editor: Editor, altText: string) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(() => {\r\n        editor.queryElements('img', QueryScope.OnSelection, node =>\r\n            node.setAttribute('alt', altText)\r\n        );\r\n    }, ChangeSource.Format);\r\n}\r\n","import processList from '../utils/processList';\r\nimport { ChangeSource, DocumentCommand, Indentation, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Set indentation at selection\r\n * If selection contains bullet/numbering list, increase/decrease indentation will\r\n * increase/decrease the list level by one.\r\n * @param editor The editor instance\r\n * @param indentation The indentation option:\r\n * Indentation.Increase to increase indentation or Indentation.Decrease to decrease indentation\r\n */\r\nexport default function setIndentation(editor: Editor, indentation: Indentation) {\r\n    let command: DocumentCommand.Indent | DocumentCommand.Outdent =\r\n        indentation == Indentation.Increase ? DocumentCommand.Indent : DocumentCommand.Outdent;\r\n    editor.addUndoSnapshot(() => {\r\n        editor.focus();\r\n        let listNode = editor.getElementAtCursor('OL,UL');\r\n        let newNode: Node;\r\n\r\n        if (listNode) {\r\n            // There is already list node, setIndentation() will increase/decrease the list level,\r\n            // so we need to process the list when change indentation\r\n            newNode = processList(editor, command);\r\n        } else {\r\n            // No existing list node, browser will create <Blockquote> node for indentation.\r\n            // We need to set top and bottom margin to 0 to avoid unnecessary spaces\r\n            editor.getDocument().execCommand(command, false, null);\r\n            editor.queryElements('BLOCKQUOTE', QueryScope.OnSelection, node => {\r\n                newNode = newNode || node;\r\n                node.style.marginTop = '0px';\r\n                node.style.marginBottom = '0px';\r\n            });\r\n        }\r\n\r\n        return newNode;\r\n    }, ChangeSource.Format);\r\n}\r\n","import applyInlineStyle from '../utils/applyInlineStyle';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { ModeIndependentColor } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Set text color at selection\r\n * @param editor The editor instance\r\n * @param color One of two options:\r\n * The color string, can be any of the predefined color names (e.g, 'red')\r\n * or hexadecimal color string (e.g, '#FF0000') or rgb value (e.g, 'rgb(255, 0, 0)') supported by browser.\r\n * Currently there's no validation to the string, if the passed string is invalid, it won't take affect\r\n * Alternatively, you can pass a @typedef ModeIndepenentColor. If in light mode, the lightModeColor property will be used.\r\n * If in dark mode, the darkModeColor will be used and the lightModeColor will be used when converting back to light mode.\r\n */\r\nexport default function setTextColor(editor: Editor, color: string | ModeIndependentColor) {\r\n    if (typeof color === 'string') {\r\n        const trimmedColor = color.trim();\r\n        applyInlineStyle(editor, (element, isInnerNode) => {\r\n            element.style.color = isInnerNode ? '' : trimmedColor;\r\n        });\r\n    } else {\r\n        const darkMode = editor.isDarkMode();\r\n        const appliedColor = darkMode ? color.darkModeColor : color.lightModeColor;\r\n        applyInlineStyle(editor, (element, isInnerNode) => {\r\n            element.style.color = isInnerNode ? '' : appliedColor;\r\n            if (darkMode) {\r\n                element.dataset.ogsc = color.lightModeColor;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import toggleTagCore from '../utils/toggleTagCore';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\nconst BLOCKQUOTE_TAG = 'blockquote';\r\nconst DEFAULT_STYLER = (element: HTMLElement): void => {\r\n    element.style.borderLeft = '3px solid';\r\n    element.style.borderColor = '#C8C8C8';\r\n    element.style.paddingLeft = '10px';\r\n    element.style.color = '#666666';\r\n};\r\n\r\n/**\r\n * Toggle blockquote at selection, if selection already contains any blockquoted elements,\r\n * the blockquoted elements will be unblockquoted and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the blockquote element\r\n */\r\nexport default function toggleBlockQuote(editor: Editor, styler?: (element: HTMLElement) => void) {\r\n    toggleTagCore(editor, BLOCKQUOTE_TAG, styler || DEFAULT_STYLER);\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle bold at selection\r\n * If selection is collapsed, it will only affect the following input after caret\r\n * If selection contains only bold text, the bold style will be removed\r\n * If selection contains only normal text, bold style will be added to the whole selected text\r\n * If selection contains both bold and normal text, bold stle will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleBold(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.Bold);\r\n}\r\n","import processList from '../utils/processList';\r\nimport { ChangeSource, DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle bullet at selection\r\n * If selection contains bullet in deep level, toggle bullet will decrease the bullet level by one\r\n * If selection contains number list, toggle bullet will convert the number list into bullet list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * browser execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleBullet(editor: Editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(\r\n        () => processList(editor, DocumentCommand.InsertUnorderedList),\r\n        ChangeSource.Format\r\n    );\r\n}\r\n","import toggleTagCore from '../utils/toggleTagCore';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { getTagOfNode, unwrap, wrap } from 'roosterjs-editor-dom';\r\n\r\nconst PRE_TAG = 'pre';\r\nconst CODE_TAG = 'code';\r\nconst CODE_NODE_TAG = 'CODE';\r\n\r\n/**\r\n * Toggle code block at selection, if selection already contains any code blocked elements,\r\n * the code block elements will be no longer be code blocked and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param styler (Optional) The custom styler for setting the style for the code block element\r\n */\r\nexport default function toggleCodeBlock(\r\n    editor: Editor,\r\n    styler?: (element: HTMLElement) => void\r\n): void {\r\n    toggleTagCore(editor, PRE_TAG, styler, wrapFunction, unwrapFunction);\r\n}\r\n\r\nfunction wrapFunction(nodes: Node[]): HTMLElement {\r\n    let codeBlock = wrap(nodes, CODE_TAG);\r\n    return wrap(codeBlock, PRE_TAG);\r\n}\r\n\r\nfunction unwrapFunction(node: HTMLElement): Node {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n\r\n    let firstChild = node.childNodes[0];\r\n    if (node.childNodes.length == 1 && getTagOfNode(firstChild) == CODE_NODE_TAG) {\r\n        unwrap(firstChild);\r\n    }\r\n\r\n    return unwrap(node);\r\n}\r\n","import { ChangeSource, DocumentCommand, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { findClosestElementAncestor } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Toggle header at selection\r\n * @param editor The editor instance\r\n * @param level The header level, can be a number from 0 to 6, in which 1 ~ 6 refers to\r\n * the HTML header element &lt;H1&gt; to &lt;H6&gt;, 0 means no header\r\n * if passed in param is outside the range, will be rounded to nearest number in the range\r\n */\r\nexport default function toggleHeader(editor: Editor, level: number) {\r\n    level = Math.min(Math.max(Math.round(level), 0), 6);\r\n\r\n    editor.addUndoSnapshot(() => {\r\n        editor.focus();\r\n\r\n        let wrapped = false;\r\n        editor.queryElements('H1,H2,H3,H4,H5,H6', QueryScope.OnSelection, header => {\r\n            if (!wrapped) {\r\n                editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, '<DIV>');\r\n                wrapped = true;\r\n            }\r\n\r\n            let div = editor.getDocument().createElement('div');\r\n            while (header.firstChild) {\r\n                div.appendChild(header.firstChild);\r\n            }\r\n            editor.replaceNode(header, div);\r\n        });\r\n\r\n        if (level > 0) {\r\n            let traverser = editor.getSelectionTraverser();\r\n            let inlineElement = traverser ? traverser.currentInlineElement : null;\r\n            while (inlineElement) {\r\n                let element = findClosestElementAncestor(inlineElement.getContainerNode());\r\n                if (element) {\r\n                    element.style.fontSize = '';\r\n                }\r\n                inlineElement = traverser.getNextInlineElement();\r\n            }\r\n            editor.getDocument().execCommand(DocumentCommand.FormatBlock, false, `<H${level}>`);\r\n        }\r\n    }, ChangeSource.Format);\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle italic at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only italic text, the italic style will be removed\r\n * If selection contains only normal text, italic style will be added to the whole selected text\r\n * If selection contains both italic and normal text, italic stlye will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleItalic(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.Italic);\r\n}\r\n","import processList from '../utils/processList';\r\nimport { ChangeSource, DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle numbering at selection\r\n * If selection contains numbering in deep level, toggle numbering will decrease the numbering level by one\r\n * If selection contains bullet list, toggle numbering will convert the bullet list into number list\r\n * If selection contains both bullet/numbering and normal text, the behavior is decided by corresponding\r\n * realization of browser execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleNumbering(editor: Editor) {\r\n    editor.focus();\r\n    editor.addUndoSnapshot(\r\n        () => processList(editor, DocumentCommand.InsertOrderedList),\r\n        ChangeSource.Format\r\n    );\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle strikethrough at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only strikethrough text, the strikethrough style will be removed\r\n * If selection contains only normal text, strikethrough style will be added to the whole selected text\r\n * If selection contains both strikethrough and normal text, strikethrough stlye will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleStrikethrough(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.StrikeThrough);\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle subscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only subscript text, the subscript style will be removed\r\n * If selection contains only normal text, subscript style will be added to the whole selected text\r\n * If selection contains both subscript and normal text, the subscript style will be removed from whole selected text\r\n * If selection contains any superscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleSubscript(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.Subscript);\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle superscript at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only superscript text, the superscript style will be removed\r\n * If selection contains only normal text, superscript style will be added to the whole selected text\r\n * If selection contains both superscript and normal text, the superscript style will be removed from whole selected text\r\n * If selection contains any subscript text, the behavior is determined by corresponding realization of browser\r\n * execCommand API\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleSuperscript(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.Superscript);\r\n}\r\n","import execCommand from '../utils/execCommand';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Toggle underline at selection\r\n * If selection is collapsed, it will only affect the input after caret\r\n * If selection contains only underlined text, the underline style will be removed\r\n * If selection contains only normal text, underline style will be added to the whole selected text\r\n * If selection contains both underlined and normal text, the underline style will be added to the whole selected text\r\n * @param editor The editor instance\r\n */\r\nexport default function toggleUnderline(editor: Editor) {\r\n    execCommand(editor, DocumentCommand.Underline);\r\n}\r\n","export { default as changeFontSize, FONT_SIZES } from './format/changeFontSize';\r\nexport {\r\n    default as clearBlockFormat,\r\n    TAGS_TO_UNWRAP,\r\n    TAGS_TO_STOP_UNWRAP,\r\n    ATTRIBUTES_TO_PRESERVE,\r\n} from './format/clearBlockFormat';\r\nexport { default as clearFormat } from './format/clearFormat';\r\nexport { default as createLink } from './format/createLink';\r\nexport {\r\n    default as getFormatState,\r\n    getElementBasedFormatState,\r\n    getStyleBasedFormatState,\r\n} from './format/getFormatState';\r\nexport { default as insertImage } from './format/insertImage';\r\nexport { default as insertTable } from './table/insertTable';\r\nexport { default as editTable } from './table/editTable';\r\nexport { default as formatTable } from './table/formatTable';\r\nexport { default as removeLink } from './format/removeLink';\r\nexport { default as replaceWithNode } from './format/replaceWithNode';\r\nexport { default as setAlignment } from './format/setAlignment';\r\nexport { default as setBackgroundColor } from './format/setBackgroundColor';\r\nexport { default as setTextColor } from './format/setTextColor';\r\nexport { default as setDirection } from './format/setDirection';\r\nexport { default as setFontName } from './format/setFontName';\r\nexport { default as setFontSize } from './format/setFontSize';\r\nexport { default as setImageAltText } from './format/setImageAltText';\r\nexport { default as setIndentation } from './format/setIndentation';\r\nexport { default as toggleBold } from './format/toggleBold';\r\nexport { default as toggleBullet } from './format/toggleBullet';\r\nexport { default as toggleItalic } from './format/toggleItalic';\r\nexport { default as toggleNumbering } from './format/toggleNumbering';\r\nexport { default as toggleBlockQuote } from './format/toggleBlockQuote';\r\nexport { default as toggleCodeBlock } from './format/toggleCodeBlock';\r\nexport { default as toggleStrikethrough } from './format/toggleStrikethrough';\r\nexport { default as toggleSubscript } from './format/toggleSubscript';\r\nexport { default as toggleSuperscript } from './format/toggleSuperscript';\r\nexport { default as toggleUnderline } from './format/toggleUnderline';\r\nexport { default as toggleHeader } from './format/toggleHeader';\r\n\r\n// @deprecated the function getPendableFormatState will still be available from\r\n// roosterjs-editor-dom package, keep export it here just for compatibility\r\nexport { getPendableFormatState } from 'roosterjs-editor-dom';\r\n","import { ChangeSource, TableOperation } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { VTable } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Edit table with given operation. If there is no table at cursor then no op.\r\n * @param editor The editor instance\r\n * @param operation Table operation\r\n */\r\nexport default function editTable(editor: Editor, operation: TableOperation) {\r\n    let td = editor.getElementAtCursor('TD,TH') as HTMLTableCellElement;\r\n    if (td) {\r\n        editor.addUndoSnapshot((start, end) => {\r\n            let vtable = new VTable(td);\r\n            vtable.edit(operation);\r\n            vtable.writeBack();\r\n            editor.focus();\r\n\r\n            if (!editor.select(start, end)) {\r\n                editor.select(editor.contains(td) ? td : vtable.getCurrentTd());\r\n            }\r\n        }, ChangeSource.Format);\r\n    }\r\n}\r\n","import { ChangeSource, TableFormat } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { VTable } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Format table\r\n * @param editor The editor which contains the table to format\r\n * @param format A TableFormat object contains format information we want to apply to the table\r\n * @param table The table to format. This is optional. When not passed, the current table (if any) will be formatted\r\n */\r\nexport default function formatTable(\r\n    editor: Editor,\r\n    format: Partial<TableFormat>,\r\n    table?: HTMLTableElement\r\n) {\r\n    table = table || (editor.getElementAtCursor('TABLE') as HTMLTableElement);\r\n    if (table) {\r\n        editor.addUndoSnapshot((start, end) => {\r\n            let vtable = new VTable(table);\r\n            vtable.applyFormat(format);\r\n            vtable.writeBack();\r\n            editor.focus();\r\n            editor.select(start, end);\r\n        }, ChangeSource.Format);\r\n    }\r\n}\r\n","import { ChangeSource, PositionType, TableFormat } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { Position, VTable } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Insert table into editor at current selection\r\n * @param editor The editor instance\r\n * @param columns Number of columns in table, it also controls the default table cell width:\r\n * if columns &lt;= 4, width = 120px; if columns &lt;= 6, width = 100px; else width = 70px\r\n * @param rows Number of rows in table\r\n * @param format (Optional) The table format. If not passed, the default format will be applied:\r\n * background color: #FFF; border color: #ABABAB\r\n */\r\nexport default function insertTable(\r\n    editor: Editor,\r\n    columns: number,\r\n    rows: number,\r\n    format?: TableFormat\r\n) {\r\n    let document = editor.getDocument();\r\n    let fragment = document.createDocumentFragment();\r\n    let table = document.createElement('table') as HTMLTableElement;\r\n    fragment.appendChild(table);\r\n    table.cellSpacing = '0';\r\n    table.cellPadding = '1';\r\n    for (let i = 0; i < rows; i++) {\r\n        let tr = document.createElement('tr') as HTMLTableRowElement;\r\n        table.appendChild(tr);\r\n        for (let j = 0; j < columns; j++) {\r\n            let td = document.createElement('td') as HTMLTableCellElement;\r\n            tr.appendChild(td);\r\n            td.appendChild(document.createElement('br'));\r\n            td.style.width = getTableCellWidth(columns);\r\n        }\r\n    }\r\n\r\n    editor.focus();\r\n    editor.addUndoSnapshot(() => {\r\n        let vtable = new VTable(table);\r\n        vtable.applyFormat(\r\n            format || {\r\n                bgColorEven: '#FFF',\r\n                bgColorOdd: '#FFF',\r\n                topBorderColor: '#ABABAB',\r\n                bottomBorderColor: '#ABABAB',\r\n                verticalBorderColor: '#ABABAB',\r\n            }\r\n        );\r\n        vtable.writeBack();\r\n        editor.insertNode(fragment);\r\n        editor.runAsync(() => editor.select(new Position(table, PositionType.Begin).normalize()));\r\n    }, ChangeSource.Format);\r\n}\r\n\r\nfunction getTableCellWidth(columns: number): string {\r\n    if (columns <= 4) {\r\n        return '120px';\r\n    } else if (columns <= 6) {\r\n        return '100px';\r\n    } else {\r\n        return '70px';\r\n    }\r\n}\r\n","import { applyTextStyle, getTagOfNode } from 'roosterjs-editor-dom';\r\nimport { ChangeSource, NodeType, PositionType } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\n\r\nconst ZERO_WIDTH_SPACE = '\\u200B';\r\n\r\n/**\r\n * Apply inline style to current selection\r\n * @param editor The editor instance\r\n * @param callback The callback function to apply style\r\n */\r\nexport default function applyInlineStyle(\r\n    editor: Editor,\r\n    callback: (element: HTMLElement, isInnerNode?: boolean) => any\r\n) {\r\n    editor.focus();\r\n    let range = editor.getSelectionRange();\r\n\r\n    if (range && range.collapsed) {\r\n        let node = range.startContainer;\r\n        let isEmptySpan =\r\n            getTagOfNode(node) == 'SPAN' &&\r\n            (!node.firstChild ||\r\n                (getTagOfNode(node.firstChild) == 'BR' && !node.firstChild.nextSibling));\r\n        if (isEmptySpan) {\r\n            editor.addUndoSnapshot();\r\n            callback(node as HTMLElement);\r\n        } else {\r\n            let isZWSNode =\r\n                node &&\r\n                node.nodeType == NodeType.Text &&\r\n                node.nodeValue == ZERO_WIDTH_SPACE &&\r\n                getTagOfNode(node.parentNode) == 'SPAN';\r\n\r\n            if (!isZWSNode) {\r\n                editor.addUndoSnapshot();\r\n                // Create a new text node to hold the selection.\r\n                // Some content is needed to position selection into the span\r\n                // for here, we inject ZWS - zero width space\r\n                node = editor.getDocument().createTextNode(ZERO_WIDTH_SPACE);\r\n                range.insertNode(node);\r\n            }\r\n\r\n            applyTextStyle(node, callback);\r\n            editor.select(node, PositionType.End);\r\n        }\r\n    } else {\r\n        // This is start and end node that get the style. The start and end needs to be recorded so that selection\r\n        // can be re-applied post-applying style\r\n        editor.addUndoSnapshot(() => {\r\n            let firstNode: Node;\r\n            let lastNode: Node;\r\n            let contentTraverser = editor.getSelectionTraverser();\r\n            let inlineElement = contentTraverser && contentTraverser.currentInlineElement;\r\n            while (inlineElement) {\r\n                let nextInlineElement = contentTraverser.getNextInlineElement();\r\n                inlineElement.applyStyle((element, isInnerNode) => {\r\n                    callback(element, isInnerNode);\r\n                    firstNode = firstNode || element;\r\n                    lastNode = element;\r\n                });\r\n                inlineElement = nextInlineElement;\r\n            }\r\n            if (firstNode && lastNode) {\r\n                editor.select(firstNode, PositionType.Before, lastNode, PositionType.After);\r\n            }\r\n        }, ChangeSource.Format);\r\n    }\r\n}\r\n","import { BlockElement, NodeType } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { getTagOfNode, StartEndBlockElement } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Collapse all selected blocks, return single HTML elements for each block\r\n * @param editor The editor instance\r\n * @param forEachCallback A callback function to invoke for each of the collapsed element\r\n */\r\nexport default function collapseSelectedBlocked(\r\n    editor: Editor,\r\n    forEachCallback: (element: HTMLElement) => any\r\n) {\r\n    let traverser = editor.getSelectionTraverser();\r\n    let block = traverser && traverser.currentBlockElement;\r\n    let blocks: BlockElement[] = [];\r\n    while (block) {\r\n        if (!isEmptyBlockUnderTR(block)) {\r\n            blocks.push(block);\r\n        }\r\n        block = traverser.getNextBlockElement();\r\n    }\r\n\r\n    blocks.forEach(block => {\r\n        let element = block.collapseToSingleElement();\r\n        forEachCallback(element);\r\n    });\r\n}\r\n\r\nfunction isEmptyBlockUnderTR(block: BlockElement): boolean {\r\n    let startNode = block.getStartNode();\r\n\r\n    return (\r\n        block instanceof StartEndBlockElement &&\r\n        startNode == block.getEndNode() &&\r\n        startNode.nodeType == NodeType.Text &&\r\n        ['TR', 'TABLE'].indexOf(getTagOfNode(startNode.parentNode)) >= 0\r\n    );\r\n}\r\n","import { ChangeSource, DocumentCommand, PluginEventType } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport {\r\n    getPendableFormatState,\r\n    PendableFormatCommandMap,\r\n    PendableFormatNames,\r\n} from 'roosterjs-editor-dom';\r\n\r\nlet pendableFormatCommands: string[] = null;\r\n\r\n/**\r\n * Execute a document command\r\n * @param editor The editor instance\r\n * @param command The command to execute\r\n * @param addUndoSnapshotWhenCollapsed Optional, set to true to always add undo snapshot even current selection is collapsed.\r\n * Default value is false.\r\n * @param doWorkaroundForList Optional, set to true to do workaround for list in order to keep current format.\r\n * Default value is false.\r\n */\r\nexport default function execCommand(editor: Editor, command: DocumentCommand) {\r\n    editor.focus();\r\n    let formatter = () => editor.getDocument().execCommand(command, false, null);\r\n\r\n    let range = editor.getSelectionRange();\r\n    if (range && range.collapsed) {\r\n        editor.addUndoSnapshot();\r\n        formatter();\r\n\r\n        if (isPendableFormatCommand(command)) {\r\n            // Trigger PendingFormatStateChanged event since we changed pending format state\r\n            editor.triggerPluginEvent(PluginEventType.PendingFormatStateChanged, {\r\n                formatState: getPendableFormatState(editor.getDocument()),\r\n            });\r\n        }\r\n    } else {\r\n        editor.addUndoSnapshot(formatter, ChangeSource.Format);\r\n    }\r\n}\r\n\r\nfunction isPendableFormatCommand(command: DocumentCommand): boolean {\r\n    if (!pendableFormatCommands) {\r\n        pendableFormatCommands = Object.keys(PendableFormatCommandMap).map(\r\n            key => PendableFormatCommandMap[key as PendableFormatNames]\r\n        );\r\n    }\r\n    return pendableFormatCommands.indexOf(command) >= 0;\r\n}\r\n","import { DocumentCommand } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport {\r\n    fromHtml,\r\n    isVoidHtmlElement,\r\n    isBlockElement,\r\n    Browser,\r\n    getSelectionPath,\r\n    getRangeFromSelectionPath,\r\n} from 'roosterjs-editor-dom';\r\n\r\nconst TEMP_NODE_CLASS = 'ROOSTERJS_TEMP_NODE_FOR_LIST';\r\nconst TEMP_NODE_HTML = \"<img class=\\\"\" + TEMP_NODE_CLASS + \"\\\">\";\r\n\r\ntype ValidProcessListDocumentCommands =\r\n    DocumentCommand.Outdent |\r\n    DocumentCommand.Indent |\r\n    DocumentCommand.InsertOrderedList |\r\n    DocumentCommand.InsertUnorderedList;\r\n\r\n/**\r\n * Browsers don't handle bullet/numbering list well, especially the formats when switching list statue\r\n * So we workaround it by always adding format to list element\r\n */\r\nexport default function processList(editor: Editor, command: ValidProcessListDocumentCommands): Node {\r\n    let clonedNode: Node;\r\n    let relativeSelectionPath;\r\n    if (Browser.isChrome && command == DocumentCommand.Outdent) {\r\n        const parentLINode =  editor.getElementAtCursor('LI');\r\n        if (parentLINode) {\r\n            let currentRange = editor.getSelectionRange();\r\n            if (\r\n                currentRange.collapsed ||\r\n                (\r\n                    editor.getElementAtCursor('LI', currentRange.startContainer) == parentLINode &&\r\n                    editor.getElementAtCursor('LI', currentRange.endContainer) == parentLINode\r\n                )\r\n            ) {\r\n                relativeSelectionPath = getSelectionPath(parentLINode, currentRange);\r\n                // Chrome has some bad behavior when outdenting\r\n                // in order to work around this, we need to take steps to deep clone the current node\r\n                // after the outdent, we'll replace the new LI with the cloned content.\r\n                clonedNode =  parentLINode.cloneNode(true);\r\n            }\r\n        }\r\n\r\n        workaroundForChrome(editor);\r\n    }\r\n\r\n    let existingList = editor.getElementAtCursor('OL,UL');\r\n    editor.getDocument().execCommand(command, false, null);\r\n    let newParentNode: Node;\r\n    editor.queryElements('.' + TEMP_NODE_CLASS, node => {\r\n        newParentNode = node.parentNode;\r\n        editor.deleteNode(node);\r\n    });\r\n    let newList = editor.getElementAtCursor('OL,UL');\r\n    if (newList == existingList) {\r\n        newList = null;\r\n    }\r\n\r\n    if (newList && clonedNode && newParentNode) {\r\n        // if the clonedNode and the newLIParent share the same tag name\r\n        // we can 1:1 swap them\r\n        if ((clonedNode instanceof HTMLElement)) {\r\n            if (newParentNode instanceof HTMLElement && clonedNode.tagName == newParentNode.tagName) {\r\n                newList.replaceChild(clonedNode, newParentNode);\r\n            }\r\n            if (relativeSelectionPath && document.body.contains(clonedNode)) {\r\n                let newRange = getRangeFromSelectionPath(clonedNode, relativeSelectionPath);\r\n                editor.select(newRange);\r\n            }\r\n\r\n        }\r\n        // The alternative case is harder to solve, but we didn't specifically handle this before either.\r\n    }\r\n\r\n    return newList;\r\n}\r\n\r\nfunction workaroundForChrome(editor: Editor) {\r\n    let traverser = editor.getSelectionTraverser();\r\n    let block = traverser && traverser.currentBlockElement;\r\n    while (block) {\r\n        let container = block.getStartNode();\r\n\r\n        if (container) {\r\n            // Add a temp <IMG> tag before all other nodes in the block to avoid Chrome remove existing format when toggle list\r\n            const tempNode = fromHtml(TEMP_NODE_HTML, editor.getDocument())[0];\r\n            if (isVoidHtmlElement(container) || !isBlockElement(container)) {\r\n                container.parentNode.insertBefore(tempNode, container);\r\n            } else {\r\n                container.insertBefore(tempNode, container.firstChild);\r\n            }\r\n        }\r\n\r\n        block = traverser.getNextBlockElement();\r\n    }\r\n}\r\n","import { ChangeSource, PositionType, QueryScope } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport {\r\n    Browser,\r\n    Position,\r\n    wrap,\r\n    unwrap,\r\n    fromHtml,\r\n    getTagOfNode,\r\n    splitBalancedNodeRange,\r\n} from 'roosterjs-editor-dom';\r\n\r\nconst ZERO_WIDTH_SPACE = '&#8203;';\r\nconst UNWRAPPABLE_NODES = 'LI,THEAD,TBODY,TR,TD,TH'.split(',');\r\nconst DEFAULT_STYLER = (_: HTMLElement) => {};\r\n\r\n/**\r\n * Toggle a tag at selection, if selection already contains elements of such tag,\r\n * the elements will be untagge and other elements will take no affect\r\n * @param editor The editor instance\r\n * @param tag The tag name\r\n * @param styler (Optional) The styler for setting the style for the blockquote element\r\n * @param wrapFunction (Optional) The wrap function\r\n * @param unwrapFunction (Optional) The unwrap function\r\n */\r\nexport default function toggleTagCore<T extends keyof HTMLElementTagNameMap>(\r\n    editor: Editor,\r\n    tag: T,\r\n    styler?: (element: HTMLElement) => void,\r\n    wrapFunction: (nodes: Node[]) => HTMLElement = nodes => wrap(nodes, tag),\r\n    unwrapFunction: (node: Node) => Node = unwrap\r\n): void {\r\n    editor.focus();\r\n    editor.addUndoSnapshot((start, end) => {\r\n        let result: HTMLElement;\r\n        let range = editor.getSelectionRange();\r\n        if (\r\n            range &&\r\n            editor.queryElements(tag, QueryScope.OnSelection, unwrapFunction).length == 0\r\n        ) {\r\n            let startNode = Position.getStart(range).normalize().node;\r\n            let startBlock = editor.getBlockElementAtNode(startNode);\r\n            let endNode = Position.getEnd(range).normalize().node;\r\n            let endBlock = editor.getBlockElementAtNode(endNode);\r\n            let nodes =\r\n                startBlock && endBlock\r\n                    ? editor.collapseNodes(\r\n                          startBlock.getStartNode(),\r\n                          endBlock.getEndNode(),\r\n                          true /*canSplitParent*/\r\n                      )\r\n                    : [];\r\n\r\n            if (nodes.length == 0) {\r\n                // Selection is collapsed and blockElement is null, we need to create an empty div.\r\n                // In case of IE and Edge, we insert ZWS to put cursor in the div, otherwise insert BR node.\r\n                nodes = fromHtml(\r\n                    `<DIV>${Browser.isIEOrEdge ? ZERO_WIDTH_SPACE : '<BR>'}</DIV>`,\r\n                    editor.getDocument()\r\n                );\r\n                editor.insertNode(nodes[0]);\r\n                editor.select(nodes[0], PositionType.Begin);\r\n            } else if (nodes.length == 1) {\r\n                let tag = getTagOfNode(nodes[0]);\r\n                if (tag == 'BR') {\r\n                    nodes = [wrap(nodes[0])];\r\n                } else if (tag == 'LI' || tag == 'TD') {\r\n                    nodes = [].slice.call(nodes[0].childNodes) as Node[];\r\n                }\r\n            } else {\r\n                while (\r\n                    nodes[0] &&\r\n                    editor.contains(nodes[0].parentNode) &&\r\n                    nodes.some(node => UNWRAPPABLE_NODES.indexOf(getTagOfNode(node)) >= 0)\r\n                ) {\r\n                    nodes = [splitBalancedNodeRange(nodes)];\r\n                }\r\n            }\r\n\r\n            result = wrapFunction(nodes);\r\n            (styler || DEFAULT_STYLER)(result);\r\n        }\r\n\r\n        if (!editor.select(start, end) && result) {\r\n            editor.select(result);\r\n        }\r\n\r\n        return result;\r\n    }, ChangeSource.Format);\r\n}\r\n","import EditorCore, { AttachDomEvent } from '../interfaces/EditorCore';\r\nimport isCharacterValue from '../eventApi/isCharacterValue';\r\nimport { PluginDomEvent, PluginEventType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Attach a DOM event to the editor content DIV\r\n * @param core The EditorCore object\r\n * @param eventName The DOM event name\r\n * @param pluginEventType Optional event type. When specified, editor will trigger a plugin event with this name when the DOM event is triggered\r\n * @param beforeDispatch Optional callback function to be invoked when the DOM event is triggered before trigger plugin event\r\n */\r\nexport const attachDomEvent: AttachDomEvent = (\r\n    core: EditorCore,\r\n    eventName: string,\r\n    pluginEventType?: PluginEventType,\r\n    beforeDispatch?: (event: UIEvent) => void\r\n) => {\r\n    let onEvent = (event: UIEvent) => {\r\n        // Stop propagation of a printable keyboard event (a keyboard event which is caused by printable char input).\r\n        // This detection is not 100% accurate. event.key is not fully supported by all browsers, and in some browsers (e.g. IE),\r\n        // event.key is longer than 1 for num pad input. But here we just want to improve performance as much as possible.\r\n        // So if we missed some case here it is still acceptable.\r\n        if (\r\n            (isKeyboardEvent(event) && isCharacterValue(event)) ||\r\n            pluginEventType == PluginEventType.Input\r\n        ) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (beforeDispatch) {\r\n            beforeDispatch(event);\r\n        }\r\n        if (pluginEventType != null) {\r\n            core.api.triggerEvent(\r\n                core,\r\n                <PluginDomEvent>{\r\n                    eventType: pluginEventType,\r\n                    rawEvent: event,\r\n                },\r\n                false /*broadcast*/\r\n            );\r\n        }\r\n    };\r\n    core.contentDiv.addEventListener(eventName, onEvent);\r\n    return () => {\r\n        core.contentDiv.removeEventListener(eventName, onEvent);\r\n    };\r\n};\r\n\r\nfunction isKeyboardEvent(e: UIEvent): e is KeyboardEvent {\r\n    return e.type == 'keydown' || e.type == 'keypress' || e.type == 'keyup';\r\n}\r\n","import { DefaultFormat } from 'roosterjs-editor-types';\nimport { getComputedStyles } from 'roosterjs-editor-dom';\n\nconst DARK_MODE_DEFAULT_FORMAT = {\n    backgroundColors: {\n        darkModeColor: 'rgb(51,51,51)',\n        lightModeColor: 'rgb(255,255,255)',\n    },\n    textColors: {\n        darkModeColor: 'rgb(255,255,255)',\n        lightModeColor: 'rgb(0,0,0)',\n    }\n}\n\nexport function calculateDefaultFormat(\n    node: Node,\n    baseFormat: DefaultFormat,\n    inDarkMode: boolean\n): DefaultFormat {\n    if (inDarkMode) {\n        if (!baseFormat.backgroundColors) {\n            baseFormat.backgroundColors = DARK_MODE_DEFAULT_FORMAT.backgroundColors;\n        }\n        if (!baseFormat.textColors) {\n            baseFormat.textColors = DARK_MODE_DEFAULT_FORMAT.textColors;\n        }\n    }\n\n    if (baseFormat && Object.keys(baseFormat).length === 0) {\n        return {};\n    }\n\n    baseFormat = baseFormat || <DefaultFormat>{};\n    let {\n        fontFamily,\n        fontSize,\n        textColor,\n        textColors,\n        backgroundColor,\n        backgroundColors,\n        bold,\n        italic,\n        underline,\n    } = baseFormat;\n    let currentStyles =\n        fontFamily && fontSize && (textColor || textColors) ? null : getComputedStyles(node);\n    return {\n        fontFamily: fontFamily || currentStyles[0],\n        fontSize: fontSize || currentStyles[1],\n        get textColor() {\n            return textColors\n                ? inDarkMode\n                    ? textColors.darkModeColor\n                    : textColors.lightModeColor\n                : textColor || currentStyles[2];\n        },\n        textColors: textColors,\n        get backgroundColor() {\n            return backgroundColors\n                ? inDarkMode\n                    ? backgroundColors.darkModeColor\n                    : backgroundColors.lightModeColor\n                : backgroundColor || '';\n        },\n        backgroundColors: backgroundColors,\n        bold: bold,\n        italic: italic,\n        underline: underline,\n    };\n}","import EditorCore, { EditWithUndo } from '../interfaces/EditorCore';\r\nimport { Position } from 'roosterjs-editor-dom';\r\nimport {\r\n    ChangeSource,\r\n    ContentChangedEvent,\r\n    NodePosition,\r\n    PluginEventType,\r\n} from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Call an editing callback with adding undo snapshots around, and trigger a ContentChanged event if change source is specified.\r\n * Undo snapshot will not be added if this call is nested inside another editWithUndo() call.\r\n * @param core The EditorCore object\r\n * @param callback The editing callback, accepting current selection start and end position, returns an optional object used as the data field of ContentChangedEvent.\r\n * @param changeSource The ChangeSource string of ContentChangedEvent. @default ChangeSource.Format. Set to null to avoid triggering ContentChangedEvent\r\n */\r\nexport const editWithUndo: EditWithUndo = (\r\n    core: EditorCore,\r\n    callback: (start: NodePosition, end: NodePosition, snapshotBeforeCallback: string) => any,\r\n    changeSource: ChangeSource | string\r\n) => {\r\n    let isNested = core.currentUndoSnapshot !== null;\r\n    let data: any;\r\n\r\n    if (!isNested) {\r\n        core.currentUndoSnapshot = core.corePlugins.undo.addUndoSnapshot();\r\n    }\r\n\r\n    try {\r\n        if (callback) {\r\n            let range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\r\n            data = callback(\r\n                range && Position.getStart(range).normalize(),\r\n                range && Position.getEnd(range).normalize(),\r\n                core.currentUndoSnapshot\r\n            );\r\n\r\n            if (!isNested) {\r\n                core.corePlugins.undo.addUndoSnapshot();\r\n            }\r\n        }\r\n    } finally {\r\n        if (!isNested) {\r\n            core.currentUndoSnapshot = null;\r\n        }\r\n    }\r\n\r\n    if (callback && changeSource) {\r\n        let event: ContentChangedEvent = {\r\n            eventType: PluginEventType.ContentChanged,\r\n            source: changeSource,\r\n            data: data,\r\n        };\r\n        core.api.triggerEvent(core, event, true /*broadcast*/);\r\n    }\r\n};\r\n","import EditorCore, { Focus } from '../interfaces/EditorCore';\r\nimport { createRange, getFirstLeafNode } from 'roosterjs-editor-dom';\r\nimport { PositionType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Focus to editor. If there is a cached selection range, use it as current selection\r\n * @param core The EditorCore object\r\n */\r\nexport const focus: Focus = (core: EditorCore) => {\r\n    if (!core.api.hasFocus(core) || !core.api.getSelectionRange(core, false /*tryGetFromCache*/)) {\r\n        // Focus (document.activeElement indicates) and selection are mostly in sync, but could be out of sync in some extreme cases.\r\n        // i.e. if you programmatically change window selection to point to a non-focusable DOM element (i.e. tabindex=-1 etc.).\r\n        // On Chrome/Firefox, it does not change document.activeElement. On Edge/IE, it change document.activeElement to be body\r\n        // Although on Chrome/Firefox, document.activeElement points to editor, you cannot really type which we don't want (no cursor).\r\n        // So here we always do a live selection pull on DOM and make it point in Editor. The pitfall is, the cursor could be reset\r\n        // to very begin to of editor since we don't really have last saved selection (created on blur which does not fire in this case).\r\n        // It should be better than the case you cannot type\r\n        if (\r\n            !core.cachedSelectionRange ||\r\n            !core.api.selectRange(core, core.cachedSelectionRange, true /*skipSameRange*/)\r\n        ) {\r\n            let node = getFirstLeafNode(core.contentDiv) || core.contentDiv;\r\n            core.api.selectRange(\r\n                core,\r\n                createRange(node, PositionType.Begin),\r\n                true /*skipSameRange*/\r\n            );\r\n        }\r\n    }\r\n\r\n    // remember to clear cachedSelectionRange\r\n    core.cachedSelectionRange = null;\r\n\r\n    // This is more a fallback to ensure editor gets focus if it didn't manage to move focus to editor\r\n    if (!core.api.hasFocus(core)) {\r\n        core.contentDiv.focus();\r\n    }\r\n};\r\n","import EditorCore, { GetCustomData } from '../interfaces/EditorCore';\r\n\r\n/**\r\n * Get custom data related with this editor\r\n * @param core The EditorCore object\r\n * @param key Key of the custom data\r\n * @param getter Getter function. If custom data for the given key doesn't exist,\r\n * call this function to get one and store it if it is specified. Otherwise return undefined\r\n * @param disposer An optional disposer function to dispose this custom data when\r\n * dispose editor.\r\n */\r\nexport const getCustomData: GetCustomData = <T>(\r\n    core: EditorCore,\r\n    key: string,\r\n    getter: () => T,\r\n    disposer?: (value: T) => void\r\n): T => {\r\n    return (core.customData[key] = core.customData[key] || {\r\n        value: getter ? getter() : undefined,\r\n        disposer,\r\n    }).value as T;\r\n};\r\n","import EditorCore, { GetSelectionRange } from '../interfaces/EditorCore';\r\nimport { contains } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Get current or cached selection range\r\n * @param core The EditorCore object\r\n * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now\r\n * @returns A Range object of the selection range\r\n */\r\nexport const getSelectionRange: GetSelectionRange = (\r\n    core: EditorCore,\r\n    tryGetFromCache: boolean\r\n) => {\r\n    let result: Range = null;\r\n\r\n    if (!tryGetFromCache || core.api.hasFocus(core)) {\r\n        let selection = core.document.defaultView.getSelection();\r\n        if (selection && selection.rangeCount > 0) {\r\n            let range = selection.getRangeAt(0);\r\n            if (contains(core.contentDiv, range)) {\r\n                result = range;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!result && tryGetFromCache) {\r\n        result = core.cachedSelectionRange;\r\n    }\r\n\r\n    return result;\r\n};\r\n","import EditorCore, { HasFocus } from '../interfaces/EditorCore';\r\nimport { contains } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Check if the editor has focus now\r\n * @param core The EditorCore object\r\n * @returns True if the editor has focus, otherwise false\r\n */\r\nexport const hasFocus: HasFocus = (core: EditorCore) => {\r\n    let activeElement = core.document.activeElement;\r\n    return (\r\n        activeElement && contains(core.contentDiv, activeElement, true /*treatSameNodeAsContain*/)\r\n    );\r\n};\r\n","import EditorCore, { InsertNode } from '../interfaces/EditorCore';\nimport {\n    ContentPosition,\n    InsertOption,\n    NodeType,\n    PositionType,\n    BlockElement,\n} from 'roosterjs-editor-types';\nimport {\n    Position,\n    getBlockElementAtNode,\n    getFirstLastBlockElement,\n    isBlockElement,\n    isVoidHtmlElement,\n    wrap,\n    adjustNodeInsertPosition,\n    createRange,\n} from 'roosterjs-editor-dom';\n\nfunction getInitialRange(\n    core: EditorCore,\n    option: InsertOption\n): { range: Range; rangeToRestore: Range } {\n    // Selection start replaces based on the current selection.\n    // Range inserts based on a provided range.\n    // Both have the potential to use the current selection to restore cursor position\n    // So in both cases we need to store the selection state.\n    let range = core.api.getSelectionRange(core, true /*tryGetFromCache*/);\n    let rangeToRestore = null;\n    if (option.position == ContentPosition.Range) {\n        rangeToRestore = range;\n        range = option.range;\n    } else if (range) {\n        rangeToRestore = range.cloneRange();\n    }\n\n    return { range, rangeToRestore };\n}\n\n/**\n * Insert a DOM node into editor content\n * @param core The EditorCore object. No op if null.\n * @param option An insert option object to specify how to insert the node\n */\nexport const insertNode: InsertNode = (core: EditorCore, node: Node, option: InsertOption) => {\n    option = option || {\n        position: ContentPosition.SelectionStart,\n        insertOnNewLine: false,\n        updateCursor: true,\n        replaceSelection: true,\n    };\n    let contentDiv = core.contentDiv;\n\n    if (option.updateCursor) {\n        core.api.focus(core);\n    }\n\n    switch (option.position) {\n        case ContentPosition.Begin:\n        case ContentPosition.End:\n            let isBegin = option.position == ContentPosition.Begin;\n            let block = getFirstLastBlockElement(contentDiv, isBegin);\n            let insertedNode: Node;\n            if (block) {\n                let refNode = isBegin ? block.getStartNode() : block.getEndNode();\n                if (\n                    option.insertOnNewLine ||\n                    refNode.nodeType == NodeType.Text ||\n                    isVoidHtmlElement(refNode)\n                ) {\n                    // For insert on new line, or refNode is text or void html element (HR, BR etc.)\n                    // which cannot have children, i.e. <div>hello<br>world</div>. 'hello', 'world' are the\n                    // first and last node. Insert before 'hello' or after 'world', but still inside DIV\n                    insertedNode = refNode.parentNode.insertBefore(\n                        node,\n                        isBegin ? refNode : refNode.nextSibling\n                    );\n                } else {\n                    // if the refNode can have child, use appendChild (which is like to insert as first/last child)\n                    // i.e. <div>hello</div>, the content will be inserted before/after hello\n                    insertedNode = refNode.insertBefore(node, isBegin ? refNode.firstChild : null);\n                }\n            } else {\n                // No first block, this can happen when editor is empty. Use appendChild to insert the content in contentDiv\n                insertedNode = contentDiv.appendChild(node);\n            }\n\n            // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\n            // add a DIV wrapping\n            if (insertedNode && option.insertOnNewLine && !isBlockElement(insertedNode)) {\n                wrap(insertedNode);\n            }\n\n            break;\n        case ContentPosition.Range:\n        case ContentPosition.SelectionStart:\n            let { range, rangeToRestore } = getInitialRange(core, option);\n\n            if (!range) {\n                return;\n            }\n\n            // if to replace the selection and the selection is not collapsed, remove the the content at selection first\n            if (option.replaceSelection && !range.collapsed) {\n                range.deleteContents();\n            }\n\n            let pos = Position.getStart(range);\n            let blockElement: BlockElement;\n\n            if (\n                option.insertOnNewLine &&\n                (blockElement = getBlockElementAtNode(contentDiv, pos.normalize().node))\n            ) {\n                pos = new Position(blockElement.getEndNode(), PositionType.After);\n            } else {\n                pos = adjustNodeInsertPosition(contentDiv, node, pos);\n            }\n\n            let nodeForCursor = node.nodeType == NodeType.DocumentFragment ? node.lastChild : node;\n            range = createRange(pos);\n            range.insertNode(node);\n            if (option.updateCursor && nodeForCursor) {\n                rangeToRestore = createRange(\n                    new Position(nodeForCursor, PositionType.After).normalize()\n                );\n            }\n            core.api.selectRange(core, rangeToRestore);\n\n            break;\n        case ContentPosition.Outside:\n            core.contentDiv.parentNode.insertBefore(node, contentDiv.nextSibling);\n            break;\n    }\n\n    return true;\n};\n","import EditorCore, { Select, SelectRange } from '../interfaces/EditorCore';\nimport { Browser, contains, createRange } from 'roosterjs-editor-dom';\nimport { hasFocus } from './hasFocus';\n\n/**\n * Change the editor selection to the given range\n * @param core The EditorCore object\n * @param range The range to select\n * @param skipSameRange When set to true, do nothing if the given range is the same with current selection\n * in editor, otherwise it will always remove current selection ranage and set to the given one.\n * This parameter is always treat as true in Edge to avoid some weird runtime exception.\n */\nexport const selectRange: SelectRange = (\n    core: EditorCore,\n    range: Range,\n    skipSameRange?: boolean\n) => {\n    let selection: Selection;\n    let needAddRange = true;\n\n    if (\n        !contains(core.contentDiv, range) ||\n        !(selection = core.document.defaultView.getSelection())\n    ) {\n        return false;\n    }\n\n    if (selection.rangeCount > 0) {\n        // Workaround IE exception 800a025e\n        try {\n            let currentRange: Range;\n            // Do not remove/add range if current selection is the same with target range\n            // Without this check, execCommand() may fail in Edge since we changed the selection\n            if (\n                (skipSameRange || Browser.isEdge) &&\n                (currentRange = selection.rangeCount == 1 ? selection.getRangeAt(0) : null) &&\n                currentRange.startContainer == range.startContainer &&\n                currentRange.startOffset == range.startOffset &&\n                currentRange.endContainer == range.endContainer &&\n                currentRange.endOffset == range.endOffset\n            ) {\n                needAddRange = false;\n            } else {\n                selection.removeAllRanges();\n            }\n        } catch (e) {}\n    }\n\n    if (needAddRange) {\n        selection.addRange(range);\n    }\n\n    if (!hasFocus(core)) {\n        core.cachedSelectionRange = range;\n    }\n\n    if (range.collapsed) {\n        // If selected, and current selection is collapsed,\n        // need to restore pending format state if exists.\n        core.corePlugins.domEvent.restorePendingFormatState();\n    }\n\n    return true;\n};\n\n/**\n * @deprecated Only for compatibility with existing code, don't use ths function, use selectRange instead\n */\nexport const select: Select = (core: EditorCore, arg1: any, arg2?: any, arg3?: any, arg4?: any) => {\n    let range = arg1 instanceof Range ? arg1 : createRange(arg1, arg2, arg3, arg4);\n    return core.api.selectRange(core, range);\n};\n","import EditorCore, { TriggerEvent } from '../interfaces/EditorCore';\r\nimport EditorPlugin from '../interfaces/EditorPlugin';\r\nimport { PluginEvent } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Trigger a plugin event\r\n * @param core The EditorCore object\r\n * @param pluginEvent The event object to trigger\r\n * @param broadcast Set to true to skip the shouldHandleEventExclusively check\r\n */\r\nexport const triggerEvent: TriggerEvent = (\r\n    core: EditorCore,\r\n    pluginEvent: PluginEvent,\r\n    broadcast: boolean\r\n) => {\r\n    if (\r\n        broadcast ||\r\n        !core.eventHandlerPlugins.some(plugin => handledExclusively(pluginEvent, plugin))\r\n    ) {\r\n        core.eventHandlerPlugins.forEach(plugin => {\r\n            if (plugin.onPluginEvent) {\r\n                plugin.onPluginEvent(pluginEvent);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nfunction handledExclusively(event: PluginEvent, plugin: EditorPlugin): boolean {\r\n    if (\r\n        plugin.onPluginEvent &&\r\n        plugin.willHandleEventExclusively &&\r\n        plugin.willHandleEventExclusively(event)\r\n    ) {\r\n        plugin.onPluginEvent(event);\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import getColorNormalizedContent from '../darkMode/getColorNormalizedContent';\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\n\n/**\n * Copy plugin, hijacks copy events to normalize the content to the clipboard.\n */\nexport default class CopyPlugin implements EditorPlugin {\n    private editor: Editor;\n    private copyDisposer: () => void;\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Copy';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    public initialize(editor: Editor) {\n        this.editor = editor;\n        this.copyDisposer = editor.addDomEventHandler('copy', this.onCopy);\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    public dispose() {\n        this.copyDisposer();\n        this.copyDisposer = null;\n        this.editor = null;\n    }\n\n    private onCopy = (event: Event) => {\n        // if it's dark mode...\n        if (this.editor && this.editor.isDarkMode()) {\n            // get whatever the current selection range is\n            const selectionRange = this.editor.getSelectionRange();\n            if (selectionRange && !selectionRange.collapsed) {\n                const clipboardEvent = (event as ClipboardEvent);\n                const copyFragment = this.editor.getSelectionRange().cloneContents();\n\n                // revert just this selected range to light mode colors\n                const normalizedContent = getColorNormalizedContent(copyFragment);\n                const containerDiv = this.editor.getDocument().createElement('div');\n\n                // Leverage script execution policy on CEDs to try and prevent XSS\n                containerDiv.setAttribute('contenteditable', 'true');\n                containerDiv.innerHTML = normalizedContent;\n\n                // put it on the clipboard\n                clipboardEvent.clipboardData.setData('text/html', normalizedContent);\n                clipboardEvent.clipboardData.setData('text/plain', containerDiv.innerText)\n\n                event.preventDefault();\n            }\n        }\n    }\n}\n","import Editor from '../editor/Editor';\nimport EditorPlugin from '../interfaces/EditorPlugin';\nimport {\n    Browser,\n    getPendableFormatState,\n    Position,\n    PendableFormatNames,\n    PendableFormatCommandMap,\n} from 'roosterjs-editor-dom';\nimport {\n    ChangeSource,\n    PluginEventType,\n    NodePosition,\n    PendableFormatState,\n    PluginEvent,\n} from 'roosterjs-editor-types';\n\n/**\n * DOMEventPlugin handles customized DOM events, including:\n * 1. IME state management\n * 2. Selection management\n * 3. Cut and Drop management\n * 4. Pending format state management\n */\nexport default class DOMEventPlugin implements EditorPlugin {\n    private editor: Editor;\n    private inIme = false;\n    private disposer: () => void;\n    private cachedPosition: NodePosition;\n    private cachedFormatState: PendableFormatState;\n\n    constructor(private disableRestoreSelectionOnFocus: boolean) {}\n\n    getName() {\n        return 'DOMEvent';\n    }\n\n    initialize(editor: Editor) {\n        this.editor = editor;\n\n        this.disposer = editor.addDomEventHandler({\n            // 1. IME state management\n            compositionstart: () => (this.inIme = true),\n            compositionend: (rawEvent: CompositionEvent) => {\n                this.inIme = false;\n                editor.triggerPluginEvent(PluginEventType.CompositionEnd, {\n                    rawEvent,\n                });\n            },\n\n            // 2. Cut and drop management\n            drop: this.onNativeEvent,\n            cut: this.onNativeEvent,\n\n            // 3. Selection mangement\n            focus: this.onFocus,\n            [Browser.isIEOrEdge ? 'beforedeactivate' : 'blur']: this.onBlur,\n        });\n    }\n\n    dispose() {\n        this.disposer();\n        this.disposer = null;\n        this.editor = null;\n        this.clear();\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        switch (event.eventType) {\n            case PluginEventType.PendingFormatStateChanged:\n                // Got PendingFormatStateChagned event, cache current position and pending format\n                this.cachedPosition = this.getCurrentPosition();\n                this.cachedFormatState = event.formatState;\n                break;\n            case PluginEventType.KeyDown:\n            case PluginEventType.MouseDown:\n            case PluginEventType.ContentChanged:\n                // If content or position is changed (by keyboard, mouse, or code),\n                // check if current position is still the same with the cached one (if exist),\n                // and clear cached format if position is changed since it is out-of-date now\n                if (\n                    this.cachedPosition &&\n                    !this.cachedPosition.equalTo(this.getCurrentPosition())\n                ) {\n                    this.clear();\n                }\n                break;\n        }\n    }\n\n    /**\n     * Restore cached pending format state (if exist) to current selection\n     */\n    public restorePendingFormatState() {\n        if (this.cachedFormatState) {\n            let formatState = getPendableFormatState(this.editor.getDocument());\n            (<PendableFormatNames[]>Object.keys(PendableFormatCommandMap)).forEach(key => {\n                if (this.cachedFormatState[key] != formatState[key]) {\n                    this.editor\n                        .getDocument()\n                        .execCommand(PendableFormatCommandMap[key], false, null);\n                }\n            });\n            this.cachedPosition = this.getCurrentPosition();\n        }\n    }\n\n    /**\n     * Check if editor is in IME input sequence\n     * @returns True if editor is in IME input sequence, otherwise false\n     */\n    public isInIME() {\n        return this.inIme;\n    }\n\n    private onNativeEvent = (e: UIEvent) => {\n        this.editor.runAsync(() => {\n            this.editor.addUndoSnapshot(\n                () => {},\n                e.type == 'cut' ? ChangeSource.Cut : ChangeSource.Drop\n            );\n        });\n    };\n\n    private onFocus = () => {\n        if (this.disableRestoreSelectionOnFocus) {\n            if (this.cachedPosition && this.cachedFormatState) {\n                let range = this.editor.getSelectionRange();\n                if (\n                    range.collapsed &&\n                    Position.getStart(range)\n                        .normalize()\n                        .equalTo(this.cachedPosition)\n                ) {\n                    this.restorePendingFormatState();\n                } else {\n                    this.clear();\n                }\n            }\n        } else {\n            this.editor.restoreSavedRange();\n        }\n    };\n\n    private onBlur = () => {\n        this.editor.saveSelectionRange();\n    };\n\n    private clear() {\n        this.cachedPosition = null;\n        this.cachedFormatState = null;\n    }\n\n    private getCurrentPosition() {\n        let range = this.editor.getSelectionRange();\n        return range && Position.getStart(range).normalize();\n    }\n}\n","import Editor from '../editor/Editor';\nimport EditorPlugin from '../interfaces/EditorPlugin';\nimport { GenericContentEditFeature, Keys } from '../interfaces/ContentEditFeature';\nimport {\n    ChangeSource,\n    PluginEvent,\n    PluginEventType,\n    PluginKeyboardEvent,\n} from 'roosterjs-editor-types';\n\n/**\n * Edit Component helps handle Content edit features\n */\nexport default class EditPlugin implements EditorPlugin {\n    private editor: Editor;\n    private featureMap: { [key: number]: GenericContentEditFeature<PluginEvent>[] } = {};\n\n    private autoCompleteSnapshot: string = null;\n    private autoCompleteChangeSource: string = null;\n\n    getName() {\n        return 'Edit';\n    }\n\n    initialize(editor: Editor) {\n        this.editor = editor;\n        this.addFeature({\n            keys: [Keys.BACKSPACE],\n            shouldHandleEvent: () => this.autoCompleteSnapshot !== null,\n            handleEvent: (event: PluginKeyboardEvent, editor: Editor) => {\n                event.rawEvent.preventDefault();\n                editor.setContent(this.autoCompleteSnapshot, false /*triggerContentChangedEvent*/);\n            },\n        });\n    }\n\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        let contentChanged = false;\n        let currentFeature = this.findFeature(event);\n\n        switch (event.eventType) {\n            case PluginEventType.ContentChanged:\n                contentChanged = this.autoCompleteChangeSource != event.source;\n                break;\n            case PluginEventType.MouseDown:\n            case PluginEventType.KeyDown:\n                contentChanged = true;\n                break;\n        }\n\n        if (currentFeature) {\n            currentFeature.handleEvent(event, this.editor);\n        }\n\n        if (contentChanged) {\n            this.autoCompleteSnapshot = null;\n            this.autoCompleteChangeSource = null;\n        }\n    }\n\n    /**\n     * Add a Content Edit feature\n     * @param feature The feature to add\n     */\n    addFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        feature.keys.forEach(key => {\n            let array = this.featureMap[key] || [];\n            array.push(feature);\n            this.featureMap[key] = array;\n        });\n    }\n\n    /**\n     * Perform an auto complete action in the callback, save a snapsnot of content before the action,\n     * and trigger ContentChangedEvent with the change source if specified\n     * @param callback The auto complete callback, return value will be used as data field of ContentChangedEvent\n     * @param changeSource Chagne source of ContentChangedEvent. If not passed, no ContentChangedEvent will be  triggered\n     */\n    performAutoComplete(callback: () => any, changeSource?: ChangeSource | string) {\n        this.editor.addUndoSnapshot((start, end, snapshot) => {\n            let data = callback();\n            this.autoCompleteSnapshot = snapshot;\n            this.autoCompleteChangeSource = changeSource;\n            return data;\n        }, changeSource);\n    }\n\n    private findFeature(event: PluginEvent) {\n        let hasFunctionKey = false;\n        let features: GenericContentEditFeature<PluginEvent>[];\n\n        if (event.eventType == PluginEventType.KeyDown) {\n            let rawEvent = event.rawEvent;\n            hasFunctionKey = rawEvent.ctrlKey || rawEvent.altKey || rawEvent.metaKey;\n            features = this.featureMap[rawEvent.which];\n        } else if (event.eventType == PluginEventType.ContentChanged) {\n            features = this.featureMap[Keys.CONTENTCHANGED];\n        }\n        return (\n            features &&\n            features.filter(\n                feature =>\n                    (feature.allowFunctionKeys || !hasFunctionKey) &&\n                    feature.shouldHandleEvent(event, this.editor)\n            )[0]\n        );\n    }\n}\n","import Editor from '../editor/Editor';\nimport EditorPlugin from '../interfaces/EditorPlugin';\nimport { cacheGetContentSearcher } from '../eventApi/cacheGetContentSearcher';\nimport { LinkInlineElement, Position } from 'roosterjs-editor-dom';\nimport { PluginEvent, PluginEventType, PositionType } from 'roosterjs-editor-types';\n\n/**\n * FirefoxTypeAfterLink Component helps handle typing event when cursor is right after a link.\n * When typing after a link, Firefox will always put the new charactor inside link.\n * This plugin overrides this behavior to make it consistent with other browsers.\n */\nexport default class FirefoxTypeAfterLink implements EditorPlugin {\n    private editor: Editor;\n\n    getName() {\n        return 'FirefoxTypeAfterLink';\n    }\n\n    initialize(editor: Editor) {\n        this.editor = editor;\n    }\n\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (event.eventType == PluginEventType.KeyPress) {\n            let range = this.editor.getSelectionRange();\n            if (range && range.collapsed && this.editor.getElementAtCursor('A[href]')) {\n                let searcher = cacheGetContentSearcher(event, this.editor);\n                let inlineElement = searcher.getInlineElementBefore();\n                if (inlineElement instanceof LinkInlineElement) {\n                    this.editor.select(\n                        new Position(inlineElement.getContainerNode(), PositionType.After)\n                    );\n                }\n            }\n        }\n    }\n}\n","import Editor from '../editor/Editor';\nimport EditorPlugin from '../interfaces/EditorPlugin';\nimport { PluginEvent, PluginEventType } from 'roosterjs-editor-types';\n\n/**\n * MouseUp Component helps handle mouse up event\n * this can trigger mouse up event after mousedown happens in editor\n * even mouse up is happening outside editor\n */\nexport default class MouseUpPlugin implements EditorPlugin {\n    private mouseUpEventListerAdded: boolean;\n    private editor: Editor;\n\n    getName() {\n        return 'MouseUp';\n    }\n\n    initialize(editor: Editor) {\n        this.editor = editor;\n    }\n\n    dispose() {\n        this.removeMouseUpEventListener();\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (event.eventType == PluginEventType.MouseDown && !this.mouseUpEventListerAdded) {\n            this.editor\n                .getDocument()\n                .addEventListener('mouseup', this.onMouseUp, true /*setCapture*/);\n            this.mouseUpEventListerAdded = true;\n        }\n    }\n\n    private removeMouseUpEventListener() {\n        if (this.mouseUpEventListerAdded) {\n            this.mouseUpEventListerAdded = false;\n            this.editor.getDocument().removeEventListener('mouseup', this.onMouseUp, true);\n        }\n    }\n\n    private onMouseUp = (rawEvent: MouseEvent) => {\n        if (this.editor) {\n            this.removeMouseUpEventListener();\n            this.editor.triggerPluginEvent(PluginEventType.MouseUp, {\n                rawEvent,\n            });\n        }\n    };\n}\n","import Editor from '../editor/Editor';\nimport EditorPlugin from '../interfaces/EditorPlugin';\nimport {\n    applyFormat,\n    Browser,\n    findClosestElementAncestor,\n    fromHtml,\n    isNodeEmpty,\n    Position,\n} from 'roosterjs-editor-dom';\nimport {\n    ContentPosition,\n    NodePosition,\n    PluginKeyboardEvent,\n    PositionType,\n    PluginEvent,\n    PluginEventType,\n} from 'roosterjs-editor-types';\n\n/**\n * Typing Component helps to ensure typing is always happening under a DOM container\n */\nexport default class TypeInContainerPlugin implements EditorPlugin {\n    private editor: Editor;\n\n    getName() {\n        return 'TypeInContainer';\n    }\n\n    initialize(editor: Editor) {\n        this.editor = editor;\n    }\n\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        if (event.eventType == PluginEventType.KeyPress) {\n            this.onKeyPress(event);\n        }\n    }\n\n    /**\n     * Ensure we are typing in an HTML Element inside editor, and apply default format if current block is empty\n     * @param node Current node\n     * @param event (optional) The keyboard event that we are ensuring is typing in an element.\n     * @returns A new position to select\n     */\n    ensureTypeInElement(position: NodePosition, event?: PluginKeyboardEvent): NodePosition {\n        let result = position.normalize();\n        let block = this.editor.getBlockElementAtNode(result.node);\n        let formatNode: HTMLElement;\n\n        if (block) {\n            formatNode = block.collapseToSingleElement();\n\n            // if the block is empty, apply default format\n            // Otherwise, leave it as it is as we don't want to change the style for existing data\n            // unless the block was just created by the keyboard event (e.g. ctrl+a & start typing)\n            const shouldSetNodeStyles =\n                isNodeEmpty(formatNode) ||\n                (event && this.wasNodeJustCreatedByKeyboardEvent(event, formatNode));\n            formatNode = formatNode && shouldSetNodeStyles ? formatNode : null;\n        } else {\n            // Only reason we don't get the selection block is that we have an empty content div\n            // which can happen when users removes everything (i.e. select all and DEL, or backspace from very end to begin)\n            // The fix is to add a DIV wrapping, apply default format and move cursor over\n            formatNode = fromHtml(\n                Browser.isEdge ? '<div><span><br></span></div>' : '<div><br></div>',\n                this.editor.getDocument()\n            )[0] as HTMLElement;\n            this.editor.insertNode(formatNode, {\n                position: ContentPosition.End,\n                updateCursor: false,\n                replaceSelection: false,\n                insertOnNewLine: false,\n            });\n\n            // element points to a wrapping node we added \"<div><br></div>\". We should move the selection left to <br>\n            result = new Position(formatNode.firstChild, PositionType.Begin);\n        }\n\n        if (formatNode) {\n            applyFormat(formatNode, this.editor.getDefaultFormat(), this.editor.isDarkMode());\n        }\n\n        return result;\n    }\n\n    private onKeyPress(event: PluginKeyboardEvent) {\n        // If normalization was not possible before the keypress,\n        // check again after the keyboard event has been processed by browser native behaviour.\n        //\n        // This handles the case where the keyboard event that first inserts content happens when\n        // there is already content under the selection (e.g. Ctrl+a -> type new content).\n        //\n        // Only scheudle when the range is not collapsed to catch this edge case.\n        let range = this.editor.getSelectionRange();\n\n        if (!range || this.editor.contains(findClosestElementAncestor(range.startContainer))) {\n            return;\n        }\n\n        if (range.collapsed) {\n            this.tryNormalizeTyping(event, range);\n        } else if (!range.collapsed) {\n            this.editor.runAsync(() => {\n                this.tryNormalizeTyping(event);\n            });\n        }\n    }\n\n    /**\n     * When typing goes directly under content div, many things can go wrong\n     * We fix it by wrapping it with a div and reposition cursor within the div\n     */\n    private tryNormalizeTyping(event: PluginKeyboardEvent, range?: Range) {\n        let position = this.ensureTypeInElement(\n            Position.getStart(range || this.editor.getSelectionRange()),\n            event\n        );\n        this.editor.select(position);\n    }\n\n    private wasNodeJustCreatedByKeyboardEvent(event: PluginKeyboardEvent, formatNode: HTMLElement) {\n        return (\n            event.rawEvent.target instanceof Node &&\n            event.rawEvent.target.contains(formatNode) &&\n            event.rawEvent.key === formatNode.innerText\n        );\n    }\n}\n","/**\n * Converter for dark mode that runs all child elements of a node through the content transform function.\n * @param node The node containing HTML elements to convert.\n * @param skipRootElement Optional parameter to skip the root element of the Node passed in, if applicable.\n */\nexport function convertContentToDarkMode(node: Node, onExternalContentTransform?: (element: Element) => void, skipRootElement?: boolean): () => void {\n    let childElements: HTMLElement[] = [];\n\n    // Get a list of all the decendents of a node.\n    // querySelectorAll doesn't return a live list when called on an HTMLElement\n    // So we use getElementsByTagName instead for HTMLElement types.\n    if (node instanceof HTMLElement) {\n        childElements = Array.prototype.slice.call(node.getElementsByTagName('*'));\n        if (!skipRootElement) {\n            childElements.unshift(node);\n        }\n    } else if (node instanceof DocumentFragment) {\n        childElements = Array.prototype.slice.call(node.querySelectorAll('*'));\n    }\n\n    return childElements.length > 0\n        ? () => {\n            childElements.forEach(element => {\n                if (onExternalContentTransform) {\n                    onExternalContentTransform(element);\n                } else {\n                    element.style.color = null;\n                    element.style.backgroundColor = null;\n                }\n            });\n        }\n        : null;\n}","export default function getColorNormalizedContent(content: string | DocumentFragment): string {\n    let el = document.createElement('div');\n    // Leverage script execution policy on CEDs to try and prevent XSS\n    el.setAttribute('contenteditable', 'true');\n    if (content instanceof DocumentFragment) {\n        el.appendChild(content);\n    } else {\n        el.innerHTML = content;\n    }\n    const allChildElements = el.getElementsByTagName('*') as HTMLCollectionOf<HTMLElement>;\n    [].forEach.call(allChildElements, (element: HTMLElement) => {\n        if (element.dataset) {\n            // Reset color styles based on the content of the ogsc/ogsb data element.\n            // If those data properties are empty or do not exist, set them anyway to clear the content.\n            element.style.color = isDataAttributeSettable(element.dataset.ogsc)\n                ? element.dataset.ogsc\n                : '';\n            element.style.backgroundColor = isDataAttributeSettable(element.dataset.ogsb)\n                ? element.dataset.ogsb\n                : '';\n\n            // Some elements might have set attribute colors. We need to reset these as well.\n            if (isDataAttributeSettable(element.dataset.ogac)) {\n                element.setAttribute('color', element.dataset.ogac);\n            } else {\n                element.removeAttribute('color');\n            }\n\n            if (isDataAttributeSettable(element.dataset.ogab)) {\n                element.setAttribute('bgcolor', element.dataset.ogab);\n            } else {\n                element.removeAttribute('bgcolor');\n            }\n\n            // Clean up any remaining data attributes.\n            if (element.dataset.ogsc) {\n                delete element.dataset.ogsc;\n            }\n\n            if (element.dataset.ogsb) {\n                delete element.dataset.ogsb;\n            }\n\n            if (element.dataset.ogac) {\n                delete element.dataset.ogac;\n            }\n\n            if (element.dataset.ogab) {\n                delete element.dataset.ogab;\n            }\n        }\n    });\n    const newContent = el.innerHTML;\n    return newContent;\n}\n\nfunction isDataAttributeSettable(newStyle: string) {\n    return newStyle && newStyle != 'undefined' && newStyle != 'null';\n}","import adjustBrowserBehavior from './adjustBrowserBehavior';\nimport createEditorCore from './createEditorCore';\nimport EditorCore from '../interfaces/EditorCore';\nimport EditorOptions from '../interfaces/EditorOptions';\nimport getColorNormalizedContent from '../darkMode/getColorNormalizedContent';\nimport mapPluginEvents from './mapPluginEvents';\nimport { calculateDefaultFormat } from '../coreAPI/calculateDefaultFormat';\nimport { convertContentToDarkMode } from '../darkMode/convertContentToDarkMode';\nimport { GenericContentEditFeature } from '../interfaces/ContentEditFeature';\nimport {\n    BlockElement,\n    ChangeSource,\n    ContentPosition,\n    DarkModeOptions,\n    DefaultFormat,\n    InlineElement,\n    InsertOption,\n    NodePosition,\n    NodeType,\n    PluginEvent,\n    PluginEventData,\n    PluginEventFromType,\n    PluginEventType,\n    PositionType,\n    QueryScope,\n    SelectionPath,\n    Rect,\n} from 'roosterjs-editor-types';\nimport {\n    collapseNodes,\n    contains,\n    ContentTraverser,\n    createRange,\n    findClosestElementAncestor,\n    fromHtml,\n    getBlockElementAtNode,\n    getTextContent,\n    getInlineElementAtNode,\n    getPositionRect,\n    getRangeFromSelectionPath,\n    getSelectionPath,\n    getTagOfNode,\n    isNodeEmpty,\n    Position,\n    PositionContentSearcher,\n    queryElements,\n    wrap,\n} from 'roosterjs-editor-dom';\n\n/**\n * RoosterJs core editor class\n */\nexport default class Editor {\n    private core: EditorCore;\n    private eventDisposers: (() => void)[];\n    private contenteditableChanged: boolean;\n\n    //#region Lifecycle\n\n    /**\n     * Creates an instance of Editor\n     * @param contentDiv The DIV HTML element which will be the container element of editor\n     * @param options An optional options object to customize the editor\n     */\n    constructor(contentDiv: HTMLDivElement, options: EditorOptions = {}) {\n        // 1. Make sure all parameters are valid\n        if (getTagOfNode(contentDiv) != 'DIV') {\n            throw new Error('contentDiv must be an HTML DIV element');\n        }\n\n        // 2. Store options values to local variables\n        this.core = createEditorCore(contentDiv, options);\n\n        // 3. Initialize plugins\n        this.core.plugins.forEach(plugin => plugin.initialize(this));\n\n        // 4. Ensure initial content and its format\n        this.setContent(options.initialContent || contentDiv.innerHTML || '');\n\n        // 5. Create event handler to bind DOM events\n        this.eventDisposers = mapPluginEvents(this.core);\n\n        // 6. Add additional content edit features to the editor if specified\n        if (options.additionalEditFeatures) {\n            options.additionalEditFeatures.forEach(feature => this.addContentEditFeature(feature));\n        }\n\n        // 7. Make the container editable and set its selection styles\n        if (!options.omitContentEditableAttributeChanges && !contentDiv.isContentEditable) {\n            contentDiv.setAttribute('contenteditable', 'true');\n            let styles = contentDiv.style;\n            styles.userSelect = styles.msUserSelect = styles.webkitUserSelect = 'text';\n            this.contenteditableChanged = true;\n        }\n\n        // 8. Do proper change for browsers to disable some browser-specified behaviors.\n        adjustBrowserBehavior();\n\n        // 9. Let plugins know that we are ready\n        this.triggerPluginEvent(PluginEventType.EditorReady, {}, true /*broadcast*/);\n\n        // 10. Before give editor to user, make sure there is at least one DIV element to accept typing\n        this.core.corePlugins.typeInContainer.ensureTypeInElement(\n            new Position(contentDiv, PositionType.Begin)\n        );\n    }\n\n    /**\n     * Dispose this editor, dispose all plugins and custom data\n     */\n    public dispose(): void {\n        this.triggerPluginEvent(PluginEventType.BeforeDispose, {}, true /*broadcast*/);\n\n        this.core.plugins.forEach(plugin => plugin.dispose());\n        this.eventDisposers.forEach(disposer => disposer());\n        this.eventDisposers = null;\n\n        for (let key of Object.keys(this.core.customData)) {\n            let data = this.core.customData[key];\n            if (data && data.disposer) {\n                data.disposer(data.value);\n            }\n            delete this.core.customData[key];\n        }\n\n        if (this.contenteditableChanged) {\n            let styles = this.core.contentDiv.style;\n            styles.userSelect = styles.msUserSelect = styles.webkitUserSelect = '';\n            this.core.contentDiv.removeAttribute('contenteditable');\n        }\n\n        this.core = null;\n    }\n\n    /**\n     * Get whether this editor is disposed\n     * @returns True if editor is disposed, otherwise false\n     */\n    public isDisposed(): boolean {\n        return !this.core;\n    }\n\n    //#endregion\n\n    //#region Node API\n\n    /**\n     * Insert node into editor\n     * @param node The node to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     * @returns true if node is inserted. Otherwise false\n     */\n    public insertNode(node: Node, option?: InsertOption): boolean {\n        // DocumentFragment type nodes become empty after they're inserted.\n        // Therefore, we get the list of nodes to transform prior to their insertion.\n        const darkModeOptions = this.getDarkModeOptions();\n        const darkModeTransform = this.isDarkMode()\n            ? convertContentToDarkMode(\n                  node,\n                  darkModeOptions && darkModeOptions.onExternalContentTransform\n                      ? darkModeOptions.onExternalContentTransform\n                      : undefined\n              )\n            : null;\n\n        const result = node ? this.core.api.insertNode(this.core, node, option) : false;\n\n        if (result && darkModeTransform) {\n            darkModeTransform();\n        }\n        return result;\n    }\n\n    /**\n     * Delete a node from editor content\n     * @param node The node to delete\n     * @returns true if node is deleted. Otherwise false\n     */\n    public deleteNode(node: Node): boolean {\n        // Only remove the node when it falls within editor\n        if (node && this.contains(node)) {\n            node.parentNode.removeChild(node);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Replace a node in editor content with another node\n     * @param existingNode The existing node to be replaced\n     * @param new node to replace to\n     * @returns true if node is replaced. Otherwise false\n     */\n    public replaceNode(existingNode: Node, toNode: Node): boolean {\n        // Only replace the node when it falls within editor\n        if (existingNode && toNode && this.contains(existingNode)) {\n            existingNode.parentNode.replaceChild(toNode, existingNode);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Get InlineElement at given node\n     * @param node The node to create InlineElement\n     * @returns The InlineElement result\n     */\n    public getInlineElementAtNode(node: Node): InlineElement {\n        return getInlineElementAtNode(this.core.contentDiv, node);\n    }\n\n    /**\n     * Get BlockElement at given node\n     * @param node The node to create InlineElement\n     * @returns The BlockElement result\n     */\n    public getBlockElementAtNode(node: Node): BlockElement {\n        return getBlockElementAtNode(this.core.contentDiv, node);\n    }\n\n    /**\n     * Check if the node falls in the editor content\n     * @param node The node to check\n     * @returns True if the given node is in editor content, otherwise false\n     */\n    public contains(node: Node): boolean;\n\n    /**\n     * Check if the range falls in the editor content\n     * @param range The range to check\n     * @returns True if the given range is in editor content, otherwise false\n     */\n    public contains(range: Range): boolean;\n\n    public contains(arg: Node | Range): boolean {\n        return contains(this.core.contentDiv, <Node>arg);\n    }\n\n    /**\n     * Query HTML elements in editor by tag name\n     * @param tag Tag name of the element to query\n     * @param forEachCallback An optional callback to be invoked on each element in query result\n     * @returns HTML Element array of the query result\n     */\n    public queryElements<T extends keyof HTMLElementTagNameMap>(\n        tag: T,\n        forEachCallback?: (node: HTMLElementTagNameMap[T]) => any\n    ): HTMLElementTagNameMap[T][];\n\n    /**\n     * Query HTML elements in editor by a selector string\n     * @param selector Selector string to query\n     * @param forEachCallback An optional callback to be invoked on each node in query result\n     * @returns HTML Element array of the query result\n     */\n    public queryElements<T extends HTMLElement = HTMLElement>(\n        selector: string,\n        forEachCallback?: (node: T) => any\n    ): T[];\n\n    /**\n     * Query HTML elements with the given scope by tag name\n     * @param tag Tag name of the element to query\n     * @param scope The scope of the query, default value is QueryScope.Body\n     * @param forEachCallback An optional callback to be invoked on each element in query result\n     * @returns HTML Element list of the query result\n     */\n    public queryElements<T extends keyof HTMLElementTagNameMap>(\n        tag: T,\n        scope: QueryScope,\n        forEachCallback?: (node: HTMLElementTagNameMap[T]) => any\n    ): HTMLElementTagNameMap[T][];\n\n    /**\n     * Query HTML elements with the given scope by a selector string\n     * @param selector Selector string to query\n     * @param scope The scope of the query, default value is QueryScope.Body\n     * @param forEachCallback An optional callback to be invoked on each element in query result\n     * @returns HTML Element array of the query result\n     */\n    public queryElements<T extends HTMLElement = HTMLElement>(\n        selector: string,\n        scope: QueryScope,\n        forEachCallback?: (node: T) => any\n    ): T[];\n\n    public queryElements(\n        selector: string,\n        scopeOrCallback: QueryScope | ((node: Node) => any) = QueryScope.Body,\n        callback?: (node: Node) => any\n    ) {\n        let scope = scopeOrCallback instanceof Function ? QueryScope.Body : scopeOrCallback;\n        callback = scopeOrCallback instanceof Function ? scopeOrCallback : callback;\n\n        let range = scope == QueryScope.Body ? null : this.getSelectionRange();\n        return queryElements(this.core.contentDiv, selector, callback, scope, range);\n    }\n\n    /**\n     * Collapse nodes within the given start and end nodes to their common ascenstor node,\n     * split parent nodes if necessary\n     * @param start The start node\n     * @param end The end node\n     * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\n     * and the returned nodes will be all nodes from start trhough end after splitting\n     * False to disallow split parent\n     * @returns When cansplitParent is true, returns all node from start through end after splitting,\n     * otherwise just return start and end\n     */\n    public collapseNodes(start: Node, end: Node, canSplitParent: boolean): Node[] {\n        return collapseNodes(this.core.contentDiv, start, end, canSplitParent);\n    }\n\n    //#endregion\n\n    //#region Content API\n\n    /**\n     * Check whether the editor contains any visible content\n     * @param trim Whether trime the content string before check. Default is false\n     * @returns True if there's no visible content, otherwise false\n     */\n    public isEmpty(trim?: boolean): boolean {\n        return isNodeEmpty(this.core.contentDiv, trim);\n    }\n\n    /**\n     * Get current editor content as HTML string\n     * @param triggerExtractContentEvent Whether trigger ExtractContent event to all plugins\n     * before return. Use this parameter to remove any temporary content added by plugins.\n     * @param includeSelectionMarker Set to true if need include selection marker inside the content.\n     * When restore this content, editor will set the selection to the position marked by these markers\n     * @returns HTML string representing current editor content\n     */\n    public getContent(\n        triggerExtractContentEvent: boolean = true,\n        includeSelectionMarker: boolean = false\n    ): string {\n        let contentDiv = this.core.contentDiv;\n        let content = contentDiv.innerHTML;\n        let selectionPath: SelectionPath;\n\n        if (\n            includeSelectionMarker &&\n            (selectionPath = getSelectionPath(contentDiv, this.getSelectionRange()))\n        ) {\n            content += `<!--${JSON.stringify(selectionPath)}-->`;\n        }\n\n        if (triggerExtractContentEvent) {\n            content = this.triggerPluginEvent(\n                PluginEventType.ExtractContent,\n                { content },\n                true /*broadcast*/\n            ).content;\n        }\n\n        if (this.core.inDarkMode) {\n            content = getColorNormalizedContent(content);\n        }\n\n        return content;\n    }\n\n    /**\n     * Get plain text content inside editor\n     * @returns The text content inside editor\n     */\n    public getTextContent(): string {\n        return getTextContent(this.core.contentDiv);\n    }\n\n    /**\n     * Set HTML content to this editor. All existing content will be replaced. A ContentChanged event will be triggered\n     * @param content HTML content to set in\n     * @param triggerContentChangedEvent True to trigger a ContentChanged event. Default value is true\n     */\n    public setContent(content: string, triggerContentChangedEvent: boolean = true) {\n        let contentDiv = this.core.contentDiv;\n        let contentChanged = false;\n        if (contentDiv.innerHTML != content) {\n            contentDiv.innerHTML = content || '';\n            contentChanged = true;\n\n            let pathComment = contentDiv.lastChild;\n\n            if (pathComment && pathComment.nodeType == NodeType.Comment) {\n                try {\n                    let path = JSON.parse(pathComment.nodeValue) as SelectionPath;\n                    this.deleteNode(pathComment);\n                    let range = getRangeFromSelectionPath(contentDiv, path);\n                    this.select(range);\n                } catch {}\n            }\n        }\n\n        // Convert content even if it hasn't changed.\n        if (this.core.inDarkMode) {\n            const darkModeOptions = this.getDarkModeOptions();\n            const convertFunction = convertContentToDarkMode(\n                contentDiv,\n                darkModeOptions && darkModeOptions.onExternalContentTransform\n                    ? darkModeOptions.onExternalContentTransform\n                    : undefined,\n                true /* skipRootElement */\n            );\n            if (convertFunction) {\n                convertFunction();\n                contentChanged = true;\n            }\n        }\n\n        if (triggerContentChangedEvent && contentChanged) {\n            this.triggerContentChangedEvent();\n        }\n    }\n\n    /**\n     * Insert HTML content into editor\n     * @param HTML content to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     */\n    public insertContent(content: string, option?: InsertOption) {\n        if (content) {\n            let allNodes = fromHtml(content, this.core.document);\n            // If it is to insert on new line, and there are more than one node in the collection, wrap all nodes with\n            // a parent DIV before calling insertNode on each top level sub node. Otherwise, every sub node may get wrapped\n            // separately to show up on its own line\n            if (option && option.insertOnNewLine && allNodes.length > 0) {\n                allNodes = [wrap(allNodes)];\n            }\n            for (let i = 0; i < allNodes.length; i++) {\n                this.insertNode(allNodes[i], option);\n            }\n        }\n    }\n\n    //#endregion\n\n    //#region Focus and Selection\n\n    /**\n     * Get current selection range from Editor.\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @returns current selection range, or null if editor never got focus before\n     */\n    public getSelectionRange(): Range {\n        return this.core.api.getSelectionRange(this.core, true /*tryGetFromCache*/);\n    }\n\n    /**\n     * Check if focus is in editor now\n     * @returns true if focus is in editor, otherwise false\n     */\n    public hasFocus(): boolean {\n        return this.core.api.hasFocus(this.core);\n    }\n\n    /**\n     * Focus to this editor, the selection was restored to where it was before, no unexpected scroll.\n     */\n    public focus() {\n        this.core.api.focus(this.core);\n    }\n\n    /**\n     * Select content by range\n     * @param range The range to select\n     * @returns True if content is selected, otherwise false\n     */\n    public select(range: Range): boolean;\n\n    /**\n     * Select content by Position and collapse to this position\n     * @param position The position to select\n     * @returns True if content is selected, otherwise false\n     */\n    public select(position: NodePosition): boolean;\n\n    /**\n     * Select content by a start and end position\n     * @param start The start position to select\n     * @param end The end position to select, if this is the same with start, the selection will be collapsed\n     * @returns True if content is selected, otherwise false\n     */\n    public select(start: NodePosition, end: NodePosition): boolean;\n\n    /**\n     * Select content by node\n     * @param node The node to select\n     * @returns True if content is selected, otherwise false\n     */\n    public select(node: Node): boolean;\n\n    /**\n     * Select content by node and offset, and collapse to this position\n     * @param node The node to select\n     * @param offset The offset of node to select, can be a number or value of PositionType\n     * @returns True if content is selected, otherwise false\n     */\n    public select(node: Node, offset: number | PositionType): boolean;\n\n    /**\n     * Select content by start and end nodes and offsets\n     * @param startNode The node to select start from\n     * @param startOffset The offset to select start from\n     * @param endNode The node to select end to\n     * @param endOffset The offset to select end to\n     * @returns True if content is selected, otherwise false\n     */\n    public select(\n        startNode: Node,\n        startOffset: number | PositionType,\n        endNode: Node,\n        endOffset: number | PositionType\n    ): boolean;\n\n    public select(arg1: any, arg2?: any, arg3?: any, arg4?: any): boolean {\n        let range = arg1 instanceof Range ? arg1 : createRange(arg1, arg2, arg3, arg4);\n        return this.contains(range) && this.core.api.selectRange(this.core, range);\n    }\n\n    /**\n     * Get current selection\n     * @return current selection object\n     */\n    public getSelection(): Selection {\n        return this.core.document.defaultView.getSelection();\n    }\n\n    /**\n     * Save the current selection in editor so that when focus again, the selection can be restored\n     */\n    public saveSelectionRange() {\n        this.core.cachedSelectionRange = this.core.api.getSelectionRange(\n            this.core,\n            false /*tryGetFromCache*/\n        );\n    }\n\n    /**\n     * Restore the saved selection range and clear it\n     */\n    public restoreSavedRange() {\n        this.select(this.core.cachedSelectionRange);\n        this.core.cachedSelectionRange = null;\n    }\n\n    /**\n     * Get current focused position. Return null if editor doesn't have focus at this time.\n     */\n    public getFocusedPosition(): NodePosition {\n        let sel = this.getSelection();\n        if (this.contains(sel && sel.focusNode)) {\n            return new Position(sel.focusNode, sel.focusOffset);\n        }\n\n        let range = this.getSelectionRange();\n        if (range) {\n            return Position.getStart(range);\n        }\n\n        return null;\n    }\n\n    /**\n     * Get a rect representing the location of the cursor.\n     * @returns a Rect object representing cursor location\n     */\n    public getCursorRect(): Rect {\n        let position = this.getFocusedPosition();\n        return position && getPositionRect(position);\n    }\n\n    /**\n     * Get an HTML element from current cursor position.\n     * When expectedTags is not specified, return value is the current node (if it is HTML element)\n     * or its parent node (if current node is a Text node).\n     * When expectedTags is specified, return value is the first anscestor of current node which has\n     * one of the expected tags.\n     * If no element found within editor by the given tag, return null.\n     * @param selector Optional, an HTML selector to find HTML element with.\n     * @param startFrom Start search from this node. If not specified, start from current focused position\n     */\n    public getElementAtCursor(selector?: string, startFrom?: Node): HTMLElement {\n        if (!startFrom) {\n            let position = this.getFocusedPosition();\n            startFrom = position && position.node;\n        }\n        return startFrom && findClosestElementAncestor(startFrom, this.core.contentDiv, selector);\n    }\n\n    //#endregion\n\n    //#region EVENT API\n\n    /**\n     * Add a custom DOM event handler to handle events not handled by roosterjs.\n     * Caller need to take the responsibility to dispose the handler properly\n     * @param eventName DOM event name to handle\n     * @param handler Handler callback\n     * @returns A dispose function. Call the function to dispose this event handler\n     */\n    public addDomEventHandler(eventName: string, handler: (event: UIEvent) => void): () => void;\n\n    /**\n     * Add a bunch of custom DOM event handler to handle events not handled by roosterjs.\n     * Caller need to take the responsibility to dispose the handler properly\n     * @param handlerMap A event name => event handler map\n     * @returns A dispose function. Call the function to dispose all event handlers added by this function\n     */\n    public addDomEventHandler(handlerMap: {\n        [eventName: string]: (event: UIEvent) => void;\n    }): () => void;\n\n    public addDomEventHandler(\n        nameOrMap:\n            | string\n            | {\n                  [eventName: string]: (event: UIEvent) => void;\n              },\n        handler?: (event: UIEvent) => void\n    ): () => void {\n        if (nameOrMap instanceof Object) {\n            let handlers = Object.keys(nameOrMap)\n                .map(\n                    eventName =>\n                        nameOrMap[eventName] &&\n                        this.core.api.attachDomEvent(\n                            this.core,\n                            eventName,\n                            null /*pluginEventType*/,\n                            nameOrMap[eventName]\n                        )\n                )\n                .filter(x => x);\n            return () => handlers.forEach(handler => handler());\n        } else {\n            return this.core.api.attachDomEvent(\n                this.core,\n                nameOrMap,\n                null /*pluginEventType*/,\n                handler\n            );\n        }\n    }\n\n    /**\n     * Trigger an event to be dispatched to all plugins\n     * @param eventType Type of the event\n     * @param data data of the event with given type, this is the rest part of PluginEvent with the given type\n     * @param broadcast indicates if the event needs to be dispatched to all plugins\n     * True means to all, false means to allow exclusive handling from one plugin unless no one wants that\n     * @returns the event object which is really passed into plugins. Some plugin may modify the event object so\n     * the result of this function provides a chance to read the modified result\n     */\n    public triggerPluginEvent<T extends PluginEventType>(\n        eventType: T,\n        data: PluginEventData<T>,\n        broadcast?: boolean\n    ): PluginEventFromType<T> {\n        let event = ({\n            eventType,\n            ...data,\n        } as any) as PluginEventFromType<T>;\n        this.core.api.triggerEvent(this.core, event, broadcast);\n\n        return event;\n    }\n\n    /**\n     * @deprecated Use triggerPluginEvent instead\n     */\n    public triggerEvent(pluginEvent: PluginEvent, broadcast: boolean = true) {\n        this.core.api.triggerEvent(this.core, pluginEvent, broadcast);\n    }\n\n    /**\n     * Trigger a ContentChangedEvent\n     * @param source Source of this event, by default is 'SetContent'\n     * @param data additional data for this event\n     */\n    public triggerContentChangedEvent(\n        source: ChangeSource | string = ChangeSource.SetContent,\n        data?: any\n    ) {\n        this.triggerPluginEvent(PluginEventType.ContentChanged, {\n            source,\n            data,\n        });\n    }\n\n    //#endregion\n\n    //#region Undo API\n\n    /**\n     * Undo last edit operation\n     */\n    public undo() {\n        this.focus();\n        this.core.corePlugins.undo.undo();\n    }\n\n    /**\n     * Redo next edit operation\n     */\n    public redo() {\n        this.focus();\n        this.core.corePlugins.undo.redo();\n    }\n\n    /**\n     * Add undo snapshot, and execute a format callback function, then add another undo snapshot, then trigger\n     * ContentChangedEvent with given change source.\n     * If this function is called nested, undo snapshot will only be added in the outside one\n     * @param callback The callback function to perform formatting, returns a data object which will be used as\n     * the data field in ContentChangedEvent if changeSource is not null.\n     * @param changeSource The change source to use when fire ContentChangedEvent. When the value is not null,\n     * a ContentChangedEvent will be fired with change source equal to this value\n     */\n    public addUndoSnapshot(\n        callback?: (start: NodePosition, end: NodePosition, snapshotBeforeCallback: string) => any,\n        changeSource?: ChangeSource | string\n    ) {\n        this.core.api.editWithUndo(this.core, callback, changeSource);\n    }\n\n    /**\n     * Perform an auto complete action in the callback, save a snapsnot of content before the action,\n     * and trigger ContentChangedEvent with the change source if specified\n     * @param callback The auto complete callback, return value will be used as data field of ContentChangedEvent\n     * @param changeSource Chagne source of ContentChangedEvent. If not passed, no ContentChangedEvent will be  triggered\n     */\n    public performAutoComplete(callback: () => any, changeSource?: ChangeSource | string) {\n        this.core.corePlugins.edit.performAutoComplete(callback, changeSource);\n    }\n\n    /**\n     * Whether there is an available undo snapshot\n     */\n    public canUndo(): boolean {\n        return this.core.corePlugins.undo.canUndo();\n    }\n\n    /**\n     * Whether there is an available redo snapshot\n     */\n    public canRedo(): boolean {\n        return this.core.corePlugins.undo.canRedo();\n    }\n\n    //#endregion\n\n    //#region Misc\n\n    /**\n     * Get document which contains this editor\n     * @returns The HTML document which contains this editor\n     */\n    public getDocument(): Document {\n        return this.core.document;\n    }\n\n    /**\n     * Get custom data related to this editor\n     * @param key Key of the custom data\n     * @param getter Getter function. If custom data for the given key doesn't exist,\n     * call this function to get one and store it if it is specified. Otherwise return undefined\n     * @param disposer An optional disposer function to dispose this custom data when\n     * dispose editor.\n     */\n    public getCustomData<T>(key: string, getter?: () => T, disposer?: (value: T) => void): T {\n        return this.core.api.getCustomData(this.core, key, getter, disposer);\n    }\n\n    /**\n     * Check if editor is in IME input sequence\n     * @returns True if editor is in IME input sequence, otherwise false\n     */\n    public isInIME(): boolean {\n        return this.core.corePlugins.domEvent.isInIME();\n    }\n\n    /**\n     * Get default format of this editor\n     * @returns Default format object of this editor\n     */\n    public getDefaultFormat(): DefaultFormat {\n        return this.core.defaultFormat;\n    }\n\n    /**\n     * Get a content traverser for the whole editor\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\n     */\n    public getBodyTraverser(startNode?: Node): ContentTraverser {\n        return ContentTraverser.createBodyTraverser(this.core.contentDiv, startNode);\n    }\n\n    /**\n     * Get a content traverser for current selection\n     */\n    public getSelectionTraverser(): ContentTraverser {\n        let range = this.getSelectionRange();\n        return (\n            range &&\n            ContentTraverser.createSelectionTraverser(\n                this.core.contentDiv,\n                this.getSelectionRange()\n            )\n        );\n    }\n\n    /**\n     * Get a content traverser for current block element start from specified position\n     * @param startFrom Start position of the traverser. Default value is ContentPosition.SelectionStart\n     */\n    public getBlockTraverser(\n        startFrom: ContentPosition = ContentPosition.SelectionStart\n    ): ContentTraverser {\n        let range = this.getSelectionRange();\n        return (\n            range && ContentTraverser.createBlockTraverser(this.core.contentDiv, range, startFrom)\n        );\n    }\n\n    /**\n     * Get a text traverser of current selection\n     */\n    public getContentSearcherOfCursor(): PositionContentSearcher {\n        let range = this.getSelectionRange();\n        return range && new PositionContentSearcher(this.core.contentDiv, Position.getStart(range));\n    }\n\n    /**\n     * Run a callback function asynchronously\n     * @param callback The callback function to run\n     */\n    public runAsync(callback: () => void) {\n        let win = this.core.contentDiv.ownerDocument.defaultView || window;\n        win.requestAnimationFrame(() => {\n            if (!this.isDisposed() && callback) {\n                callback();\n            }\n        });\n    }\n\n    /**\n     * Set DOM attribute of editor content DIV\n     * @param name Name of the attribute\n     * @param value Value of the attribute\n     */\n    public setEditorDomAttribute(name: string, value: string) {\n        if (value === null) {\n            this.core.contentDiv.removeAttribute(name);\n        } else {\n            this.core.contentDiv.setAttribute(name, value);\n        }\n    }\n\n    /**\n     * Add a Content Edit feature. This is mostly called from ContentEdit plugin\n     * @param feature The feature to add\n     */\n    public addContentEditFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        this.core.corePlugins.edit.addFeature(feature);\n    }\n\n    //#endregion\n\n    //#region Dark mode APIs\n\n    /**\n     * Set the dark mode state and transforms the content to match the new state.\n     * @param nextDarkMode The next status of dark mode. True if the editor should be in dark mode, false if not.\n     */\n    public setDarkModeState(nextDarkMode?: boolean) {\n        if (this.isDarkMode() == nextDarkMode) {\n            return;\n        }\n\n        const currentContent = this.getContent(\n            undefined /* triggerContentChangedEvent */,\n            true /* getSelectionMarker */\n        );\n\n        this.core.inDarkMode = nextDarkMode;\n        this.core.defaultFormat = calculateDefaultFormat(\n            this.core.contentDiv,\n            this.core.defaultFormat,\n            this.core.inDarkMode\n        );\n\n        this.setContent(currentContent);\n    }\n\n    /**\n     * Check if the editor is in dark mode\n     * @returns True if the editor is in dark mode, otherwise false\n     */\n    public isDarkMode(): boolean {\n        return this.core.inDarkMode;\n    }\n\n    /**\n     * Returns the dark mode options set on the editor\n     * @returns A DarkModeOptions object\n     */\n    public getDarkModeOptions(): DarkModeOptions {\n        return this.core.darkModeOptions;\n    }\n\n    //#endregion\n}\n","import { Browser } from 'roosterjs-editor-dom';\r\nimport { DocumentCommand } from 'roosterjs-editor-types';\r\n\r\nconst COMMANDS: {\r\n    [command: string]: any;\r\n} = Browser.isFirefox\r\n    ? {\r\n          /**\r\n           * Disable these object resizing for firefox since other browsers don't have these behaviors\r\n           */\r\n          [DocumentCommand.EnableObjectResizing]: false,\r\n          [DocumentCommand.EnableInlineTableEditing]: false,\r\n      }\r\n    : Browser.isIE\r\n    ? {\r\n          /**\r\n           * Change the default paragraph separater to DIV. This is mainly for IE since its default setting is P\r\n           */\r\n          [DocumentCommand.DefaultParagraphSeparator]: 'div',\r\n\r\n          /**\r\n           * Disable auto link feature in IE since we have our own implementation\r\n           */\r\n          [DocumentCommand.AutoUrlDetect]: false,\r\n      }\r\n    : {};\r\n\r\n/**\r\n * Execute document command to adjust browser default behavior\r\n */\r\nexport default function adjustBrowserBehavior() {\r\n    Object.keys(COMMANDS).forEach(command => {\r\n        // Catch any possible exception since this should not block the initialization of editor\r\n        try {\r\n            document.execCommand(command, false, COMMANDS[command]);\r\n        } catch {}\r\n    });\r\n}\r\n","import CopyPlugin from '../corePlugins/CopyPlugin';\r\nimport DOMEventPlugin from '../corePlugins/DOMEventPlugin';\r\nimport EditorCore, { CoreApiMap, CorePlugins } from '../interfaces/EditorCore';\r\nimport EditorOptions from '../interfaces/EditorOptions';\r\nimport EditorPlugin from '../interfaces/EditorPlugin';\r\nimport EditPlugin from '../corePlugins/EditPlugin';\r\nimport FirefoxTypeAfterLink from '../corePlugins/FirefoxTypeAfterLink';\r\nimport MouseUpPlugin from '../corePlugins/MouseUpPlugin';\r\nimport TypeInContainerPlugin from '../corePlugins/TypeInContainerPlugin';\r\nimport Undo from '../undo/Undo';\r\nimport { attachDomEvent } from '../coreAPI/attachDomEvent';\r\nimport { Browser } from 'roosterjs-editor-dom';\r\nimport { calculateDefaultFormat } from '../coreAPI/calculateDefaultFormat';\r\nimport { CustomDataMap } from '../interfaces/CustomData';\r\nimport { editWithUndo } from '../coreAPI/editWithUndo';\r\nimport { focus } from '../coreAPI/focus';\r\nimport { getCustomData } from '../coreAPI/getCustomData';\r\nimport { getSelectionRange } from '../coreAPI/getSelectionRange';\r\nimport { hasFocus } from '../coreAPI/hasFocus';\r\nimport { insertNode } from '../coreAPI/insertNode';\r\nimport { select, selectRange } from '../coreAPI/selectRange';\r\nimport { triggerEvent } from '../coreAPI/triggerEvent';\r\n\r\n/**\r\n * Create core object for editor\r\n * @param contentDiv The DIV element used for editor\r\n * @param options Options to create an editor\r\n */\r\nexport default function createEditorCore(\r\n    contentDiv: HTMLDivElement,\r\n    options: EditorOptions\r\n): EditorCore {\r\n    let corePlugins: CorePlugins = {\r\n        undo: options.undo || new Undo(),\r\n        edit: new EditPlugin(),\r\n        typeInContainer: new TypeInContainerPlugin(),\r\n        mouseUp: new MouseUpPlugin(),\r\n        domEvent: new DOMEventPlugin(options.disableRestoreSelectionOnFocus),\r\n        firefoxTypeAfterLink: Browser.isFirefox && new FirefoxTypeAfterLink(),\r\n        copyPlugin: !Browser.isIE && new CopyPlugin(),\r\n    };\r\n    let allPlugins = buildPluginList(corePlugins, options.plugins);\r\n    let eventHandlerPlugins = allPlugins.filter(\r\n        plugin => plugin.onPluginEvent || plugin.willHandleEventExclusively\r\n    );\r\n    return {\r\n        contentDiv,\r\n        document: contentDiv.ownerDocument,\r\n        defaultFormat: calculateDefaultFormat(\r\n            contentDiv,\r\n            options.defaultFormat,\r\n            options.inDarkMode\r\n        ),\r\n        corePlugins,\r\n        currentUndoSnapshot: null,\r\n        customData: createCustomData(options.customData || {}),\r\n        cachedSelectionRange: null,\r\n        plugins: allPlugins,\r\n        eventHandlerPlugins: eventHandlerPlugins,\r\n        api: createCoreApiMap(options.coreApiOverride),\r\n        defaultApi: createCoreApiMap(),\r\n        inDarkMode: options.inDarkMode,\r\n        darkModeOptions: options.darkModeOptions,\r\n    };\r\n}\r\n\r\nfunction buildPluginList(corePlugins: CorePlugins, plugins: EditorPlugin[]): EditorPlugin[] {\r\n    return [\r\n        corePlugins.typeInContainer,\r\n        corePlugins.edit,\r\n        corePlugins.mouseUp,\r\n        ...(plugins || []),\r\n        corePlugins.firefoxTypeAfterLink,\r\n        corePlugins.undo,\r\n        corePlugins.domEvent,\r\n        corePlugins.copyPlugin,\r\n    ].filter(plugin => !!plugin);\r\n}\r\n\r\nfunction createCoreApiMap(map?: Partial<CoreApiMap>): CoreApiMap {\r\n    map = map || {};\r\n    return {\r\n        attachDomEvent: map.attachDomEvent || attachDomEvent,\r\n        editWithUndo: map.editWithUndo || editWithUndo,\r\n        focus: map.focus || focus,\r\n        getCustomData: map.getCustomData || getCustomData,\r\n        getSelectionRange: map.getSelectionRange || getSelectionRange,\r\n        hasFocus: map.hasFocus || hasFocus,\r\n        insertNode: map.insertNode || insertNode,\r\n        select: map.select || select,\r\n        selectRange: map.selectRange || selectRange,\r\n        triggerEvent: map.triggerEvent || triggerEvent,\r\n    };\r\n}\r\n\r\nfunction createCustomData(initValue: { [key: string]: any }): CustomDataMap {\r\n    return Object.keys(initValue).reduce(\r\n        (result, key) => {\r\n            result[key] = {\r\n                value: initValue[key],\r\n            };\r\n            return result;\r\n        },\r\n        <CustomDataMap>{}\r\n    );\r\n}\r\n","import { Browser } from 'roosterjs-editor-dom';\r\nimport { EditorCore } from '..';\r\nimport { PluginEventType } from 'roosterjs-editor-types';\r\n\r\nconst EVENT_MAPPING: { [domEvent: string]: PluginEventType } = {\r\n    keypress: PluginEventType.KeyPress,\r\n    keydown: PluginEventType.KeyDown,\r\n    keyup: PluginEventType.KeyUp,\r\n    mousedown: PluginEventType.MouseDown,\r\n    [Browser.isIE ? 'textinput' : 'input']: PluginEventType.Input,\r\n};\r\n\r\n/**\r\n * Map DOM events to editor plugin events\r\n * @param core The EditorCore object\r\n */\r\nexport default function mapPluginEvents(core: EditorCore): (() => void)[] {\r\n    return Object.keys(EVENT_MAPPING).map(pluginEvent =>\r\n        core.api.attachDomEvent(core, pluginEvent, EVENT_MAPPING[pluginEvent])\r\n    );\r\n}\r\n","import cacheGetEventData from './cacheGetEventData';\r\nimport clearEventDataCache from './clearEventDataCache';\r\nimport Editor from '../editor/Editor';\r\nimport { PluginEvent } from 'roosterjs-editor-types';\r\nimport { PositionContentSearcher } from 'roosterjs-editor-dom';\r\n\r\nconst CONTENTSEARCHER_KEY = 'CONTENTSEARCHER';\r\n\r\n/**\r\n * Try get existing PositionContentSearcher from an event. If there isn't one, create a new one from editor.\r\n * @param event The plugin event, it stores the event cached data for looking up.\r\n * If passed as null, we will create a new PositionContentSearcher\r\n * @param editor The editor instance\r\n * @returns The PositionContentSearcher object\r\n */\r\nexport function cacheGetContentSearcher(\r\n    event: PluginEvent,\r\n    editor: Editor\r\n): PositionContentSearcher {\r\n    return cacheGetEventData(event, CONTENTSEARCHER_KEY, () => editor.getContentSearcherOfCursor());\r\n}\r\n\r\n/**\r\n * Clear the PositionContentSearcher in a plugin event.\r\n * This is called when the content is changed\r\n * @param event The plugin event\r\n */\r\nexport function clearContentSearcherCache(event: PluginEvent) {\r\n    clearEventDataCache(event, CONTENTSEARCHER_KEY);\r\n}\r\n","import cacheGetEventData from './cacheGetEventData';\r\nimport Editor from '../editor/Editor';\r\nimport { PluginEvent } from 'roosterjs-editor-types';\r\n\r\nconst CACHE_KEY_PREFIX = 'GET_ELEMENT_AT_CURSOR_';\r\n\r\n/**\r\n * Get an HTML element at cursor from event cache if it exists.\r\n * If an selector is specified, return the nearest ancestor of current node\r\n * which matches the selector, or null if no match found in editor.\r\n * @param editor The editor instance\r\n * @param event Event object to get cached object from\r\n * @param selector The expected selector. If null, return the element at cursor\r\n * @returns The element at cursor or the nearest ancestor with the tag name is specified\r\n */\r\nexport default function cacheGetElementAtCursor(\r\n    editor: Editor,\r\n    event: PluginEvent,\r\n    selector: string\r\n): HTMLElement {\r\n    return cacheGetEventData(event, CACHE_KEY_PREFIX + selector, () =>\r\n        editor.getElementAtCursor(selector)\r\n    );\r\n}\r\n","import { PluginEvent } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Gets the cached event data by cache key from event object if there is already one.\r\n * Otherwise, call getter function to create one, and cache it.\r\n * @param event The event object\r\n * @param key Cache key string, need to be unique\r\n * @param getter Getter function to get the object when it is not in cache yet\r\n */\r\nexport default function cacheGetEventData<T>(event: PluginEvent, key: string, getter: () => T): T {\r\n    let result =\r\n        event && event.eventDataCache && event.eventDataCache.hasOwnProperty(key)\r\n            ? <T>event.eventDataCache[key]\r\n            : getter();\r\n    if (event) {\r\n        event.eventDataCache = event.eventDataCache || {};\r\n        event.eventDataCache[key] = result;\r\n    }\r\n\r\n    return result;\r\n}\r\n","import { PluginEvent } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Clear a cached object by its key from an event object\r\n * @param event The event object\r\n * @param key The cache key\r\n */\r\nexport default function clearEventDataCache(event: PluginEvent, key: string): void {\r\n    if (event && event.eventDataCache && event.eventDataCache.hasOwnProperty(key)) {\r\n        delete event.eventDataCache[key];\r\n    }\r\n}\r\n","import isModifierKey from './isModifierKey';\n\n/**\n * Returns true when the event was fired from a key that produces a character value, otherwise false\n * This detection is not 100% accurate. event.key is not fully supported by all browsers, and in some browsers (e.g. IE),\n * event.key is longer than 1 for num pad input. But here we just want to improve performance as much as possible.\n * So if we missed some case here it is still acceptable.\n * @param event The keyboard event object\n */\nexport default function isCharacterValue(event: KeyboardEvent): boolean {\n    return !isModifierKey(event) && event.key && event.key.length == 1;\n}\n","const CTRL_CHARCODE = 'Control';\r\nconst ALT_CHARCODE = 'Alt';\r\nconst META_CHARCODE = 'Meta';\r\n\r\n/**\r\n * Returns true when the event was fired from a modifier key, otherwise false\r\n * @param event The keyboard event object\r\n */\r\nexport default function isModifierKey(event: KeyboardEvent): boolean {\r\n    const isCtrlKey = event.ctrlKey || event.key === CTRL_CHARCODE;\r\n    const isAltKey = event.altKey || event.key === ALT_CHARCODE;\r\n    const isMetaKey = event.metaKey || event.key === META_CHARCODE;\r\n\r\n    return isCtrlKey || isAltKey || isMetaKey;\r\n}\r\n","// Interfaces\r\nexport {\r\n    ContentEditFeature,\r\n    GenericContentEditFeature,\r\n    Keys,\r\n} from './interfaces/ContentEditFeature';\r\nexport { default as CustomData, CustomDataMap } from './interfaces/CustomData';\r\nexport {\r\n    default as EditorCore,\r\n    CorePlugins,\r\n    CoreApiMap,\r\n    AttachDomEvent,\r\n    EditWithUndo,\r\n    Focus,\r\n    GetCustomData,\r\n    GetSelectionRange,\r\n    HasFocus,\r\n    InsertNode,\r\n    Select,\r\n    SelectRange,\r\n    TriggerEvent,\r\n} from './interfaces/EditorCore';\r\nexport { default as EditorOptions } from './interfaces/EditorOptions';\r\nexport { default as EditorPlugin } from './interfaces/EditorPlugin';\r\nexport { default as UndoService } from './interfaces/UndoService';\r\nexport { default as UndoSnapshotsService } from './interfaces/UndoSnapshotsService';\r\n\r\n// Classes\r\nexport { default as Editor } from './editor/Editor';\r\nexport { default as Undo } from './undo/Undo';\r\n\r\n// Core Plugins\r\nexport { default as EditPlugin } from './corePlugins/EditPlugin';\r\nexport { default as MouseUpPlugin } from './corePlugins/MouseUpPlugin';\r\nexport { default as DOMEventPlugin } from './corePlugins/DOMEventPlugin';\r\nexport { default as TypeInContainerPlugin } from './corePlugins/TypeInContainerPlugin';\r\nexport { default as FirefoxTypeAfterLink } from './corePlugins/FirefoxTypeAfterLink';\r\nexport { default as CopyPlugin } from './corePlugins/CopyPlugin';\r\n\r\n// Event APIs\r\nexport { default as cacheGetEventData } from './eventApi/cacheGetEventData';\r\nexport { default as clearEventDataCache } from './eventApi/clearEventDataCache';\r\nexport {\r\n    cacheGetContentSearcher,\r\n    clearContentSearcherCache,\r\n} from './eventApi/cacheGetContentSearcher';\r\nexport { default as cacheGetElementAtCursor } from './eventApi/cacheGetElementAtCursor';\r\nexport { default as isModifierKey } from './eventApi/isModifierKey';\r\nexport { default as isCharacterValue } from './eventApi/isCharacterValue';\r\n","import Editor from '../editor/Editor';\r\nimport UndoService from '../interfaces/UndoService';\r\nimport UndoSnapshots from './UndoSnapshots';\r\nimport UndoSnapshotsService from '../interfaces/UndoSnapshotsService';\r\nimport { PluginEvent, PluginEventType } from 'roosterjs-editor-types';\r\n\r\nconst KEY_BACKSPACE = 8;\r\nconst KEY_DELETE = 46;\r\nconst KEY_SPACE = 32;\r\nconst KEY_ENTER = 13;\r\nconst KEY_PAGEUP = 33;\r\nconst KEY_DOWN = 40;\r\n\r\n/**\r\n * Provides snapshot based undo service for Editor\r\n */\r\nexport default class Undo implements UndoService {\r\n    private editor: Editor;\r\n    private isRestoring: boolean;\r\n    private hasNewContent: boolean;\r\n    private lastKeyPress: number;\r\n\r\n    protected undoSnapshots: UndoSnapshotsService;\r\n\r\n    /**\r\n     * Create an instance of Undo\r\n     * @param preserveSnapshots True to preserve the snapshots after dispose, this allows\r\n     * this object to be reused when editor is disposed and created again\r\n     * @param maxBufferSize The max buffer size for snapshots. Default value is 10MB\r\n     */\r\n    constructor(private preserveSnapshots?: boolean, private maxBufferSize: number = 1e7) { }\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'Undo';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    public initialize(editor: Editor): void {\r\n        this.editor = editor;\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    public dispose() {\r\n        this.editor = null;\r\n\r\n        if (!this.preserveSnapshots) {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    public onPluginEvent(event: PluginEvent): void {\r\n        // if editor is in IME, don't do anything\r\n        if (this.editor.isInIME()) {\r\n            return;\r\n        }\r\n\r\n        switch (event.eventType) {\r\n            case PluginEventType.EditorReady:\r\n                if (!this.preserveSnapshots || (!this.canUndo() && !this.canRedo())) {\r\n                    // Only add initial snapshot when we don't need to preserve snapshots or there is no existing snapshot\r\n                    // Otherwise preserved undo/redo state may be ruined\r\n                    this.addUndoSnapshot();\r\n                }\r\n                break;\r\n            case PluginEventType.KeyDown:\r\n                this.onKeyDown(event.rawEvent);\r\n                break;\r\n            case PluginEventType.KeyPress:\r\n                this.onKeyPress(event.rawEvent);\r\n                break;\r\n            case PluginEventType.CompositionEnd:\r\n                this.clearRedoForInput();\r\n                this.addUndoSnapshot();\r\n                break;\r\n            case PluginEventType.ContentChanged:\r\n                if (!this.isRestoring) {\r\n                    this.clearRedoForInput();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all existing undo snapshots\r\n     */\r\n    public clear() {\r\n        this.undoSnapshots = null;\r\n        this.hasNewContent = false;\r\n    }\r\n\r\n    /**\r\n     * Restore an undo snapshot to editor\r\n     */\r\n    public undo(): void {\r\n        if (this.hasNewContent) {\r\n            this.addUndoSnapshot();\r\n        }\r\n\r\n        this.restoreSnapshot(-1 /*previousSnapshot*/);\r\n    }\r\n\r\n    /**\r\n     * Restore a redo snapshot to editor\r\n     */\r\n    public redo(): void {\r\n        this.restoreSnapshot(1 /*nextSnapshot*/);\r\n    }\r\n\r\n    /**\r\n     * Whether there is a snapshot for undo\r\n     */\r\n    public canUndo(): boolean {\r\n        return this.hasNewContent || this.getSnapshotsManager().canMove(-1 /*previousSnapshot*/);\r\n    }\r\n\r\n    /**\r\n     * Whether there is a snapshot for redo\r\n     */\r\n    public canRedo(): boolean {\r\n        return this.getSnapshotsManager().canMove(1 /*nextSnapshot*/);\r\n    }\r\n\r\n    /**\r\n     * Add an undo snapshot\r\n     */\r\n    public addUndoSnapshot(): string {\r\n        let snapshot = this.editor.getContent(\r\n            false /*triggerExtractContentEvent*/,\r\n            true /* includeSelectionMarker */\r\n        );\r\n        this.getSnapshotsManager().addSnapshot(snapshot);\r\n        this.hasNewContent = false;\r\n        return snapshot;\r\n    }\r\n\r\n    protected getSnapshotsManager(): UndoSnapshotsService {\r\n        if (!this.undoSnapshots) {\r\n            this.undoSnapshots = new UndoSnapshots(this.maxBufferSize);\r\n        }\r\n        return this.undoSnapshots;\r\n    }\r\n\r\n    private restoreSnapshot(delta: number) {\r\n        let snapshot = this.getSnapshotsManager().move(delta);\r\n\r\n        if (snapshot != null) {\r\n            try {\r\n                this.isRestoring = true;\r\n                this.editor.setContent(snapshot);\r\n            } finally {\r\n                this.isRestoring = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private onKeyDown(evt: KeyboardEvent): void {\r\n        // Handle backspace/delete when there is a selection to take a snapshot\r\n        // since we want the state prior to deletion restorable\r\n        if (evt.which == KEY_BACKSPACE || evt.which == KEY_DELETE) {\r\n            let selectionRange = this.editor.getSelectionRange();\r\n\r\n            // Add snapshot when\r\n            // 1. Something has been selected (not collapsed), or\r\n            // 2. It has a different key code from the last keyDown event (to prevent adding too many snapshot when keeping press the same key), or\r\n            // 3. Ctrl/Meta key is pressed so that a whole word will be deleted\r\n            if (\r\n                selectionRange &&\r\n                (!selectionRange.collapsed ||\r\n                    this.lastKeyPress != evt.which ||\r\n                    evt.ctrlKey ||\r\n                    evt.metaKey)\r\n            ) {\r\n                this.addUndoSnapshot();\r\n            }\r\n\r\n            // Since some content is deleted, always set hasNewContent to true so that we will take undo snapshot next time\r\n            this.hasNewContent = true;\r\n            this.lastKeyPress = evt.which;\r\n        } else if (evt.which >= KEY_PAGEUP && evt.which <= KEY_DOWN) {\r\n            // PageUp, PageDown, Home, End, Left, Right, Up, Down\r\n            if (this.hasNewContent) {\r\n                this.addUndoSnapshot();\r\n            }\r\n            this.lastKeyPress = 0;\r\n        }\r\n    }\r\n\r\n    private onKeyPress(evt: KeyboardEvent): void {\r\n        if (evt.metaKey) {\r\n            // if metaKey is pressed, simply return since no actual effect will be taken on the editor.\r\n            // this is to prevent changing hasNewContent to true when meta + v to paste on Safari.\r\n            return;\r\n        }\r\n\r\n        let range = this.editor.getSelectionRange();\r\n        if (\r\n            (range && !range.collapsed) ||\r\n            (evt.which == KEY_SPACE && this.lastKeyPress != KEY_SPACE) ||\r\n            evt.which == KEY_ENTER\r\n        ) {\r\n            this.addUndoSnapshot();\r\n            if (evt.which == KEY_ENTER) {\r\n                // Treat ENTER as new content so if there is no input after ENTER and undo,\r\n                // we restore the snapshot before ENTER\r\n                this.hasNewContent = true;\r\n            }\r\n        } else {\r\n            this.clearRedoForInput();\r\n        }\r\n\r\n        this.lastKeyPress = evt.which;\r\n    }\r\n\r\n    private clearRedoForInput() {\r\n        this.getSnapshotsManager().clearRedo();\r\n        this.lastKeyPress = 0;\r\n        this.hasNewContent = true;\r\n    }\r\n}\r\n","import UndoSnapshotsService from '../interfaces/UndoSnapshotsService';\r\n\r\n// Max stack size that cannot be exceeded. When exceeded, old undo history will be dropped\r\n// to keep size under limit. This is kept at 10MB\r\nconst MAXSIZELIMIT = 1e7;\r\n\r\n/**\r\n * A class to help manage undo snapshots\r\n */\r\nexport default class UndoSnapshots implements UndoSnapshotsService {\r\n    private snapshots: string[];\r\n    private totalSize: number;\r\n    private currentIndex: number;\r\n\r\n    constructor(private maxSize: number = MAXSIZELIMIT) {\r\n        this.snapshots = [];\r\n        this.totalSize = 0;\r\n        this.currentIndex = -1;\r\n    }\r\n\r\n    /**\r\n     * Check whether can move current undo snapshot with the given step\r\n     * @param step The step to check, can be positive, negative or 0\r\n     * @returns True if can move current snapshot with the given step, otherwise false\r\n     */\r\n    public canMove(delta: number): boolean {\r\n        let newIndex = this.currentIndex + delta;\r\n        return newIndex >= 0 && newIndex < this.snapshots.length;\r\n    }\r\n\r\n    /**\r\n     * Move current snapshot with the given step if can move this step. Otherwise no action and return null\r\n     * @param step The step to move\r\n     * @returns If can move with the given step, returns the snapshot after move, otherwise null\r\n     */\r\n    public move(delta: number): string {\r\n        if (this.canMove(delta)) {\r\n            this.currentIndex += delta;\r\n            return this.snapshots[this.currentIndex];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a new undo snapshot\r\n     * @param snapshot The snapshot to add\r\n     */\r\n    public addSnapshot(snapshot: string) {\r\n        if (this.currentIndex < 0 || snapshot != this.snapshots[this.currentIndex]) {\r\n            this.clearRedo();\r\n            this.snapshots.push(snapshot);\r\n            this.currentIndex++;\r\n            this.totalSize += snapshot.length;\r\n\r\n            let removeCount = 0;\r\n            while (removeCount < this.snapshots.length && this.totalSize > this.maxSize) {\r\n                this.totalSize -= this.snapshots[removeCount].length;\r\n                removeCount++;\r\n            }\r\n\r\n            if (removeCount > 0) {\r\n                this.snapshots.splice(0, removeCount);\r\n                this.currentIndex -= removeCount;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all undo snapshots after the current one\r\n     */\r\n    public clearRedo() {\r\n        if (this.canMove(1)) {\r\n            let removedSize = 0;\r\n            for (let i = this.currentIndex + 1; i < this.snapshots.length; i++) {\r\n                removedSize += this.snapshots[i].length;\r\n            }\r\n            this.snapshots.splice(this.currentIndex + 1);\r\n            this.totalSize -= removedSize;\r\n        }\r\n    }\r\n}\r\n","import contains from '../utils/contains';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This presents a content block that can be reprented by a single html block type element.\r\n * In most cases, it corresponds to an HTML block level element, i.e. P, DIV, LI, TD etc.\r\n */\r\nexport default class NodeBlockElement implements BlockElement {\r\n    constructor(private element: HTMLElement) { }\r\n\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    public collapseToSingleElement(): HTMLElement {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Get the start node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    public getStartNode(): Node {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Get the end node of the block\r\n     * For NodeBlockElement, start and end essentially refers to same node\r\n     */\r\n    public getEndNode(): Node {\r\n        return this.element;\r\n    }\r\n\r\n    /**\r\n     * Checks if it refers to same block\r\n     */\r\n    public equals(blockElement: BlockElement): boolean {\r\n        // Ideally there is only one unique way to generate a block so we only need to compare the startNode\r\n        return this.element == blockElement.getStartNode();\r\n    }\r\n\r\n    /**\r\n     * Checks if a block is after the current block\r\n     */\r\n    public isAfter(blockElement: BlockElement): boolean {\r\n        // if the block's startNode is after current node endEnd, we say it is after\r\n        return isNodeAfter(this.element, blockElement.getEndNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if a certain html node is within the block\r\n     */\r\n    public contains(node: Node): boolean {\r\n        return contains(this.element, node, true /*treatSameNodeAsContain*/);\r\n    }\r\n\r\n    /**\r\n     * Get the text content of this block element\r\n     */\r\n    public getTextContent(): string {\r\n        return this.element.textContent;\r\n    }\r\n}\r\n","import collapseNodes from '../utils/collapseNodes';\r\nimport contains from '../utils/contains';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isBlockElement from '../utils/isBlockElement';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport wrap from '../utils/wrap';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\nimport { splitBalancedNodeRange } from '../utils/splitParentNode';\r\nimport createRange from '../selection/createRange';\r\n\r\nconst STRUCTURE_NODE_TAGS = ['TD', 'TH', 'LI', 'BLOCKQUOTE'];\r\n\r\n/**\r\n * This reprents a block that is identified by a start and end node\r\n * This is for cases like &lt;root&gt;Hello&lt;BR&gt;World&lt;/root&gt;\r\n * in that case, Hello&lt;BR&gt; is a block, World is another block\r\n * Such block cannot be represented by a NodeBlockElement since they don't chained up\r\n * to a single parent node, instead they have a start and end\r\n * This start and end must be in same sibling level and have same parent in DOM tree\r\n */\r\nexport default class StartEndBlockElement implements BlockElement {\r\n    constructor(private rootNode: Node, private startNode: Node, private endNode: Node) { }\r\n\r\n    static getBlockContext(node: Node): HTMLElement {\r\n        while (node && !isBlockElement(node)) {\r\n            node = node.parentNode;\r\n        }\r\n        return node as HTMLElement;\r\n    }\r\n\r\n    /**\r\n     * Collapse this element to a single DOM element.\r\n     * If the content nodes are separated in different root nodes, wrap them to a single node\r\n     * If the content nodes are included in root node with other nodes, split root node\r\n     */\r\n    public collapseToSingleElement(): HTMLElement {\r\n        let nodes = collapseNodes(\r\n            StartEndBlockElement.getBlockContext(this.startNode),\r\n            this.startNode,\r\n            this.endNode,\r\n            true /*canSplitParent*/\r\n        );\r\n        let blockContext = StartEndBlockElement.getBlockContext(this.startNode);\r\n        while (\r\n            nodes[0] &&\r\n            nodes[0] != blockContext &&\r\n            nodes[0].parentNode != this.rootNode &&\r\n            STRUCTURE_NODE_TAGS.indexOf(getTagOfNode(nodes[0].parentNode)) < 0\r\n        ) {\r\n            nodes = [splitBalancedNodeRange(nodes)];\r\n        }\r\n        return nodes.length == 1 && isBlockElement(nodes[0])\r\n            ? (nodes[0] as HTMLElement)\r\n            : wrap(nodes);\r\n    }\r\n\r\n    /**\r\n     * Gets the start node\r\n     */\r\n    public getStartNode(): Node {\r\n        return this.startNode;\r\n    }\r\n\r\n    /**\r\n     * Gets the end node\r\n     */\r\n    public getEndNode(): Node {\r\n        return this.endNode;\r\n    }\r\n\r\n    /**\r\n     * Checks equals of two blocks\r\n     */\r\n    public equals(blockElement: BlockElement): boolean {\r\n        return (\r\n            this.startNode == blockElement.getStartNode() &&\r\n            this.endNode == blockElement.getEndNode()\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if another block is after this current\r\n     */\r\n    public isAfter(blockElement: BlockElement): boolean {\r\n        return isNodeAfter(this.getStartNode(), blockElement.getEndNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if an Html node is contained within the block\r\n     */\r\n    public contains(node: Node): boolean {\r\n        return (\r\n            contains(this.startNode, node, true /*treatSameNodeAsContain*/) ||\r\n            contains(this.endNode, node, true /*treatSameNodeAsContain*/) ||\r\n            (isNodeAfter(node, this.startNode) && isNodeAfter(this.endNode, node))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get the text content of this block element\r\n     */\r\n    public getTextContent(): string {\r\n        return createRange(this.getStartNode(), this.getEndNode()).toString();\r\n    }\r\n}\r\n","import collapseNodes from '../utils/collapseNodes';\r\nimport contains from '../utils/contains';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isBlockElement from '../utils/isBlockElement';\r\nimport NodeBlockElement from './NodeBlockElement';\r\nimport StartEndBlockElement from './StartEndBlockElement';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This produces a block element from a a node\r\n * It needs to account for various HTML structure. Examples:\r\n * 1) &lt;root&gt;&lt;div&gt;abc&lt;/div&gt;&lt;/root&gt;\r\n *   This is most common the case, user passes in a node pointing to abc, and get back a block representing &lt;div&gt;abc&lt;/div&gt;\r\n * 2) &lt;root&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;/root&gt;\r\n *   Common content for empty block, user passes node pointing to &lt;br&gt;, and get back a block representing &lt;p&gt;&lt;br&gt;&lt;/p&gt;\r\n * 3) &lt;root&gt;abc&lt;/root&gt;\r\n *   Not common, but does happen. It is still a block in user's view. User passes in abc, and get back a start-end block representing abc\r\n *   NOTE: abc could be just one node. However, since it is not a html block, it is more appropriate to use start-end block although they point to same node\r\n * 4) &lt;root&gt;&lt;div&gt;abc&lt;br&gt;123&lt;/div&gt;&lt;/root&gt;\r\n *   A bit tricky, but can happen when user use Ctrl+Enter which simply inserts a &lt;BR&gt; to create a link break. There're two blocks:\r\n *   block1: 1) abc&lt;br&gt; block2: 123\r\n * 5) &lt;root&gt;&lt;div&gt;abc&lt;div&gt;123&lt;/div&gt;&lt;/div&gt;&lt;/root&gt;\r\n *   Nesting div and there is text node in same level as a DIV. Two blocks: 1) abc 2) &lt;div&gt;123&lt;/div&gt;\r\n * 6) &lt;root&gt;&lt;div&gt;abc&lt;span&gt;123&lt;br&gt;456&lt;/span&gt;&lt;/div&gt;&lt;/root&gt;\r\n *   This is really tricky. Essentially there is a &lt;BR&gt; in middle of a span breaking the span into two blocks;\r\n *   block1: abc&lt;span&gt;123&lt;br&gt; block2: 456\r\n * In summary, given any arbitary node (leaf), to identify the head and tail of the block, following rules need to be followed:\r\n * 1) to identify the head, it needs to crawl DOM tre left/up till a block node or BR is encountered\r\n * 2) same for identifying tail\r\n * 3) should also apply a block ceiling, meaning as it crawls up, it should stop at a block node\r\n * @param rootNode Root node of the scope, the block element will be inside of this node\r\n * @param node The node to get BlockElement start from\r\n */\r\nexport default function getBlockElementAtNode(rootNode: Node, node: Node): BlockElement {\r\n    if (!contains(rootNode, node)) {\r\n        return null;\r\n    }\r\n\r\n    // Identify the containing block. This serves as ceiling for traversing down below\r\n    // NOTE: this container block could be just the rootNode,\r\n    // which cannot be used to create block element. We will special case handle it later on\r\n    let containerBlockNode = StartEndBlockElement.getBlockContext(node);\r\n    if (containerBlockNode == node) {\r\n        return new NodeBlockElement(containerBlockNode);\r\n    }\r\n\r\n    // Find the head and leaf node in the block\r\n    let headNode = findHeadTailLeafNode(node, containerBlockNode, false /*isTail*/);\r\n    let tailNode = findHeadTailLeafNode(node, containerBlockNode, true /*isTail*/);\r\n\r\n    // At this point, we have the head and tail of a block, here are some examples and where head and tail point to\r\n    // 1) &lt;root&gt;&lt;div&gt;hello&lt;br&gt;&lt;/div&gt;&lt;/root&gt;, head: hello, tail: &lt;br&gt;\r\n    // 2) &lt;root&gt;&lt;div&gt;hello&lt;span style=\"font-family: Arial\"&gt;world&lt;/span&gt;&lt;/div&gt;&lt;/root&gt;, head: hello, tail: world\r\n    // Both are actually completely and exclusively wrapped in a parent div, and can be represented with a Node block\r\n    // So we shall try to collapse as much as we can to the nearest common ancester\r\n    let nodes = collapseNodes(rootNode, headNode, tailNode, false /*canSplitParent*/);\r\n    headNode = nodes[0];\r\n    tailNode = nodes[nodes.length - 1];\r\n\r\n    if (headNode.parentNode != tailNode.parentNode) {\r\n        // Un-Balanced start and end, create a start-end block\r\n        return new StartEndBlockElement(rootNode, headNode, tailNode);\r\n    } else {\r\n        // Balanced start and end (point to same parent), need to see if further collapsing can be done\r\n        while (!headNode.previousSibling && !tailNode.nextSibling) {\r\n            let parentNode = headNode.parentNode;\r\n            if (parentNode == containerBlockNode) {\r\n                // Has reached the container block\r\n                if (containerBlockNode != rootNode) {\r\n                    // If the container block is not the root, use the container block\r\n                    headNode = tailNode = parentNode;\r\n                }\r\n                break;\r\n            } else {\r\n                // Continue collapsing to parent\r\n                headNode = tailNode = parentNode;\r\n            }\r\n        }\r\n\r\n        // If head and tail are same and it is a block element, create NodeBlock, otherwise start-end block\r\n        return headNode == tailNode && isBlockElement(headNode)\r\n            ? new NodeBlockElement(headNode as HTMLElement)\r\n            : new StartEndBlockElement(rootNode, headNode, tailNode);\r\n    }\r\n}\r\n\r\n/**\r\n * Given a node and container block, identify the first/last leaf node\r\n * A leaf node is defined as deepest first/last node in a block\r\n * i.e. &lt;div&gt;&lt;span style=\"font-family: Arial\"&gt;abc&lt;/span&gt;&lt;/div&gt;, abc is the head leaf of the block\r\n * Often &lt;br&gt; or a child &lt;div&gt; is used to create a block. In that case, the leaf after the sibling div or br should be the head leaf\r\n * i.e. &lt;div&gt;123&lt;br&gt;abc&lt;/div&gt;, abc is the head of a block because of a previous sibling &lt;br&gt;\r\n * i.e. &lt;div&gt;&lt;div&gt;123&lt;/div&gt;abc&lt;/div&gt;, abc is also the head of a block because of a previous sibling &lt;div&gt;\r\n */\r\nfunction findHeadTailLeafNode(node: Node, containerBlockNode: Node, isTail: boolean): Node {\r\n    let result = node;\r\n\r\n    if (getTagOfNode(result) == 'BR' && isTail) {\r\n        return result;\r\n    }\r\n\r\n    while (result) {\r\n        let sibling = node;\r\n        while (!(sibling = isTail ? node.nextSibling : node.previousSibling)) {\r\n            node = node.parentNode;\r\n            if (node == containerBlockNode) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        while (sibling) {\r\n            if (isBlockElement(sibling)) {\r\n                return result;\r\n            } else if (getTagOfNode(sibling) == 'BR') {\r\n                return isTail ? sibling : result;\r\n            }\r\n\r\n            node = sibling;\r\n            sibling = isTail ? node.firstChild : node.lastChild;\r\n        }\r\n\r\n        result = node;\r\n    }\r\n    return result;\r\n}\r\n","import getBlockElementAtNode from './getBlockElementAtNode';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the first/last BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n * @param isFirst True to get first BlockElement, false to get last BlockElement\r\n */\r\nexport default function getFirstLastBlockElement(rootNode: Node, isFirst: boolean): BlockElement {\r\n    let node = rootNode;\r\n    do {\r\n        node = node && (isFirst ? node.firstChild : node.lastChild);\r\n    } while (node && node.firstChild);\r\n    return node && getBlockElementAtNode(rootNode, node);\r\n}\r\n\r\n/**\r\n * Get the first BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n */\r\nexport function getFirstBlockElement(rootNode: Node): BlockElement {\r\n    return getFirstLastBlockElement(rootNode, true /*isFirst*/);\r\n}\r\n\r\n/**\r\n * Get the last BlockElement of under the root node.\r\n * If no suitable BlockElement found, returns null\r\n * @param rootNode The root node to get BlockElement from\r\n */\r\nexport function getLastBlockElement(rootNode: Node): BlockElement {\r\n    return getFirstLastBlockElement(rootNode, false /*isFirst*/);\r\n}\r\n","import contains from '../utils/contains';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport TraversingScoper from './TraversingScoper';\r\nimport { BlockElement, InlineElement } from 'roosterjs-editor-types';\r\nimport { getFirstBlockElement } from '../blockElements/getFirstLastBlockElement';\r\nimport { getFirstInlineElement } from '../inlineElements/getFirstLastInlineElement';\r\n\r\n/**\r\n * provides scoper for traversing the entire editor body starting from the beginning\r\n */\r\nexport default class BodyScoper implements TraversingScoper {\r\n    private startNode: Node;\r\n\r\n    /**\r\n     * Construct a new instance of BodyScoper class\r\n     * @param rootNode Root node of the body\r\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\r\n     */\r\n    constructor(public rootNode: Node, startNode?: Node) {\r\n        this.startNode = contains(rootNode, startNode) ? startNode : null;\r\n    }\r\n\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    public getStartBlockElement(): BlockElement {\r\n        return this.startNode\r\n            ? getBlockElementAtNode(this.rootNode, this.startNode)\r\n            : getFirstBlockElement(this.rootNode);\r\n    }\r\n\r\n    /**\r\n     * Get the start inline element\r\n     */\r\n    public getStartInlineElement(): InlineElement {\r\n        return this.startNode\r\n            ? getInlineElementAtNode(this.rootNode, this.startNode)\r\n            : getFirstInlineElement(this.rootNode);\r\n    }\r\n\r\n    /**\r\n     * Since the scope is global, all blocks under the root node are in scope\r\n     */\r\n    public isBlockInScope(blockElement: BlockElement): boolean {\r\n        return contains(this.rootNode, blockElement.getStartNode());\r\n    }\r\n\r\n    /**\r\n     * Since we're at body scope, inline elements never need to be trimmed\r\n     */\r\n    public trimInlineElement(inlineElement: InlineElement): InlineElement {\r\n        return inlineElement;\r\n    }\r\n}\r\n","import BodyScoper from './BodyScoper';\r\nimport EmptyInlineElement from '../inlineElements/EmptyInlineElement';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport PartialInlineElement from '../inlineElements/PartialInlineElement';\r\nimport SelectionBlockScoper from './SelectionBlockScoper';\r\nimport SelectionScoper from './SelectionScoper';\r\nimport TraversingScoper from './TraversingScoper';\r\nimport { BlockElement, ContentPosition, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\nimport { getInlineElementBeforeAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\nimport { getLeafSibling } from '../utils/getLeafSibling';\r\n\r\n/**\r\n * The provides traversing of content inside editor.\r\n * There are two ways to traverse, block by block, or inline element by inline element\r\n * Block and inline traversing is independent from each other, meanning if you traverse block by block, it does not change\r\n * the current inline element position\r\n */\r\nexport default class ContentTraverser {\r\n    private currentInline: InlineElement;\r\n    private currentBlock: BlockElement;\r\n\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param scoper Traversing scoper object to help scope the traversing\r\n     */\r\n    private constructor(private scoper: TraversingScoper) {}\r\n\r\n    /**\r\n     * Create a content traverser for the whole body of given root node\r\n     * @param rootNode The root node to traverse in\r\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\r\n     */\r\n    public static createBodyTraverser(rootNode: Node, startNode?: Node): ContentTraverser {\r\n        return new ContentTraverser(new BodyScoper(rootNode, startNode));\r\n    }\r\n\r\n    /**\r\n     * Create a content traverser for the given selection\r\n     * @param rootNode The root node to traverse in\r\n     * @param range The selection range to scope the traversing\r\n     */\r\n    public static createSelectionTraverser(rootNode: Node, range: Range): ContentTraverser {\r\n        return new ContentTraverser(new SelectionScoper(rootNode, range));\r\n    }\r\n\r\n    /**\r\n     * Create a content traverser for a block element which contains the given position\r\n     * @param rootNode The root node to traverse in\r\n     * @param position A position inside a block, traversing will be scoped within this block.\r\n     * If passing a range, the start position of this range will be used\r\n     * @param startFrom Start position of traversing. The value can be Begin, End, SelectionStart\r\n     */\r\n    public static createBlockTraverser(\r\n        rootNode: Node,\r\n        position: NodePosition | Range,\r\n        start: ContentPosition = ContentPosition.SelectionStart\r\n    ): ContentTraverser {\r\n        return new ContentTraverser(new SelectionBlockScoper(rootNode, position, start));\r\n    }\r\n\r\n    /**\r\n     * Get current block\r\n     */\r\n    public get currentBlockElement(): BlockElement {\r\n        // Prepare currentBlock from the scoper\r\n        if (!this.currentBlock) {\r\n            this.currentBlock = this.scoper.getStartBlockElement();\r\n        }\r\n\r\n        return this.currentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get next block element\r\n     */\r\n    public getNextBlockElement(): BlockElement {\r\n        return this.getPreviousNextBlockElement(true /*isNext*/);\r\n    }\r\n\r\n    /**\r\n     * Get previous block element\r\n     */\r\n    public getPreviousBlockElement(): BlockElement {\r\n        return this.getPreviousNextBlockElement(false /*isNext*/);\r\n    }\r\n\r\n    private getPreviousNextBlockElement(isNext: boolean): BlockElement {\r\n        let current = this.currentBlockElement;\r\n        let leaf = getLeafSibling(\r\n            this.scoper.rootNode,\r\n            isNext ? current.getEndNode() : current.getStartNode(),\r\n            isNext\r\n        );\r\n        let newBlock = leaf ? getBlockElementAtNode(this.scoper.rootNode, leaf) : null;\r\n\r\n        // Make sure this is right block:\r\n        // 1) the block is in scope per scoper\r\n        // 2) the block is after (for next) or before (for previous) the current block\r\n        // Then:\r\n        // 1) Re-position current block to newly found block\r\n        if (\r\n            newBlock &&\r\n            this.scoper.isBlockInScope(newBlock) &&\r\n            ((isNext && newBlock.isAfter(current)) || (!isNext && current.isAfter(newBlock)))\r\n        ) {\r\n            this.currentBlock = newBlock;\r\n            return this.currentBlock;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Current inline element getter\r\n     */\r\n    public get currentInlineElement(): InlineElement {\r\n        // Retrieve a start inline from scoper\r\n        if (!this.currentInline) {\r\n            this.currentInline = this.scoper.getStartInlineElement();\r\n        }\r\n\r\n        return this.currentInline instanceof EmptyInlineElement ? null : this.currentInline;\r\n    }\r\n\r\n    /**\r\n     * Get next inline element\r\n     */\r\n    public getNextInlineElement(): InlineElement {\r\n        return this.getPreviousNextInlineElement(true /*isNext*/);\r\n    }\r\n\r\n    /**\r\n     * Get previous inline element\r\n     */\r\n    public getPreviousInlineElement(): InlineElement {\r\n        return this.getPreviousNextInlineElement(false /*isNext*/);\r\n    }\r\n\r\n    private getPreviousNextInlineElement(isNext: boolean): InlineElement {\r\n        let current = this.currentInlineElement || this.currentInline;\r\n        let newInline: InlineElement;\r\n\r\n        if (current instanceof EmptyInlineElement) {\r\n            newInline = getInlineElementBeforeAfter(\r\n                this.scoper.rootNode,\r\n                current.getStartPosition(),\r\n                isNext\r\n            );\r\n            if (newInline && !current.getParentBlock().contains(newInline.getContainerNode())) {\r\n                newInline = null;\r\n            }\r\n        } else {\r\n            newInline = getNextPreviousInlineElement(this.scoper.rootNode, current, isNext);\r\n            newInline =\r\n                newInline &&\r\n                current &&\r\n                ((isNext && newInline.isAfter(current)) || (!isNext && current.isAfter(newInline)))\r\n                    ? newInline\r\n                    : null;\r\n        }\r\n\r\n        // For inline, we need to make sure:\r\n        // 1) it is really next/previous to current\r\n        // 2) pass on the new inline to this.scoper to do the triming and we still get back an inline\r\n        // Then\r\n        // 1) re-position current inline\r\n        if (newInline && (newInline = this.scoper.trimInlineElement(newInline))) {\r\n            this.currentInline = newInline;\r\n            return this.currentInline;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getNextPreviousInlineElement(\r\n    rootNode: Node,\r\n    current: InlineElement,\r\n    isNext: boolean\r\n): InlineElement {\r\n    if (!current) {\r\n        return null;\r\n    }\r\n    if (current instanceof PartialInlineElement) {\r\n        // if current is partial, get the the othe half of the inline unless it is no more\r\n        let result = isNext ? current.nextInlineElement : current.previousInlineElement;\r\n\r\n        if (result) {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    // Get a leaf node after startNode and use that base to find next inline\r\n    let startNode = current.getContainerNode();\r\n    startNode = getLeafSibling(rootNode, startNode, isNext);\r\n    return getInlineElementAtNode(rootNode, startNode);\r\n}\r\n","import ContentTraverser from './ContentTraverser';\r\nimport createRange from '../selection/createRange';\r\nimport { InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n// White space matching regex. It matches following chars:\r\n// \\s: white space\r\n// \\u00A0: no-breaking white space\r\n// \\u200B: zero width space\r\n// \\u3000: full width space (which can come from JPN IME)\r\nconst WHITESPACE_REGEX = /[\\s\\u00A0\\u200B\\u3000]+([^\\s\\u00A0\\u200B\\u3000]*)$/i;\r\n\r\n/**\r\n * The class that helps search content around a position\r\n */\r\nexport default class PositionContentSearcher {\r\n    // The cached text before position that has been read so far\r\n    private text = '';\r\n\r\n    // The cached word before position\r\n    private word: string;\r\n\r\n    // The inline element before position\r\n    private inlineBefore: InlineElement;\r\n\r\n    // The inline element after position\r\n    private inlineAfter: InlineElement;\r\n\r\n    // The content traverser used to traverse backwards\r\n    private traverser: ContentTraverser;\r\n\r\n    // Backward parsing has completed\r\n    private traversingComplete: boolean;\r\n\r\n    // All inline elements before position that have been read so far\r\n    private inlineElements: InlineElement[] = [];\r\n\r\n    // First non-text inline before position\r\n    private nearestNonTextInlineElement: InlineElement;\r\n\r\n    /**\r\n     * Create a new CursorData instance\r\n     * @param rootNode Root node of the whole scope\r\n     * @param position Start position\r\n     */\r\n    constructor(private rootNode: Node, private position: NodePosition) {}\r\n\r\n    /**\r\n     * Get the word before position. The word is determined by scanning backwards till the first white space, the portion\r\n     * between position and the white space is the word before position\r\n     * @returns The word before position\r\n     */\r\n    public getWordBefore(): string {\r\n        if (!this.word) {\r\n            this.traverse(() => this.word);\r\n        }\r\n\r\n        return this.word;\r\n    }\r\n\r\n    /**\r\n     * Get the inline element before position\r\n     * @returns The inlineElement before position\r\n     */\r\n    public getInlineElementBefore(): InlineElement {\r\n        if (!this.inlineBefore) {\r\n            this.traverse(null);\r\n        }\r\n\r\n        return this.inlineBefore;\r\n    }\r\n\r\n    /**\r\n     * Get the inline element after position\r\n     * @returns The inline element after position\r\n     */\r\n    public getInlineElementAfter(): InlineElement {\r\n        if (!this.inlineAfter) {\r\n            this.inlineAfter = ContentTraverser.createBlockTraverser(\r\n                this.rootNode,\r\n                this.position\r\n            ).currentInlineElement;\r\n        }\r\n\r\n        return this.inlineAfter;\r\n    }\r\n\r\n    /**\r\n     * Get X number of chars before position\r\n     * The actual returned chars may be less than what is requested.\r\n     * @param length The length of string user want to get, the string always ends at the position,\r\n     * so this length determins the start position of the string\r\n     * @returns The actual string we get as a sub string, or the whole string before position when\r\n     * there is not enough chars in the string\r\n     */\r\n    public getSubStringBefore(length: number): string {\r\n        if (this.text.length < length) {\r\n            this.traverse(() => this.text.length >= length);\r\n        }\r\n\r\n        return this.text.substr(Math.max(0, this.text.length - length));\r\n    }\r\n\r\n    /**\r\n     * Try to get a range matches the given text before the position\r\n     * @param text The text to match against\r\n     * @param exactMatch Whether it is an exact match\r\n     * @returns The range for the matched text, null if unable to find a match\r\n     */\r\n    public getRangeFromText(text: string, exactMatch: boolean): Range {\r\n        if (!text) {\r\n            return null;\r\n        }\r\n\r\n        let startPosition: NodePosition;\r\n        let endPosition: NodePosition;\r\n        let textIndex = text.length - 1;\r\n\r\n        this.forEachTextInlineElement(textInline => {\r\n            let nodeContent = textInline.getTextContent() || '';\r\n            let nodeIndex = nodeContent.length - 1;\r\n            for (; nodeIndex >= 0 && textIndex >= 0; nodeIndex--) {\r\n                if (text.charCodeAt(textIndex) == nodeContent.charCodeAt(nodeIndex)) {\r\n                    textIndex--;\r\n\r\n                    // on first time when end is matched, set the end of range\r\n                    if (!endPosition) {\r\n                        endPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                    }\r\n                } else if (exactMatch || endPosition) {\r\n                    // Mismatch found when exact match or end already match, so return since matching failed\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // when textIndex == -1, we have a successful complete match\r\n            if (textIndex == -1) {\r\n                startPosition = textInline.getStartPosition().move(nodeIndex + 1);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return startPosition && endPosition && createRange(startPosition, endPosition);\r\n    }\r\n\r\n    /**\r\n     * Get text section before position till stop condition is met.\r\n     * This offers consumers to retrieve text section by section\r\n     * The section essentially is just an inline element which has Container element\r\n     * so that the consumer can remember it for anchoring popup or verification purpose\r\n     * when position moves out of context etc.\r\n     * @param stopFunc The callback stop function\r\n     */\r\n    public forEachTextInlineElement(callback: (textInlineElement: InlineElement) => any) {\r\n        // We cache all text sections read so far\r\n        // Every time when you ask for textSection, we start with the cached first\r\n        // and resort to further reading once we exhausted with the cache\r\n        if (!this.inlineElements.some(callback)) {\r\n            this.traverse(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get first non textual inline element before position\r\n     * @returns First non textutal inline element before position or null if no such element exists\r\n     */\r\n    public getNearestNonTextInlineElement(): InlineElement {\r\n        if (!this.nearestNonTextInlineElement) {\r\n            this.traverse(() => this.nearestNonTextInlineElement);\r\n        }\r\n\r\n        return this.nearestNonTextInlineElement;\r\n    }\r\n\r\n    /**\r\n     * Continue traversing backward till stop condition is met or begin of block is reached\r\n     */\r\n    private traverse(callback: (inlineElement: InlineElement) => any) {\r\n        this.traverser =\r\n            this.traverser || ContentTraverser.createBlockTraverser(this.rootNode, this.position);\r\n\r\n        if (!this.traverser || this.traversingComplete) {\r\n            return;\r\n        }\r\n\r\n        let previousInline = this.traverser.getPreviousInlineElement();\r\n        while (!this.traversingComplete) {\r\n            this.inlineBefore = this.inlineBefore || previousInline;\r\n\r\n            if (previousInline && previousInline.isTextualInlineElement()) {\r\n                let textContent = previousInline.getTextContent();\r\n\r\n                // build the word before position if it is not built yet\r\n                if (!this.word) {\r\n                    // Match on the white space, the portion after space is on the index of 1 of the matched result\r\n                    // (index at 0 is whole match result, index at 1 is the word)\r\n                    let matches = WHITESPACE_REGEX.exec(textContent);\r\n                    if (matches && matches.length == 2) {\r\n                        this.word = matches[1] + this.text;\r\n                    }\r\n                }\r\n\r\n                this.text = textContent + this.text;\r\n                this.inlineElements.push(previousInline);\r\n\r\n                // Check if stop condition is met\r\n                if (callback && callback(previousInline)) {\r\n                    break;\r\n                }\r\n            } else {\r\n                this.nearestNonTextInlineElement = previousInline;\r\n                this.traversingComplete = true;\r\n                if (!this.word) {\r\n                    // if parsing is done, whatever we get so far in this.cachedText should also be in this.cachedWordBeforeCursor\r\n                    this.word = this.text;\r\n                }\r\n\r\n                // When a non-textual inline element, or null is seen, we consider parsing complete\r\n                // TODO: we may need to change this if there is a future need to parse beyond text, i.e.\r\n                // we have aaa @someone bbb<position>, and we want to read the text before @someone\r\n                break;\r\n            }\r\n\r\n            previousInline = this.traverser.getPreviousInlineElement();\r\n        }\r\n    }\r\n}\r\n","import EmptyInlineElement from '../inlineElements/EmptyInlineElement';\r\nimport getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getInlineElementAtNode from '../inlineElements/getInlineElementAtNode';\r\nimport NodeBlockElement from '../blockElements/NodeBlockElement';\r\nimport Position from '../selection/Position';\r\nimport TraversingScoper from './TraversingScoper';\r\nimport { BlockElement, ContentPosition, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\nimport { getInlineElementAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\nimport {\r\n    getFirstInlineElement,\r\n    getLastInlineElement,\r\n} from '../inlineElements/getFirstLastInlineElement';\r\n\r\n/**\r\n * This provides traversing content in a selection start block\r\n * This is commonly used for those cursor context sensitive plugin,\r\n * they want to know text being typed at cursor\r\n * This provides a scope for parsing from cursor position up to begin of the selection block\r\n */\r\nexport default class SelectionBlockScoper implements TraversingScoper {\r\n    private block: BlockElement;\r\n    private position: NodePosition;\r\n\r\n    /**\r\n     * Create a new instance of SelectionBlockScoper class\r\n     * @param rootNode The root node of the whole scope\r\n     * @param position Position of the selection start\r\n     * @param startFrom Where to start, can be Begin, End, SelectionStart\r\n     */\r\n    constructor(\r\n        public rootNode: Node,\r\n        position: NodePosition | Range,\r\n        private startFrom: ContentPosition\r\n    ) {\r\n        position = position instanceof Range ? Position.getStart(position) : position;\r\n        this.position = position.normalize();\r\n        this.block = getBlockElementAtNode(this.rootNode, this.position.node);\r\n    }\r\n\r\n    /**\r\n     * Get the start block element\r\n     */\r\n    public getStartBlockElement(): BlockElement {\r\n        return this.block;\r\n    }\r\n\r\n    /**\r\n     * Get the start inline element\r\n     * The start inline refers to inline before the selection start\r\n     *  The reason why we choose the one before rather after is, when cursor is at the end of a paragragh,\r\n     * the one after likely will point to inline in next paragragh which may be null if the cursor is at bottom of editor\r\n     */\r\n    public getStartInlineElement(): InlineElement {\r\n        if (this.block) {\r\n            switch (this.startFrom) {\r\n                case ContentPosition.Begin:\r\n                case ContentPosition.End:\r\n                    return getFirstLastInlineElementFromBlockElement(\r\n                        this.block,\r\n                        this.startFrom == ContentPosition.Begin\r\n                    );\r\n                case ContentPosition.SelectionStart:\r\n                    // Get the inline before selection start point, and ensure it falls in the selection block\r\n                    let startInline = getInlineElementAfter(this.rootNode, this.position);\r\n                    return startInline && this.block.contains(startInline.getContainerNode())\r\n                        ? startInline\r\n                        : new EmptyInlineElement(this.position, this.block);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Check if the given block element is in current scope\r\n     * @param blockElement The block element to check\r\n     */\r\n    public isBlockInScope(blockElement: BlockElement): boolean {\r\n        return this.block && blockElement ? this.block.equals(blockElement) : false;\r\n    }\r\n\r\n    /**\r\n     * Trim the incoming inline element, and return an inline element\r\n     * This just tests and return the inline element if it is in block\r\n     * This is a block scoper, which is not like selection scoper where it may cut an inline element in half\r\n     * A block scoper does not cut an inline in half\r\n     */\r\n    public trimInlineElement(inlineElement: InlineElement): InlineElement {\r\n        return this.block && inlineElement && this.block.contains(inlineElement.getContainerNode())\r\n            ? inlineElement\r\n            : null;\r\n    }\r\n}\r\n\r\n/**\r\n * Get first/last InlineElement of the given BlockElement\r\n * @param block The BlockElement to get InlineElement from\r\n * @param isFirst True to get first InlineElement, false to get last InlineElement\r\n */\r\nfunction getFirstLastInlineElementFromBlockElement(\r\n    block: BlockElement,\r\n    isFirst: boolean\r\n): InlineElement {\r\n    if (block instanceof NodeBlockElement) {\r\n        let blockNode = block.getStartNode();\r\n        return isFirst ? getFirstInlineElement(blockNode) : getLastInlineElement(blockNode);\r\n    } else {\r\n        return getInlineElementAtNode(block, isFirst ? block.getStartNode() : block.getEndNode());\r\n    }\r\n}\r\n","import getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport PartialInlineElement from '../inlineElements/PartialInlineElement';\r\nimport Position from '../selection/Position';\r\nimport TraversingScoper from './TraversingScoper';\r\nimport { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\nimport { getInlineElementAfter } from '../inlineElements/getInlineElementBeforeAfter';\r\n\r\n/**\r\n * This is selection scoper that provide a start inline as the start of the selection\r\n * and checks if a block falls in the selection (isBlockInScope)\r\n * last trimInlineElement to trim any inline element to return a partial that falls in the selection\r\n */\r\nexport default class SelectionScoper implements TraversingScoper {\r\n    private start: NodePosition;\r\n    private end: NodePosition;\r\n    private startBlock: BlockElement;\r\n    private startInline: InlineElement;\r\n\r\n    /**\r\n     * Create a new instance of SelectionScoper class\r\n     * @param rootNode The root node of the content\r\n     * @param range The selection range to scope to\r\n     */\r\n    constructor(public rootNode: Node, range: Range) {\r\n        this.start = Position.getStart(range).normalize();\r\n        this.end = Position.getEnd(range).normalize();\r\n    }\r\n\r\n    /**\r\n     * Provide a start block as the first block after the cursor\r\n     */\r\n    public getStartBlockElement(): BlockElement {\r\n        if (!this.startBlock) {\r\n            this.startBlock = getBlockElementAtNode(this.rootNode, this.start.node);\r\n        }\r\n\r\n        return this.startBlock;\r\n    }\r\n\r\n    /**\r\n     * Provide a start inline as the first inline after the cursor\r\n     */\r\n    public getStartInlineElement(): InlineElement {\r\n        if (!this.startInline) {\r\n            this.startInline = this.trimInlineElement(\r\n                getInlineElementAfter(this.rootNode, this.start)\r\n            );\r\n        }\r\n\r\n        return this.startInline;\r\n    }\r\n\r\n    /**\r\n     * Checks if a block completely falls in the selection\r\n     * @param block The BlockElement to check\r\n     */\r\n    public isBlockInScope(block: BlockElement): boolean {\r\n        if (!block) {\r\n            return false;\r\n        }\r\n        let inScope = false;\r\n        let selStartBlock = this.getStartBlockElement();\r\n        if (this.start.equalTo(this.end)) {\r\n            inScope = selStartBlock && selStartBlock.equals(block);\r\n        } else {\r\n            let selEndBlock = getBlockElementAtNode(this.rootNode, this.end.node);\r\n\r\n            // There are three cases that are considered as \"block in scope\"\r\n            // 1) The start of selection falls on the block\r\n            // 2) The end of selection falls on the block\r\n            // 3) the block falls in-between selection start and end\r\n            inScope =\r\n                selStartBlock &&\r\n                selEndBlock &&\r\n                (block.equals(selStartBlock) ||\r\n                    block.equals(selEndBlock) ||\r\n                    (block.isAfter(selStartBlock) && selEndBlock.isAfter(block)));\r\n        }\r\n\r\n        return inScope;\r\n    }\r\n\r\n    /**\r\n     * Trim an incoming inline. If it falls completely outside selection, return null\r\n     * otherwise return a partial that represents the portion that falls in the selection\r\n     * @param inline The InlineElement to check\r\n     */\r\n    public trimInlineElement(inline: InlineElement): InlineElement {\r\n        if (!inline || this.start.equalTo(this.end)) {\r\n            return null;\r\n        }\r\n\r\n        // Temp code. Will be changed to using InlineElement.getStart/EndPosition() soon\r\n        let start = inline.getStartPosition();\r\n        let end = inline.getEndPosition();\r\n\r\n        if (start.isAfter(this.end) || this.start.isAfter(end)) {\r\n            return null;\r\n        }\r\n\r\n        let startPartial = false;\r\n        let endPartial = false;\r\n\r\n        if (this.start.isAfter(start)) {\r\n            start = this.start;\r\n            startPartial = true;\r\n        }\r\n\r\n        if (end.isAfter(this.end)) {\r\n            end = this.end;\r\n            endPartial = true;\r\n        }\r\n\r\n        return start.isAfter(end) || start.equalTo(end)\r\n            ? null\r\n            : startPartial || endPartial\r\n            ? new PartialInlineElement(inline, startPartial && start, endPartial && end)\r\n            : inline;\r\n    }\r\n}\r\n","export { default as NodeBlockElement } from './blockElements/NodeBlockElement';\r\nexport { default as getBlockElementAtNode } from './blockElements/getBlockElementAtNode';\r\nexport { default as getFirstLastBlockElement } from './blockElements/getFirstLastBlockElement';\r\nexport { default as StartEndBlockElement } from './blockElements/StartEndBlockElement';\r\n\r\nexport { default as ContentTraverser } from './contentTraverser/ContentTraverser';\r\nexport { default as PositionContentSearcher } from './contentTraverser/PositionContentSearcher';\r\n\r\nexport { default as getInlineElementAtNode } from './inlineElements/getInlineElementAtNode';\r\nexport { default as ImageInlineElement } from './inlineElements/ImageInlineElement';\r\nexport { default as LinkInlineElement } from './inlineElements/LinkInlineElement';\r\nexport { default as NodeInlineElement } from './inlineElements/NodeInlineElement';\r\nexport { default as PartialInlineElement } from './inlineElements/PartialInlineElement';\r\n\r\nexport { default as applyTextStyle } from './utils/applyTextStyle';\r\nexport { Browser, getBrowserInfo } from './utils/Browser';\r\nexport { default as applyFormat } from './utils/applyFormat';\r\nexport { default as changeElementTag } from './utils/changeElementTag';\r\nexport { default as collapseNodes } from './utils/collapseNodes';\r\nexport { default as contains } from './utils/contains';\r\nexport { default as extractClipboardEvent } from './utils/extractClipboardEvent';\r\nexport { default as findClosestElementAncestor } from './utils/findClosestElementAncestor';\r\nexport { default as fromHtml } from './utils/fromHtml';\r\nexport { default as getComputedStyles, getComputedStyle } from './utils/getComputedStyles';\r\nexport {\r\n    default as getPendableFormatState,\r\n    PendableFormatCommandMap,\r\n    PendableFormatNames,\r\n} from './utils/getPendableFormatState';\r\nexport { default as getTagOfNode } from './utils/getTagOfNode';\r\nexport { default as isBlockElement } from './utils/isBlockElement';\r\nexport { default as isNodeEmpty } from './utils/isNodeEmpty';\r\nexport { default as isVoidHtmlElement } from './utils/isVoidHtmlElement';\r\nexport { default as matchLink } from './utils/matchLink';\r\nexport { default as adjustNodeInsertPosition } from './utils/adjustNodeInsertPosition';\r\nexport { default as queryElements } from './utils/queryElements';\r\nexport { default as splitParentNode, splitBalancedNodeRange } from './utils/splitParentNode';\r\nexport { default as unwrap } from './utils/unwrap';\r\nexport { default as wrap } from './utils/wrap';\r\nexport { getNextLeafSibling, getPreviousLeafSibling } from './utils/getLeafSibling';\r\nexport { getFirstLeafNode, getLastLeafNode } from './utils/getLeafNode';\r\nexport { default as getTextContent } from './utils/getTextContent';\r\n\r\nexport { default as VTable, VCell } from './table/VTable';\r\n\r\nexport { default as Position } from './selection/Position';\r\nexport { default as createRange, getRangeFromSelectionPath } from './selection/createRange';\r\nexport { default as getPositionRect } from './selection/getPositionRect';\r\nexport { default as isPositionAtBeginningOf } from './selection/isPositionAtBeginningOf';\r\nexport { default as getSelectionPath } from './selection/getSelectionPath';\r\n","import { BlockElement, InlineElement, NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Represents an empty InlineElement.\r\n * This is used for ContentTraverser internally only.\r\n * An empty InlineElement means current position is at the end of a tag so nothing is included inside this element\r\n */\r\nexport default class EmptyInlineElement implements InlineElement {\r\n    constructor(private position: NodePosition, private parentBlock: BlockElement) {}\r\n\r\n    /**\r\n     * Get the text content of this inline element\r\n     */\r\n    getTextContent(): string {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Get the container node of this inline element\r\n     */\r\n    getContainerNode(): Node {\r\n        return this.position.node;\r\n    }\r\n\r\n    /**\r\n     * Get the parent block element of this inline element\r\n     */\r\n    getParentBlock(): BlockElement {\r\n        return this.parentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get the start position of this inline element\r\n     */\r\n    getStartPosition(): NodePosition {\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * Get the end position of this inline element\r\n     */\r\n    getEndPosition(): NodePosition {\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given inline element is after this inline element\r\n     */\r\n    isAfter(inlineElement: InlineElement): boolean {\r\n        return inlineElement && this.position.isAfter(inlineElement.getEndPosition());\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    isTextualInlineElement(): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the given editor position is contained in this inline element\r\n     */\r\n    contains(position: NodePosition): boolean {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Apply inline style to a region of an inline element.\r\n     */\r\n    applyStyle(styler: (element: HTMLElement) => any): void {}\r\n}\r\n","import NodeInlineElement from './NodeInlineElement';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This is an inline element representing an Html image\r\n */\r\nexport default class ImageInlineElement extends NodeInlineElement {\r\n    constructor(containerNode: Node, parentBlock: BlockElement) {\r\n        super(containerNode, parentBlock);\r\n    }\r\n}\r\n","import NodeInlineElement from './NodeInlineElement';\r\nimport { BlockElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This is inline element presenting an html hyperlink\r\n */\r\nexport default class LinkInlineElement extends NodeInlineElement {\r\n    constructor(containerNode: Node, parentBlock: BlockElement) {\r\n        super(containerNode, parentBlock);\r\n    }\r\n}\r\n","import applyTextStyle from '../utils/applyTextStyle';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport Position from '../selection/Position';\r\nimport {\r\n    BlockElement,\r\n    InlineElement,\r\n    NodePosition,\r\n    NodeType,\r\n    PositionType,\r\n} from 'roosterjs-editor-types';\r\n\r\n/**\r\n * This presents an inline element that can be reprented by a single html node.\r\n * This serves as base for most inline element as it contains most implentation\r\n * of all operations that can happen on an inline element. Other sub inline elements mostly\r\n * just identify themself for a certain type\r\n */\r\nexport default class NodeInlineElement implements InlineElement {\r\n    constructor(private containerNode: Node, private parentBlock: BlockElement) {}\r\n\r\n    /**\r\n     * The text content for this inline element\r\n     */\r\n    public getTextContent(): string {\r\n        // nodeValue is better way to retrieve content for a text. Others, just use textContent\r\n        return this.containerNode.nodeType == NodeType.Text\r\n            ? this.containerNode.nodeValue\r\n            : this.containerNode.textContent;\r\n    }\r\n\r\n    /**\r\n     * Get the container node\r\n     */\r\n    public getContainerNode(): Node {\r\n        return this.containerNode;\r\n    }\r\n\r\n    // Get the parent block\r\n    public getParentBlock(): BlockElement {\r\n        return this.parentBlock;\r\n    }\r\n\r\n    /**\r\n     * Get the start position of the inline element\r\n     */\r\n    public getStartPosition(): NodePosition {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest first child node from the container\r\n        return new Position(this.containerNode, 0).normalize();\r\n    }\r\n\r\n    /**\r\n     * Get the end position of the inline element\r\n     */\r\n    public getEndPosition(): NodePosition {\r\n        // For a position, we always want it to point to a leaf node\r\n        // We should try to go get the lowest last child node from the container\r\n        return new Position(this.containerNode, PositionType.End).normalize();\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    public isTextualInlineElement(): boolean {\r\n        return this.containerNode && this.containerNode.nodeType == NodeType.Text;\r\n    }\r\n\r\n    /**\r\n     * Checks if an inline element is after the current inline element\r\n     */\r\n    public isAfter(inlineElement: InlineElement): boolean {\r\n        return inlineElement && isNodeAfter(this.containerNode, inlineElement.getContainerNode());\r\n    }\r\n\r\n    /**\r\n     * Checks if the given position is contained in the inline element\r\n     */\r\n    public contains(pos: NodePosition): boolean {\r\n        let start = this.getStartPosition();\r\n        let end = this.getEndPosition();\r\n        return pos && pos.isAfter(start) && end.isAfter(pos);\r\n    }\r\n\r\n    /**\r\n     * Apply inline style to an inline element\r\n     */\r\n    public applyStyle(styler: (element: HTMLElement, isInnerNode?: boolean) => any): void {\r\n        applyTextStyle(this.containerNode, styler);\r\n    }\r\n}\r\n","import applyTextStyle from '../utils/applyTextStyle';\r\nimport createRange from '../selection/createRange';\r\nimport Position from '../selection/Position';\r\nimport { BlockElement, InlineElement, NodePosition, PositionType } from 'roosterjs-editor-types';\r\nimport { getNextLeafSibling, getPreviousLeafSibling } from '../utils/getLeafSibling';\r\n\r\n/**\r\n * This is a special version of inline element that identifies a section of an inline element\r\n * We often have the need to cut an inline element in half and perform some operation only on half of an inline element\r\n * i.e. users select only some text of a text node and apply format, in that case, format has to happen on partial of an inline element\r\n * PartialInlineElement is implemented in a way that decorate another full inline element with its own override on methods like isAfter\r\n * It also offers some special methods that others don't have, i.e. nextInlineElement etc.\r\n */\r\nexport default class PartialInlineElement implements InlineElement {\r\n    constructor(\r\n        private inlineElement: InlineElement,\r\n        private start?: NodePosition,\r\n        private end?: NodePosition\r\n    ) {}\r\n\r\n    /**\r\n     * Get the full inline element that this partial inline decorates\r\n     */\r\n    public getDecoratedInline(): InlineElement {\r\n        return this.inlineElement;\r\n    }\r\n\r\n    /**\r\n     * Gets the container node\r\n     */\r\n    public getContainerNode(): Node {\r\n        return this.inlineElement.getContainerNode();\r\n    }\r\n\r\n    /**\r\n     * Gets the parent block\r\n     */\r\n    public getParentBlock(): BlockElement {\r\n        return this.inlineElement.getParentBlock();\r\n    }\r\n\r\n    /**\r\n     * Gets the text content\r\n     */\r\n    public getTextContent(): string {\r\n        let range = createRange(this.getStartPosition(), this.getEndPosition());\r\n\r\n        return range.toString();\r\n    }\r\n\r\n    /**\r\n     * Get start position of this inline element.\r\n     */\r\n    public getStartPosition(): NodePosition {\r\n        return this.start || this.inlineElement.getStartPosition();\r\n    }\r\n\r\n    /**\r\n     * Get end position of this inline element.\r\n     */\r\n    public getEndPosition(): NodePosition {\r\n        return this.end || this.inlineElement.getEndPosition();\r\n    }\r\n\r\n    /**\r\n     * Get next partial inline element if it is not at the end boundary yet\r\n     */\r\n    public get nextInlineElement(): PartialInlineElement {\r\n        return this.end && new PartialInlineElement(this.inlineElement, this.end, null);\r\n    }\r\n\r\n    /**\r\n     * Get previous partial inline element if it is not at the begin boundary yet\r\n     */\r\n    public get previousInlineElement(): PartialInlineElement {\r\n        return this.start && new PartialInlineElement(this.inlineElement, null, this.start);\r\n    }\r\n\r\n    /**\r\n     * Checks if it contains a position\r\n     */\r\n    public contains(pos: NodePosition): boolean {\r\n        return pos && pos.isAfter(this.getStartPosition()) && this.getEndPosition().isAfter(pos);\r\n    }\r\n\r\n    /**\r\n     * Checks if this inline element is a textual inline element\r\n     */\r\n    public isTextualInlineElement(): boolean {\r\n        return this.inlineElement && this.inlineElement.isTextualInlineElement();\r\n    }\r\n\r\n    /**\r\n     * Check if this inline element is after the other inline element\r\n     */\r\n    public isAfter(inlineElement: InlineElement): boolean {\r\n        let thisStart = this.getStartPosition();\r\n        let otherEnd = inlineElement && inlineElement.getEndPosition();\r\n        return otherEnd && (thisStart.isAfter(otherEnd) || thisStart.equalTo(otherEnd));\r\n    }\r\n\r\n    /**\r\n     * apply style\r\n     */\r\n    public applyStyle(styler: (element: HTMLElement, isInnerNode?: boolean) => any) {\r\n        let from = this.getStartPosition().normalize();\r\n        let to = this.getEndPosition().normalize();\r\n        let container = this.getContainerNode();\r\n\r\n        if (from.isAtEnd) {\r\n            let nextNode = getNextLeafSibling(container, from.node);\r\n            from = nextNode ? new Position(nextNode, PositionType.Begin) : null;\r\n        }\r\n        if (to.offset == 0) {\r\n            let previousNode = getPreviousLeafSibling(container, to.node);\r\n            to = previousNode ? new Position(previousNode, PositionType.End) : null;\r\n        }\r\n\r\n        applyTextStyle(container, styler, from, to);\r\n    }\r\n}\r\n","import getInlineElementAtNode from './getInlineElementAtNode';\r\nimport { getFirstLeafNode, getLastLeafNode } from '../utils/getLeafNode';\r\nimport { InlineElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the first inline element inside the given node\r\n */\r\nexport function getFirstInlineElement(rootNode: Node): InlineElement {\r\n    // getFirstLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    let node = getFirstLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode(rootNode, node) : null;\r\n}\r\n\r\n/**\r\n * Get the last inline element inside the given node\r\n */\r\nexport function getLastInlineElement(rootNode: Node): InlineElement {\r\n    // getLastLeafNode can return null for empty container\r\n    // do check null before passing on to get inline from the node\r\n    let node = getLastLeafNode(rootNode);\r\n    return node ? getInlineElementAtNode(rootNode, node) : null;\r\n}\r\n","import getBlockElementAtNode from '../blockElements/getBlockElementAtNode';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport ImageInlineElement from './ImageInlineElement';\r\nimport LinkInlineElement from './LinkInlineElement';\r\nimport NodeInlineElement from './NodeInlineElement';\r\nimport { BlockElement, InlineElement } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the inline element at a node\r\n * @param rootNode The root node of current scope\r\n * @param node The node to get InlineElement from\r\n */\r\nexport default function getInlineElementAtNode(rootNode: Node, node: Node): InlineElement;\r\n\r\n/**\r\n * Get the inline element at a node\r\n * @param parentBlock Parent BlockElement of this node\r\n * @param node The node to get InlineElement from\r\n */\r\nexport default function getInlineElementAtNode(\r\n    parentBlock: BlockElement,\r\n    node: Node\r\n): InlineElement;\r\n\r\nexport default function getInlineElementAtNode(\r\n    parent: Node | BlockElement,\r\n    node: Node\r\n): InlineElement {\r\n    // An inline element has to be in a block element, get the block first and then resolve through the factory\r\n    let parentBlock = parent instanceof Node ? getBlockElementAtNode(parent, node) : parent;\r\n    return node && parentBlock && resolveInlineElement(node, parentBlock);\r\n}\r\n\r\n/**\r\n * Resolve an inline element by a leaf node\r\n * @param node The node to resolve from\r\n * @param parentBlock The parent block element\r\n */\r\nfunction resolveInlineElement(node: Node, parentBlock: BlockElement): InlineElement {\r\n    let nodeChain = [node];\r\n    for (\r\n        let parent = node.parentNode;\r\n        parent && parentBlock.contains(parent);\r\n        parent = parent.parentNode\r\n    ) {\r\n        nodeChain.push(parent);\r\n    }\r\n\r\n    let inlineElement: InlineElement;\r\n\r\n    for (let i = nodeChain.length - 1; i >= 0 && !inlineElement; i--) {\r\n        let currentNode = nodeChain[i];\r\n        let tag = getTagOfNode(currentNode);\r\n        if (tag == 'A') {\r\n            inlineElement = new LinkInlineElement(currentNode, parentBlock);\r\n        } else if (tag == 'IMG') {\r\n            inlineElement = new ImageInlineElement(currentNode, parentBlock);\r\n        }\r\n    }\r\n\r\n    return inlineElement || new NodeInlineElement(node, parentBlock);\r\n}\r\n","import getInlineElementAtNode from './getInlineElementAtNode';\r\nimport PartialInlineElement from './PartialInlineElement';\r\nimport shouldSkipNode from '../utils/shouldSkipNode';\r\nimport { getLeafSibling } from '../utils/getLeafSibling';\r\nimport { InlineElement, NodePosition, NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get inline element before a position\r\n * This is mostly used when we want to get the inline element before selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement before\r\n */\r\nexport function getInlineElementBefore(root: Node, position: NodePosition): InlineElement {\r\n    return getInlineElementBeforeAfter(root, position, false /*isAfter*/);\r\n}\r\n\r\n/**\r\n * Get inline element after a position\r\n * This is mostly used when we want to get the inline element after selection/cursor\r\n * There is a possible that the cursor is in middle of an inline element (i.e. mid of a text node)\r\n * in this case, we only want to return what is before cursor (a partial of an inline) to indicate\r\n * that we're in middle.\r\n * @param root Root node of current scope, use for create InlineElement\r\n * @param position The position to get InlineElement after\r\n */\r\nexport function getInlineElementAfter(root: Node, position: NodePosition): InlineElement {\r\n    return getInlineElementBeforeAfter(root, position, true /*isAfter*/);\r\n}\r\n\r\nexport function getInlineElementBeforeAfter(root: Node, position: NodePosition, isAfter: boolean) {\r\n    if (!root || !position || !position.node) {\r\n        return null;\r\n    }\r\n\r\n    position = position.normalize();\r\n    let { node, offset, isAtEnd } = position;\r\n    let isPartial = false;\r\n\r\n    if ((!isAfter && offset == 0 && !isAtEnd) || (isAfter && isAtEnd)) {\r\n        node = getLeafSibling(root, node, isAfter);\r\n    } else if (\r\n        node.nodeType == NodeType.Text &&\r\n        ((!isAfter && !isAtEnd) || (isAfter && offset > 0))\r\n    ) {\r\n        isPartial = true;\r\n    }\r\n\r\n    if (node && shouldSkipNode(node)) {\r\n        node = getLeafSibling(root, node, isAfter);\r\n    }\r\n\r\n    let inlineElement = getInlineElementAtNode(root, node);\r\n\r\n    if (inlineElement && (isPartial || inlineElement.contains(position))) {\r\n        inlineElement = isAfter\r\n            ? new PartialInlineElement(inlineElement, position, null)\r\n            : new PartialInlineElement(inlineElement, null, position);\r\n    }\r\n\r\n    return inlineElement;\r\n}\r\n","import findClosestElementAncestor from '../utils/findClosestElementAncestor';\r\nimport isNodeAfter from '../utils/isNodeAfter';\r\nimport { NodePosition, NodeType, PositionType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Represent a position in DOM tree by the node and its offset index\r\n */\r\nexport default class Position implements NodePosition {\r\n    readonly node: Node;\r\n    readonly element: HTMLElement;\r\n    readonly offset: number;\r\n    readonly isAtEnd: boolean;\r\n\r\n    /**\r\n     * Clone and validate a position from existing position.\r\n     * If the given position has invalid offset, this function will return a corrected value.\r\n     * @param position The original position to clone from\r\n     */\r\n    constructor(position: NodePosition);\r\n\r\n    /**\r\n     * Create a Position from node and an offset number\r\n     * @param node The node of this position\r\n     * @param offset Offset of this position\r\n     */\r\n    constructor(node: Node, offset: number);\r\n\r\n    /**\r\n     * Create a Position from node and a type of position\r\n     * @param node The node of this position\r\n     * @param positionType Type of the postion, can be Begin, End, Before, After\r\n     */\r\n    constructor(node: Node, positionType: PositionType);\r\n\r\n    constructor(nodeOrPosition: Node | NodePosition, offsetOrPosType?: number) {\r\n        if ((<NodePosition>nodeOrPosition).node) {\r\n            this.node = (<NodePosition>nodeOrPosition).node;\r\n            offsetOrPosType = (<NodePosition>nodeOrPosition).offset;\r\n        } else {\r\n            this.node = <Node>nodeOrPosition;\r\n        }\r\n\r\n        switch (offsetOrPosType) {\r\n            case PositionType.Before:\r\n                this.offset = getIndexOfNode(this.node);\r\n                this.node = this.node.parentNode;\r\n                this.isAtEnd = false;\r\n                break;\r\n\r\n            case PositionType.After:\r\n                this.offset = getIndexOfNode(this.node) + 1;\r\n                this.isAtEnd = !this.node.nextSibling;\r\n                this.node = this.node.parentNode;\r\n                break;\r\n\r\n            case PositionType.End:\r\n                this.offset = getEndOffset(this.node);\r\n                this.isAtEnd = true;\r\n                break;\r\n\r\n            default:\r\n                let endOffset = getEndOffset(this.node);\r\n                this.offset = Math.max(0, Math.min(<number>offsetOrPosType, endOffset));\r\n                this.isAtEnd = offsetOrPosType > 0 && offsetOrPosType >= endOffset;\r\n                break;\r\n        }\r\n\r\n        this.element = findClosestElementAncestor(this.node);\r\n    }\r\n\r\n    /**\r\n     * Normalize this position to the leaf node, return the normalize result.\r\n     * If current position is already using leaf node, return this position object itself\r\n     */\r\n    normalize(): NodePosition {\r\n        if (this.node.nodeType == NodeType.Text || !this.node.firstChild) {\r\n            return this;\r\n        }\r\n\r\n        let node = this.node;\r\n        let newOffset: number | PositionType.Begin | PositionType.End = this.isAtEnd\r\n            ? PositionType.End\r\n            : this.offset;\r\n        while (node.nodeType == NodeType.Element && node.firstChild) {\r\n            node =\r\n                newOffset == PositionType.Begin\r\n                    ? node.firstChild\r\n                    : newOffset == PositionType.End\r\n                    ? node.lastChild\r\n                    : node.childNodes[<number>newOffset];\r\n            newOffset = this.isAtEnd ? PositionType.End : PositionType.Begin;\r\n        }\r\n        return new Position(node, newOffset);\r\n    }\r\n\r\n    /**\r\n     * Check if this position is equal to the given position\r\n     * @param position The position to check\r\n     */\r\n    equalTo(position: NodePosition): boolean {\r\n        return (\r\n            position &&\r\n            (this == position ||\r\n                (this.node == position.node &&\r\n                    this.offset == position.offset &&\r\n                    this.isAtEnd == position.isAtEnd))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Checks if this position is after the given position\r\n     */\r\n    isAfter(position: NodePosition): boolean {\r\n        return this.node == position.node\r\n            ? (this.isAtEnd && !position.isAtEnd) || this.offset > position.offset\r\n            : isNodeAfter(this.node, position.node);\r\n    }\r\n\r\n    /**\r\n     * Move this position with offset, returns a new position with a valid offset in the same node\r\n     * @param offset Offset to move with\r\n     */\r\n    move(offset: number) {\r\n        return new Position(this.node, Math.max(this.offset + offset, 0));\r\n    }\r\n\r\n    /**\r\n     * Get start position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    static getStart(range: Range) {\r\n        return new Position(range.startContainer, range.startOffset);\r\n    }\r\n\r\n    /**\r\n     * Get end position of the given Range\r\n     * @param range The range to get position from\r\n     */\r\n    static getEnd(range: Range) {\r\n        return new Position(range.endContainer, range.endOffset);\r\n    }\r\n}\r\n\r\nfunction getIndexOfNode(node: Node): number {\r\n    let i = 0;\r\n    while ((node = node.previousSibling)) {\r\n        i++;\r\n    }\r\n    return i;\r\n}\r\n\r\nfunction getEndOffset(node: Node): number {\r\n    if (node.nodeType == NodeType.Text) {\r\n        return node.nodeValue.length;\r\n    } else if (node.nodeType == NodeType.Element) {\r\n        return node.childNodes.length;\r\n    } else {\r\n        return 1;\r\n    }\r\n}\r\n","import isVoidHtmlElement from '../utils/isVoidHtmlElement';\r\nimport Position from './Position';\r\nimport { NodePosition, NodeType, PositionType, SelectionPath } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Create a range around the given node(s)\r\n * @param startNode The start node to create range from\r\n * @param endNode The end node to create range from. If specified, the range will start before startNode and\r\n * end after endNode, otherwise, the range will start before and end after the start node\r\n * @returns A range start before the given node and end after the given node\r\n */\r\nexport default function createRange(startNode: Node, endNode?: Node): Range;\r\n\r\n/**\r\n * Create a collapsed range at the given node and offset\r\n * @param node The container node of the range\r\n * @param offset The offset of the range, can be a number or value of PositionType\r\n * @returns A range at the given node and offset\r\n */\r\nexport default function createRange(node: Node, offset: number | PositionType): Range;\r\n\r\n/**\r\n * Create a range with the given start/end container node and offset\r\n * @param startNode The start container node of the range\r\n * @param startOffset The start offset of the range\r\n * @param endNode The end container node of the range\r\n * @param endOffset The end offset of the range\r\n * @returns A range at the given start/end container node and offset\r\n */\r\nexport default function createRange(\r\n    startNode: Node,\r\n    startOffset: number | PositionType,\r\n    endNode: Node,\r\n    endOffset: number | PositionType\r\n): Range;\r\n\r\n/**\r\n * Create a range under the given rootNode with start and end selection paths\r\n * @param rootNode The root node that the selection paths start from\r\n * @param startPath The selection path of the start position of the range\r\n * @param endPath The selection path of the end position of the range\r\n * @returns A range with the given start and end selection paths\r\n */\r\nexport default function createRange(rootNode: Node, startPath: number[], endPath?: number[]): Range;\r\n\r\n/**\r\n * Create a range with the start and end position\r\n * @param startPosition The start position of the range\r\n * @param endPosition The end position of the range, if not specified, the range will be collapsed at start position\r\n * @returns A range start at startPosition, end at endPosition, or startPosition when endPosition is not specified\r\n */\r\nexport default function createRange(startPosition: NodePosition, endPosition?: NodePosition): Range;\r\n\r\nexport default function createRange(\r\n    arg1: Node | NodePosition,\r\n    arg2?: number | number[] | Node | NodePosition,\r\n    arg3?: Node | number[],\r\n    arg4?: number\r\n): Range {\r\n    let start: NodePosition;\r\n    let end: NodePosition;\r\n\r\n    if (isNodePosition(arg1)) {\r\n        // function createRange(startPosition: NodePosition, endPosition?: NodePosition): Range;\r\n        start = arg1;\r\n        end = isNodePosition(arg2) ? arg2 : null;\r\n    } else if (arg1 instanceof Node) {\r\n        if (arg2 instanceof Array) {\r\n            // function createRange(rootNode: Node, startPath: number[], endPath?: number[]): Range;\r\n            start = getPositionFromPath(arg1, arg2);\r\n            end = arg3 instanceof Array ? getPositionFromPath(arg1, arg3) : null;\r\n        } else if (typeof arg2 == 'number') {\r\n            // function createRange(node: Node, offset: number | PositionType): Range;\r\n            // function createRange(startNode: Node, startOffset: number | PositionType, endNode: Node, endOffset: number | PositionType): Range;\r\n            start = new Position(arg1, arg2);\r\n            end = arg3 instanceof Node ? new Position(arg3, arg4) : null;\r\n        } else if (arg2 instanceof Node || !arg2) {\r\n            // function createRange(startNode: Node, endNode?: Node): Range;\r\n            start = new Position(arg1, PositionType.Before);\r\n            end = new Position(<Node>arg2 || arg1, PositionType.After);\r\n        }\r\n    }\r\n\r\n    if (start && start.node) {\r\n        let range = start.node.ownerDocument.createRange();\r\n        start = getFocusablePosition(start);\r\n        end = getFocusablePosition(end || start);\r\n        range.setStart(start.node, start.offset);\r\n        range.setEnd(end.node, end.offset);\r\n\r\n        return range;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * Convert to focusable position\r\n * If current node is a void element, we need to move up one level to put cursor outside void element\r\n */\r\nfunction getFocusablePosition(position: NodePosition) {\r\n    return position.node.nodeType == NodeType.Element && isVoidHtmlElement(position.node)\r\n        ? new Position(position.node, position.isAtEnd ? PositionType.After : PositionType.Before)\r\n        : position;\r\n}\r\n\r\nfunction isNodePosition(arg: any): arg is NodePosition {\r\n    return arg && arg.node;\r\n}\r\n\r\nfunction getPositionFromPath(node: Node, path: number[]): NodePosition {\r\n    if (!node || !path) {\r\n        return null;\r\n    }\r\n\r\n    // Iterate with a for loop to avoid mutating the passed in element path stack\r\n    // or needing to copy it.\r\n    let offset: number;\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n        offset = path[i];\r\n        if (\r\n            i < path.length - 1 &&\r\n            node &&\r\n            node.nodeType == NodeType.Element &&\r\n            node.childNodes.length > offset\r\n        ) {\r\n            node = node.childNodes[offset];\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return new Position(node, offset);\r\n}\r\n\r\n/**\r\n * @deprecated Use createRange instead\r\n * Get range from the given selection path\r\n * @param rootNode Root node of the selection path\r\n * @param path The selection path which contains start and end position path\r\n */\r\nexport function getRangeFromSelectionPath(rootNode: HTMLElement, path: SelectionPath) {\r\n    return createRange(rootNode, path.start, path.end);\r\n}\r\n","import createRange from './createRange';\r\nimport { NodePosition, NodeType, Rect } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get bounding rect of this position\r\n * @param position The positioin to get rect from\r\n */\r\nexport default function getPositionRect(position: NodePosition): Rect {\r\n    if (!position) {\r\n        return null;\r\n    }\r\n\r\n    let range = createRange(position);\r\n\r\n    // 1) try to get rect using range.getBoundingClientRect()\r\n    let rect = range.getBoundingClientRect && normalizeRect(range.getBoundingClientRect());\r\n\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n\r\n    // 2) try to get rect using range.getClientRects\r\n    position = position.normalize();\r\n    const rects = range.getClientRects && range.getClientRects();\r\n    rect = rects && rects.length == 1 && normalizeRect(rects[0]);\r\n    if (rect) {\r\n        return rect;\r\n    }\r\n\r\n    // 3) if node is text node, try inserting a SPAN and get the rect of SPAN for others\r\n    if (position.node.nodeType == NodeType.Text) {\r\n        let span = document.createElement('SPAN');\r\n        span.innerHTML = '\\u200b';\r\n        range = createRange(position);\r\n        range.insertNode(span);\r\n        rect = span.getBoundingClientRect && normalizeRect(span.getBoundingClientRect());\r\n        span.parentNode.removeChild(span);\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n\r\n    // 4) try getBoundingClientRect on element\r\n    let element = position.element;\r\n    if (element && element.getBoundingClientRect) {\r\n        rect = normalizeRect(element.getBoundingClientRect());\r\n        if (rect) {\r\n            return rect;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction normalizeRect(clientRect: ClientRect): Rect {\r\n    // A ClientRect of all 0 is possible. i.e. chrome returns a ClientRect of 0 when the cursor is on an empty p\r\n    // We validate that and only return a rect when the passed in ClientRect is valid\r\n    let { left, right, top, bottom } = clientRect || <ClientRect>{};\r\n    return left + right + top + bottom > 0\r\n        ? {\r\n              left: Math.round(left),\r\n              right: Math.round(right),\r\n              top: Math.round(top),\r\n              bottom: Math.round(bottom),\r\n          }\r\n        : null;\r\n}\r\n","import contains from '../utils/contains';\r\nimport Position from './Position';\r\nimport { NodePosition, NodeType, SelectionPath } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get path of the given selection range related to the given rootNode\r\n * @param rootNode The root node where the path start from\r\n * @param range The range of selection\r\n */\r\nexport default function getSelectionPath(rootNode: HTMLElement, range: Range): SelectionPath {\r\n    if (!range) {\r\n        return null;\r\n    }\r\n\r\n    let selectionPath: SelectionPath = {\r\n        start: getPositionPath(Position.getStart(range), rootNode),\r\n        end: getPositionPath(Position.getEnd(range), rootNode),\r\n    };\r\n\r\n    return selectionPath;\r\n}\r\n\r\n/**\r\n * Get the path of the node relative to rootNode.\r\n * The path of the node is an array of integer indecies into the childNodes of the given node.\r\n *\r\n * The node path will be what the node path will be on a _normalized_ dom\r\n * (e.g. empty text nodes will be ignored and adjacent text nodes will be concatenated)\r\n *\r\n * @param rootNode the node the path will be relative to\r\n * @param position the position to get indexes from. Follows the same semantics\r\n * as selectionRange (if node is of type Text, it is an offset into the text of that node.\r\n * If node is of type Element, it is the index of a child in that Element node.)\r\n */\r\nfunction getPositionPath(position: NodePosition, rootNode: HTMLElement): number[] {\r\n    if (!position || !rootNode) {\r\n        return [];\r\n    }\r\n\r\n    let { node, offset } = position;\r\n    let result: number[] = [];\r\n    let parent: Node;\r\n\r\n    if (!contains(rootNode, node, true)) {\r\n        return [];\r\n    }\r\n\r\n    if (node.nodeType == NodeType.Text) {\r\n        parent = node.parentNode;\r\n        while (node.previousSibling && node.previousSibling.nodeType == NodeType.Text) {\r\n            offset += node.previousSibling.nodeValue.length;\r\n            node = node.previousSibling;\r\n        }\r\n        result.unshift(offset);\r\n    } else {\r\n        parent = node;\r\n        node = node.childNodes[offset];\r\n    }\r\n\r\n    do {\r\n        offset = 0;\r\n        let isPreviousText = false;\r\n\r\n        for (let c: Node = parent.firstChild; c && c != node; c = c.nextSibling) {\r\n            if (c.nodeType == NodeType.Text) {\r\n                if (c.nodeValue.length == 0 || isPreviousText) {\r\n                    continue;\r\n                }\r\n\r\n                isPreviousText = true;\r\n            } else {\r\n                isPreviousText = false;\r\n            }\r\n\r\n            offset++;\r\n        }\r\n\r\n        result.unshift(offset);\r\n        node = parent;\r\n        parent = parent.parentNode;\r\n    } while (node && node != rootNode);\r\n\r\n    return result;\r\n}\r\n","import contains from '../utils/contains';\r\nimport getTagOfNode from '../utils/getTagOfNode';\r\nimport isNodeEmpty from '../utils/isNodeEmpty';\r\nimport { NodePosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Check if this position is at beginning of the given node.\r\n * This will return true if all nodes between the beginning of target node and the position are empty.\r\n * @param position The position to check\r\n * @param targetNode The node to check\r\n * @returns True if position is at beginning of the node, otherwise false\r\n */\r\nexport default function isPositionAtBeginningOf(position: NodePosition, targetNode: Node) {\r\n    if (position) {\r\n        let { node, offset } = position.normalize();\r\n        if (offset == 0) {\r\n            while (contains(targetNode, node) && areAllPrevousNodesEmpty(node)) {\r\n                node = node.parentNode;\r\n            }\r\n\r\n            return node == targetNode;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction areAllPrevousNodesEmpty(node: Node): boolean {\r\n    while (node.previousSibling) {\r\n        node = node.previousSibling;\r\n        if (getTagOfNode(node) == 'BR' || !isNodeEmpty(node)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n","import { TableFormat, TableOperation } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Represent a virtual cell of a virtual table\r\n */\r\nexport interface VCell {\r\n    /**\r\n     * The table cell object. The value will be null if this is an expanded virtual cell\r\n     */\r\n    td?: HTMLTableCellElement;\r\n\r\n    /**\r\n     * Whether this cell is spanned from left\r\n     */\r\n    spanLeft?: boolean;\r\n\r\n    /**\r\n     * Whether this cell is spanned from above\r\n     */\r\n    spanAbove?: boolean;\r\n}\r\n\r\n/**\r\n * A virtual table class, represent an HTML table, by expand all merged cells to each separated cells\r\n */\r\nexport default class VTable {\r\n    /**\r\n     * The HTML table object\r\n     */\r\n    table: HTMLTableElement;\r\n\r\n    /**\r\n     * Virtual cells\r\n     */\r\n    cells: VCell[][];\r\n\r\n    /**\r\n     * Current row index\r\n     */\r\n    row: number;\r\n\r\n    /**\r\n     * Current column index\r\n     */\r\n    col: number;\r\n\r\n    private trs: HTMLTableRowElement[] = [];\r\n\r\n    /**\r\n     * Create a new instance of VTable object using HTML TABLE or TD node\r\n     * @param node The HTML Table or TD node\r\n     */\r\n    constructor(node: HTMLTableElement | HTMLTableCellElement) {\r\n        this.table = node instanceof HTMLTableElement ? node : getTableFromTd(node);\r\n        if (this.table) {\r\n            let currentTd = node instanceof HTMLTableElement ? null : node;\r\n            let trs = <HTMLTableRowElement[]>[].slice.call(this.table.rows);\r\n            this.cells = trs.map(row => []);\r\n            trs.forEach((tr, rowIndex) => {\r\n                this.trs[rowIndex % 2] = tr;\r\n                for (let sourceCol = 0, targetCol = 0; sourceCol < tr.cells.length; sourceCol++) {\r\n                    // Skip the cells which already initialized\r\n                    for (; this.cells[rowIndex][targetCol]; targetCol++) {}\r\n\r\n                    let td = tr.cells[sourceCol];\r\n                    if (td == currentTd) {\r\n                        this.col = targetCol;\r\n                        this.row = rowIndex;\r\n                    }\r\n\r\n                    for (let colSpan = 0; colSpan < td.colSpan; colSpan++, targetCol++) {\r\n                        for (let rowSpan = 0; rowSpan < td.rowSpan; rowSpan++) {\r\n                            this.cells[rowIndex + rowSpan][targetCol] = {\r\n                                td: colSpan + rowSpan == 0 ? td : null,\r\n                                spanLeft: colSpan > 0,\r\n                                spanAbove: rowSpan > 0,\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Write the virtual table back to DOM tree to represent the change of VTable\r\n     */\r\n    writeBack() {\r\n        if (this.cells) {\r\n            moveChildren(this.table);\r\n            this.cells.forEach((row, r) => {\r\n                let tr = cloneNode(this.trs[r % 2] || this.trs[0]);\r\n                this.table.appendChild(tr);\r\n                row.forEach((cell, c) => {\r\n                    if (cell.td) {\r\n                        this.recalcSpans(r, c);\r\n                        tr.appendChild(cell.td);\r\n                    }\r\n                });\r\n            });\r\n        } else if (this.table) {\r\n            this.table.parentNode.removeChild(this.table);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply the given table format to this virtual table\r\n     * @param format Table format to apply\r\n     */\r\n    applyFormat(format: Partial<TableFormat>) {\r\n        if (!format || !this.table) {\r\n            return;\r\n        }\r\n        this.table.style.borderCollapse = 'collapse';\r\n        this.trs[0].style.backgroundColor = format.bgColorOdd || 'transparent';\r\n        if (this.trs[1]) {\r\n            this.trs[1].style.backgroundColor = format.bgColorEven || 'transparent';\r\n        }\r\n        this.cells.forEach(row =>\r\n            row\r\n                .filter(cell => cell.td)\r\n                .forEach(cell => {\r\n                    cell.td.style.borderTop = getBorderStyle(format.topBorderColor);\r\n                    cell.td.style.borderBottom = getBorderStyle(format.bottomBorderColor);\r\n                    cell.td.style.borderLeft = getBorderStyle(format.verticalBorderColor);\r\n                    cell.td.style.borderRight = getBorderStyle(format.verticalBorderColor);\r\n                })\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Edit table with given operation.\r\n     * @param operation Table operation\r\n     */\r\n    edit(operation: TableOperation) {\r\n        if (!this.table) {\r\n            return;\r\n        }\r\n\r\n        let currentRow = this.cells[this.row];\r\n        let currentCell = currentRow[this.col];\r\n        switch (operation) {\r\n            case TableOperation.InsertAbove:\r\n                this.cells.splice(this.row, 0, currentRow.map(cloneCell));\r\n                break;\r\n            case TableOperation.InsertBelow:\r\n                let newRow = this.row + this.countSpanAbove(this.row, this.col);\r\n                this.cells.splice(\r\n                    newRow,\r\n                    0,\r\n                    this.cells[newRow - 1].map((cell, colIndex) => {\r\n                        let nextCell = this.getCell(newRow, colIndex);\r\n                        if (nextCell.spanAbove) {\r\n                            return cloneCell(nextCell);\r\n                        } else if (cell.spanLeft) {\r\n                            let newCell = cloneCell(cell);\r\n                            newCell.spanAbove = false;\r\n                            return newCell;\r\n                        } else {\r\n                            return {\r\n                                td: cloneNode(this.getTd(this.row, colIndex)),\r\n                            };\r\n                        }\r\n                    })\r\n                );\r\n                break;\r\n\r\n            case TableOperation.InsertLeft:\r\n                this.forEachCellOfCurrentColumn((cell, row) => {\r\n                    row.splice(this.col, 0, cloneCell(cell));\r\n                });\r\n                break;\r\n            case TableOperation.InsertRight:\r\n                let newCol = this.col + this.countSpanLeft(this.row, this.col);\r\n                this.forEachCellOfColumn(newCol - 1, (cell, row, i) => {\r\n                    let nextCell = this.getCell(i, newCol);\r\n                    let newCell: VCell;\r\n                    if (nextCell.spanLeft) {\r\n                        newCell = cloneCell(nextCell);\r\n                    } else if (cell.spanAbove) {\r\n                        newCell = cloneCell(cell);\r\n                        newCell.spanLeft = false;\r\n                    } else {\r\n                        newCell = {\r\n                            td: cloneNode(this.getTd(i, this.col)),\r\n                        };\r\n                    }\r\n\r\n                    row.splice(newCol, 0, newCell);\r\n                });\r\n                break;\r\n\r\n            case TableOperation.DeleteRow:\r\n                this.forEachCellOfCurrentRow((cell, i) => {\r\n                    let nextCell = this.getCell(this.row + 1, i);\r\n                    if (cell.td && cell.td.rowSpan > 1 && nextCell.spanAbove) {\r\n                        nextCell.td = cell.td;\r\n                    }\r\n                });\r\n                this.cells.splice(this.row, 1);\r\n                break;\r\n\r\n            case TableOperation.DeleteColumn:\r\n                this.forEachCellOfCurrentColumn((cell, row, i) => {\r\n                    let nextCell = this.getCell(i, this.col + 1);\r\n                    if (cell.td && cell.td.colSpan > 1 && nextCell.spanLeft) {\r\n                        nextCell.td = cell.td;\r\n                    }\r\n                    row.splice(this.col, 1);\r\n                });\r\n                break;\r\n\r\n            case TableOperation.MergeAbove:\r\n            case TableOperation.MergeBelow:\r\n                let rowStep = operation == TableOperation.MergeAbove ? -1 : 1;\r\n                for (\r\n                    let rowIndex = this.row + rowStep;\r\n                    rowIndex >= 0 && rowIndex < this.cells.length;\r\n                    rowIndex += rowStep\r\n                ) {\r\n                    let cell = this.getCell(rowIndex, this.col);\r\n                    if (cell.td && !cell.spanAbove) {\r\n                        let aboveCell = rowIndex < this.row ? cell : currentCell;\r\n                        let belowCell = rowIndex < this.row ? currentCell : cell;\r\n                        if (aboveCell.td.colSpan == belowCell.td.colSpan) {\r\n                            moveChildren(belowCell.td, aboveCell.td);\r\n                            belowCell.td = null;\r\n                            belowCell.spanAbove = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TableOperation.MergeLeft:\r\n            case TableOperation.MergeRight:\r\n                let colStep = operation == TableOperation.MergeLeft ? -1 : 1;\r\n                for (\r\n                    let colIndex = this.col + colStep;\r\n                    colIndex >= 0 && colIndex < this.cells[this.row].length;\r\n                    colIndex += colStep\r\n                ) {\r\n                    let cell = this.getCell(this.row, colIndex);\r\n                    if (cell.td && !cell.spanLeft) {\r\n                        let leftCell = colIndex < this.col ? cell : currentCell;\r\n                        let rightCell = colIndex < this.col ? currentCell : cell;\r\n                        if (leftCell.td.rowSpan == rightCell.td.rowSpan) {\r\n                            moveChildren(rightCell.td, leftCell.td);\r\n                            rightCell.td = null;\r\n                            rightCell.spanLeft = true;\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TableOperation.DeleteTable:\r\n                this.cells = null;\r\n                break;\r\n\r\n            case TableOperation.SplitVertically:\r\n                if (currentCell.td.rowSpan > 1) {\r\n                    this.getCell(this.row + 1, this.col).td = cloneNode(currentCell.td);\r\n                } else {\r\n                    let splitRow = currentRow.map(cell => {\r\n                        return {\r\n                            td: cell == currentCell ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell != currentCell,\r\n                            spanLeft: cell.spanLeft,\r\n                        };\r\n                    });\r\n                    this.cells.splice(this.row + 1, 0, splitRow);\r\n                }\r\n                break;\r\n\r\n            case TableOperation.SplitHorizontally:\r\n                if (currentCell.td.colSpan > 1) {\r\n                    this.getCell(this.row, this.col + 1).td = cloneNode(currentCell.td);\r\n                } else {\r\n                    this.forEachCellOfCurrentColumn((cell, row) => {\r\n                        row.splice(this.col + 1, 0, {\r\n                            td: row == currentRow ? cloneNode(cell.td) : null,\r\n                            spanAbove: cell.spanAbove,\r\n                            spanLeft: row != currentRow,\r\n                        });\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loop each cell of current column and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    forEachCellOfCurrentColumn(callback: (cell: VCell, row: VCell[], i: number) => any) {\r\n        this.forEachCellOfColumn(this.col, callback);\r\n    }\r\n\r\n    /**\r\n     * Loop each cell of current row and invoke a callback function\r\n     * @param callback The callback function to invoke\r\n     */\r\n    forEachCellOfCurrentRow(callback: (cell: VCell, i: number) => any) {\r\n        this.forEachCellOfRow(this.row, callback);\r\n    }\r\n\r\n    /**\r\n     * Get a table cell using its row and column index. This function will always return an object\r\n     * even if the given indexes don't exist in table.\r\n     * @param row The row index\r\n     * @param col The column index\r\n     */\r\n    getCell(row: number, col: number): VCell {\r\n        return (this.cells && this.cells[row] && this.cells[row][col]) || {};\r\n    }\r\n\r\n    /**\r\n     * Get current HTML table cell object. If the current table cell is a virtual expanded cell, return its root cell\r\n     */\r\n    getCurrentTd(): HTMLTableCellElement {\r\n        return this.getTd(this.row, this.col);\r\n    }\r\n\r\n    private getTd(row: number, col: number) {\r\n        if (this.cells) {\r\n            row = Math.min(this.cells.length - 1, row);\r\n            col = Math.min(this.cells[row].length - 1, col);\r\n            while (row >= 0 && col >= 0) {\r\n                let cell = this.getCell(row, col);\r\n                if (cell.td) {\r\n                    return cell.td;\r\n                } else if (cell.spanLeft) {\r\n                    col--;\r\n                } else if (cell.spanAbove) {\r\n                    row--;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private forEachCellOfColumn(\r\n        col: number,\r\n        callback: (cell: VCell, row: VCell[], i: number) => any\r\n    ) {\r\n        for (let i = 0; i < this.cells.length; i++) {\r\n            callback(this.getCell(i, col), this.cells[i], i);\r\n        }\r\n    }\r\n\r\n    private forEachCellOfRow(row: number, callback: (cell: VCell, i: number) => any) {\r\n        for (let i = 0; i < this.cells[row].length; i++) {\r\n            callback(this.getCell(row, i), i);\r\n        }\r\n    }\r\n\r\n    private recalcSpans(row: number, col: number) {\r\n        let td = this.getCell(row, col).td;\r\n        if (td) {\r\n            td.colSpan = this.countSpanLeft(row, col);\r\n            td.rowSpan = this.countSpanAbove(row, col);\r\n            if (td.colSpan == 1) {\r\n                td.removeAttribute('colSpan');\r\n            }\r\n            if (td.rowSpan == 1) {\r\n                td.removeAttribute('rowSpan');\r\n            }\r\n        }\r\n    }\r\n\r\n    private countSpanLeft(row: number, col: number) {\r\n        let result = 1;\r\n        for (let i = col + 1; i < this.cells[row].length; i++) {\r\n            let cell = this.getCell(row, i);\r\n            if (cell.td || !cell.spanLeft) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private countSpanAbove(row: number, col: number) {\r\n        let result = 1;\r\n        for (let i = row + 1; i < this.cells.length; i++) {\r\n            let cell = this.getCell(i, col);\r\n            if (cell.td || !cell.spanAbove) {\r\n                break;\r\n            }\r\n            result++;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nfunction getTableFromTd(td: HTMLTableCellElement) {\r\n    let result = <HTMLElement>td;\r\n    for (; result && result.tagName != 'TABLE'; result = result.parentElement) {}\r\n    return <HTMLTableElement>result;\r\n}\r\n\r\nfunction getBorderStyle(style: string): string {\r\n    return 'solid 1px ' + (style || 'transparent');\r\n}\r\n\r\n/**\r\n * Clone a table cell\r\n * @param cell The cell to clone\r\n */\r\nfunction cloneCell(cell: VCell): VCell {\r\n    return {\r\n        td: cloneNode(cell.td),\r\n        spanAbove: cell.spanAbove,\r\n        spanLeft: cell.spanLeft,\r\n    };\r\n}\r\n\r\n/**\r\n * Clone a node without its children.\r\n * @param node The node to clone\r\n */\r\nfunction cloneNode<T extends Node>(node: T): T {\r\n    let newNode = node ? <T>node.cloneNode(false /*deep*/) : null;\r\n    if (newNode && newNode instanceof HTMLTableCellElement) {\r\n        newNode.removeAttribute('id');\r\n        if (!newNode.firstChild) {\r\n            newNode.appendChild(node.ownerDocument.createElement('br'));\r\n        }\r\n    }\r\n    return newNode;\r\n}\r\n\r\n/**\r\n * Move all children from one node to another\r\n * @param fromNode The source node to move children from\r\n * @param toNode Target node. If not passed, children nodes of source node will be removed\r\n */\r\nfunction moveChildren(fromNode: Node, toNode?: Node) {\r\n    while (fromNode.firstChild) {\r\n        if (toNode) {\r\n            toNode.appendChild(fromNode.firstChild);\r\n        } else {\r\n            fromNode.removeChild(fromNode.firstChild);\r\n        }\r\n    }\r\n}\r\n","import { BrowserInfo } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get current browser information from user agent string\r\n * @param userAgent The userAgent string of a browser\r\n * @param appVersion The appVersion string of a browser\r\n * @returns The BrowserInfo object calculated from the given userAgent and appVersion\r\n */\r\nexport function getBrowserInfo(userAgent: string, appVersion: string): BrowserInfo {\r\n    // checks whether the browser is running in IE\r\n    // IE11 will use rv in UA instead of MSIE. Unfortunately Firefox also uses this. We should also look for \"Trident\" to confirm this.\r\n    // There have been cases where companies using older version of IE and custom UserAgents have broken this logic (e.g. IE 10 and KellyServices)\r\n    // therefore we should check that the Trident/rv combo is not just from an older IE browser\r\n    let isIE11OrGreater = userAgent.indexOf('rv:') != -1 && userAgent.indexOf('Trident') != -1;\r\n    let isIE = userAgent.indexOf('MSIE') != -1 || isIE11OrGreater;\r\n\r\n    // IE11+ may also have 'Chrome', 'Firefox' and 'Safari' in user agent. But it will have 'trident' as well\r\n    let isChrome = false;\r\n    let isFirefox = false;\r\n    let isSafari = false;\r\n    let isEdge = false;\r\n    let isWebKit = userAgent.indexOf('WebKit') != -1;\r\n\r\n    if (!isIE) {\r\n        isChrome = userAgent.indexOf('Chrome') != -1;\r\n        isFirefox = userAgent.indexOf('Firefox') != -1;\r\n        if (userAgent.indexOf('Safari') != -1) {\r\n            // Android and Chrome have Safari in the user string\r\n            isSafari = userAgent.indexOf('Chrome') == -1 && userAgent.indexOf('Android') == -1;\r\n        }\r\n\r\n        // Sample Edge UA: Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10121\r\n        isEdge = userAgent.indexOf('Edge') != -1;\r\n\r\n        // When it is edge, it should not be chrome or firefox. and it is also not webkit\r\n        if (isEdge) {\r\n            isWebKit = isChrome = isFirefox = false;\r\n        }\r\n    }\r\n\r\n    let isMac = appVersion.indexOf('Mac') != -1;\r\n    let isWin = appVersion.indexOf('Win') != -1 || appVersion.indexOf('NT') != -1;\r\n\r\n    return {\r\n        isMac,\r\n        isWin,\r\n        isWebKit,\r\n        isIE,\r\n        isIE11OrGreater,\r\n        isSafari,\r\n        isChrome,\r\n        isFirefox,\r\n        isEdge,\r\n        isIEOrEdge: isIE || isEdge,\r\n    };\r\n}\r\n\r\n/**\r\n * Browser object contains browser and operating system informations of current environment\r\n */\r\nexport const Browser = window\r\n    ? getBrowserInfo(window.navigator.userAgent, window.navigator.appVersion)\r\n    : {};\r\n","import changeElementTag from './changeElementTag';\nimport findClosestElementAncestor from './findClosestElementAncestor';\nimport getTagOfNode from './getTagOfNode';\nimport isPositionAtBeginningOf from '../selection/isPositionAtBeginningOf';\nimport isVoidHtmlElement from './isVoidHtmlElement';\nimport Position from '../selection/Position';\nimport unwrap from './unwrap';\nimport VTable from '../table/VTable';\nimport wrap from './wrap';\nimport { NodePosition, NodeType, PositionType } from 'roosterjs-editor-types';\n\n/**\n * Adjust the given position and return a better position (if any) or the given position\n * which will be the best one for inserting the given node.\n * @param root Root node of the scope\n * @param nodeToInsert The node about to be inserted\n * @param position The original position to insert the node\n */\nexport default function adjustNodeInsertPosition(\n    root: Node,\n    nodeToInsert: Node,\n    position: NodePosition\n): NodePosition {\n    let rootNodeToInsert = nodeToInsert;\n\n    if (rootNodeToInsert.nodeType == NodeType.DocumentFragment) {\n        let rootNodes = (<Node[]>[].slice.call(rootNodeToInsert.childNodes)).filter(\n            n => getTagOfNode(n) != 'BR'\n        );\n        rootNodeToInsert = rootNodes.length == 1 ? rootNodes[0] : null;\n    }\n\n    let tag = getTagOfNode(rootNodeToInsert);\n    let hasBrNextToRoot = tag && getTagOfNode(rootNodeToInsert.nextSibling) == 'BR';\n    let listItem = findClosestElementAncestor(position.node, root, 'LI');\n    let listNode = listItem && findClosestElementAncestor(listItem, root, 'OL,UL');\n    let tdNode = findClosestElementAncestor(position.node, root, 'TD,TH');\n    let trNode = tdNode && findClosestElementAncestor(tdNode, root, 'TR');\n\n    if (tag == 'LI') {\n        tag = listNode ? getTagOfNode(listNode) : 'UL';\n        rootNodeToInsert = wrap(rootNodeToInsert, tag);\n    }\n\n    if ((tag == 'OL' || tag == 'UL') && getTagOfNode(rootNodeToInsert.firstChild) == 'LI') {\n        let shouldInsertListAsText = !rootNodeToInsert.firstChild.nextSibling && !hasBrNextToRoot;\n\n        if (hasBrNextToRoot && rootNodeToInsert.parentNode) {\n            rootNodeToInsert.parentNode.removeChild(rootNodeToInsert.nextSibling);\n        }\n\n        if (shouldInsertListAsText) {\n            unwrap(rootNodeToInsert.firstChild);\n            unwrap(rootNodeToInsert);\n        } else if (getTagOfNode(listNode) == tag) {\n            unwrap(rootNodeToInsert);\n            position = new Position(\n                listItem,\n                isPositionAtBeginningOf(position, listItem)\n                    ? PositionType.Before\n                    : PositionType.After\n            );\n        }\n    } else if (tag == 'TABLE' && trNode) {\n        // When inserting a table into a table, if these tables have the same column count, and\n        // current position is at beginning of a row, then merge these two tables\n        let newTable = new VTable(<HTMLTableElement>rootNodeToInsert);\n        let currentTable = new VTable(<HTMLTableCellElement>tdNode);\n        if (\n            currentTable.col == 0 &&\n            tdNode == currentTable.getCell(currentTable.row, 0).td &&\n            newTable.cells[0] &&\n            newTable.cells[0].length == currentTable.cells[0].length &&\n            isPositionAtBeginningOf(position, tdNode)\n        ) {\n            if (\n                getTagOfNode(rootNodeToInsert.firstChild) == 'TBODY' &&\n                !rootNodeToInsert.firstChild.nextSibling\n            ) {\n                unwrap(rootNodeToInsert.firstChild);\n            }\n            unwrap(rootNodeToInsert);\n            position = new Position(trNode, PositionType.After);\n        }\n    }\n\n    if (getTagOfNode(position.node) == 'P') {\n        // Insert into a P tag may cause issues when the inserted content contains any block element.\n        // Change P tag to DIV to make sure it works well\n        let pos = position.normalize();\n        let div = changeElementTag(<HTMLElement>position.node, 'div');\n        if (pos.node != div) {\n            position = pos;\n        }\n    }\n\n    if (isVoidHtmlElement(position.node)) {\n        position = new Position(\n            position.node,\n            position.isAtEnd ? PositionType.After : PositionType.Before\n        );\n    }\n\n    return position;\n}\n","import { DefaultFormat } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Apply format to an HTML element\r\n * @param element The HTML element to apply format to\r\n * @param format The format to apply\r\n */\r\nexport default function applyFormat(element: HTMLElement, format: DefaultFormat, isDarkMode?: boolean) {\r\n    if (format) {\r\n        let elementStyle = element.style;\r\n        let { fontFamily, fontSize, textColor, textColors, backgroundColor, backgroundColors, bold, italic, underline } = format;\r\n\r\n        if (fontFamily) {\r\n            elementStyle.fontFamily = fontFamily;\r\n        }\r\n        if (fontSize) {\r\n            elementStyle.fontSize = fontSize;\r\n        }\r\n        if (textColor || textColors) {\r\n            if (textColors && isDarkMode) {\r\n                element.dataset.ogsc = textColors.lightModeColor;\r\n            }\r\n            elementStyle.color = textColor;\r\n        }\r\n        if (backgroundColor || backgroundColors) {\r\n            if (backgroundColors && isDarkMode) {\r\n                element.dataset.ogsb = backgroundColors.lightModeColor;\r\n            }\r\n            elementStyle.backgroundColor = backgroundColor;\r\n        }\r\n        if (bold) {\r\n            elementStyle.fontWeight = 'bold';\r\n        }\r\n        if (italic) {\r\n            elementStyle.fontStyle = 'italic';\r\n        }\r\n        if (underline) {\r\n            elementStyle.textDecoration = 'underline';\r\n        }\r\n    }\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\nimport Position from '../selection/Position';\r\nimport wrap from './wrap';\r\nimport { getNextLeafSibling } from './getLeafSibling';\r\nimport { NodePosition, NodeType, PositionType } from 'roosterjs-editor-types';\r\nimport { splitBalancedNodeRange } from './splitParentNode';\r\n\r\nconst STYLETAGS = 'SPAN,B,I,U,EM,STRONG,STRIKE,S,SMALL'.split(',');\r\n\r\n/**\r\n * Apply style using a styler function to the given container node in the given range\r\n * @param container The container node to apply style to\r\n * @param styler The styler function\r\n * @param from From position\r\n * @param to To position\r\n */\r\nexport default function applyTextStyle(\r\n    container: Node,\r\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any,\r\n    from: NodePosition = new Position(container, PositionType.Begin).normalize(),\r\n    to: NodePosition = new Position(container, PositionType.End).normalize()\r\n) {\r\n    let formatNodes: Node[] = [];\r\n\r\n    while (from && to && to.isAfter(from)) {\r\n        let formatNode = from.node;\r\n        let parentTag = getTagOfNode(formatNode.parentNode);\r\n\r\n        // The code below modifies DOM. Need to get the next sibling first otherwise you won't be able to reliably get a good next sibling node\r\n        let nextNode = getNextLeafSibling(container, formatNode);\r\n\r\n        if (formatNode.nodeType == NodeType.Text && ['TR', 'TABLE'].indexOf(parentTag) < 0) {\r\n            if (formatNode == to.node && !to.isAtEnd) {\r\n                formatNode = splitTextNode(formatNode, to.offset, true /*returnFirstPart*/);\r\n            }\r\n\r\n            if (from.offset > 0) {\r\n                formatNode = splitTextNode(formatNode, from.offset, false /*returnFirstPart*/);\r\n            }\r\n\r\n            formatNodes.push(formatNode);\r\n        }\r\n\r\n        from = nextNode && new Position(nextNode, PositionType.Begin);\r\n    }\r\n\r\n    if (formatNodes.length > 0) {\r\n        if (formatNodes.every(node => node.parentNode == formatNodes[0].parentNode)) {\r\n            let newNode = formatNodes.shift();\r\n            formatNodes.forEach(node => {\r\n                newNode.nodeValue += node.nodeValue;\r\n                node.parentNode.removeChild(node);\r\n            });\r\n            formatNodes = [newNode];\r\n        }\r\n\r\n        formatNodes.forEach(node => {\r\n            // When apply style within style tags like B/I/U/..., we split the tag and apply outside them\r\n            // So that the inner style tag such as U, STRIKE can inherit the style we added\r\n            while (\r\n                getTagOfNode(node) != 'SPAN' &&\r\n                STYLETAGS.indexOf(getTagOfNode(node.parentNode)) >= 0\r\n            ) {\r\n                callStylerWithInnerNode(node, styler);\r\n                node = splitBalancedNodeRange(node);\r\n            }\r\n\r\n            if (getTagOfNode(node) != 'SPAN') {\r\n                callStylerWithInnerNode(node, styler);\r\n                node = wrap(node, 'SPAN');\r\n            }\r\n            styler(<HTMLElement>node);\r\n        });\r\n    }\r\n}\r\n\r\nfunction callStylerWithInnerNode(\r\n    node: Node,\r\n    styler: (node: HTMLElement, isInnerNode?: boolean) => any\r\n) {\r\n    if (node && node.nodeType == NodeType.Element) {\r\n        styler(node as HTMLElement, true /*isInnerNode*/);\r\n    }\r\n}\r\n\r\nfunction splitTextNode(textNode: Node, offset: number, returnFirstPart: boolean) {\r\n    let firstPart = textNode.nodeValue.substr(0, offset);\r\n    let secondPart = textNode.nodeValue.substr(offset);\r\n    let newNode = textNode.ownerDocument.createTextNode(returnFirstPart ? firstPart : secondPart);\r\n    textNode.nodeValue = returnFirstPart ? secondPart : firstPart;\r\n    textNode.parentNode.insertBefore(newNode, returnFirstPart ? textNode : textNode.nextSibling);\r\n    return newNode;\r\n}\r\n","import getComputedStyles from './getComputedStyles';\r\nimport getTagOfNode from './getTagOfNode';\r\n\r\n/**\r\n * Change tag of an HTML Element to a new one, and replace it from DOM tree\r\n * @param element The element to change tag\r\n * @param newTag New tag to change to\r\n * @returns The new element with new tag\r\n */\r\nexport default function changeElementTag<K extends keyof HTMLElementTagNameMap>(\r\n    element: HTMLElement,\r\n    newTag: K\r\n): HTMLElementTagNameMap[K];\r\n\r\n/**\r\n * Change tag of an HTML Element to a new one, and replace it from DOM tree\r\n * @param element The element to change tag\r\n * @param newTag New tag to change to\r\n * @returns The new element with new tag\r\n */\r\nexport default function changeElementTag(element: HTMLElement, newTag: string): HTMLElement;\r\n\r\nexport default function changeElementTag(element: HTMLElement, newTag: string): HTMLElement {\r\n    if (!element || !newTag) {\r\n        return null;\r\n    }\r\n\r\n    let newElement = element.ownerDocument.createElement(newTag);\r\n\r\n    for (let i = 0; i < element.attributes.length; i++) {\r\n        let attr = element.attributes[i];\r\n        newElement.setAttribute(attr.name, attr.value);\r\n    }\r\n\r\n    while (element.firstChild) {\r\n        newElement.appendChild(element.firstChild);\r\n    }\r\n\r\n    if (getTagOfNode(element) == 'P' || getTagOfNode(newElement) == 'P') {\r\n        [newElement.style.marginTop, newElement.style.marginBottom] = getComputedStyles(element, [\r\n            'margin-top',\r\n            'margin-bottom',\r\n        ]);\r\n    }\r\n\r\n    if (element.parentNode) {\r\n        element.parentNode.replaceChild(newElement, element);\r\n    }\r\n\r\n    return newElement;\r\n}\r\n","import contains from './contains';\r\nimport splitParentNode from './splitParentNode';\r\n\r\n/**\r\n * Collapse nodes within the given start and end nodes to their common ascenstor node,\r\n * split parent nodes if necessary\r\n * @param root The root node of the scope\r\n * @param start The start node\r\n * @param end The end node\r\n * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\r\n * and the returned nodes will be all nodes from start trhough end after splitting\r\n * False to disallow split parent\r\n * @returns When cansplitParent is true, returns all node from start through end after splitting,\r\n * otherwise just return start and end\r\n */\r\nexport default function collapseNodes(\r\n    root: Node,\r\n    start: Node,\r\n    end: Node,\r\n    canSplitParent: boolean\r\n): Node[] {\r\n    if (!contains(root, start) || !contains(root, end)) {\r\n        return [];\r\n    }\r\n\r\n    start = collapse(root, start, end, true /*isStart*/, canSplitParent);\r\n    end = collapse(root, end, start, false /*isStart*/, canSplitParent);\r\n\r\n    if (contains(start, end, true /*treateSameNodeAsContain*/)) {\r\n        return [start];\r\n    } else if (contains(end, start)) {\r\n        return [end];\r\n    } else if (start.parentNode == end.parentNode) {\r\n        let nodes = [].slice.call(start.parentNode.childNodes) as Node[];\r\n        let startIndex = nodes.indexOf(start);\r\n        let endIndex = nodes.indexOf(end);\r\n        return nodes.slice(startIndex, endIndex + 1);\r\n    } else {\r\n        return [start, end];\r\n    }\r\n}\r\n\r\nfunction collapse(\r\n    root: Node,\r\n    node: Node,\r\n    ref: Node,\r\n    isStart: boolean,\r\n    canSplitParent: boolean\r\n): Node {\r\n    while (node.parentNode != root && !contains(node.parentNode, ref)) {\r\n        if ((isStart && node.previousSibling) || (!isStart && node.nextSibling)) {\r\n            if (!canSplitParent) {\r\n                break;\r\n            }\r\n            splitParentNode(node, isStart);\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return node;\r\n}\r\n","import { NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Test if a node contains another node\r\n * @param container The container node\r\n * @param contained The node to check if it is inside container\r\n * @param treatSameNodeAsContain When container and contained are the same node,\r\n * return true if this param is set to true, otherwise return false. Default value is false\r\n * @returns True if contained is insied container, or they are the same node when treatSameNodeAsContain is true.\r\n * Otherwise false.\r\n */\r\nexport default function contains(\r\n    container: Node,\r\n    contained: Node,\r\n    treatSameNodeAsContain?: boolean\r\n): boolean;\r\n\r\n/**\r\n * Test if a node contains a given range\r\n * @param container The container node\r\n * @param contained The range to check if it is inside container\r\n * @returns True if contained is insied container, otherwise false\r\n */\r\nexport default function contains(container: Node, contained: Range): boolean;\r\n\r\nexport default function contains(\r\n    container: Node,\r\n    contained: Node | Range,\r\n    treatSameNodeAsContain?: boolean\r\n): boolean {\r\n    if (!container || !contained) {\r\n        return false;\r\n    }\r\n\r\n    if (treatSameNodeAsContain && container == contained) {\r\n        return true;\r\n    }\r\n\r\n    if (!(contained instanceof Node)) {\r\n        contained = contained && contained.commonAncestorContainer;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n\r\n    if (contained && contained.nodeType == NodeType.Text) {\r\n        contained = contained.parentNode;\r\n        treatSameNodeAsContain = true;\r\n    }\r\n\r\n    if (container.nodeType != NodeType.Element) {\r\n        return !!treatSameNodeAsContain && container == contained;\r\n    }\r\n\r\n    return !!(treatSameNodeAsContain || container != contained) && container.contains(contained);\r\n}\r\n","import { Browser } from './Browser';\r\nimport { ClipboardItems } from 'roosterjs-editor-types';\r\n\r\n// HTML header to indicate where is the HTML content started from.\r\n// Sample header:\r\n// Version:0.9\r\n// StartHTML:71\r\n// EndHTML:170\r\n// StartFragment:140\r\n// EndFragment:160\r\n// StartSelection:140\r\n// EndSelection:160\r\nconst CLIPBOARD_HTML_HEADER_REGEX = /^Version:[0-9\\.]+\\s+StartHTML:\\s*([0-9]+)\\s+EndHTML:\\s*([0-9]+)\\s+/i;\r\n\r\ninterface WindowForIE extends Window {\r\n    clipboardData: DataTransfer;\r\n}\r\n\r\n/**\r\n * Extract a Clipboard event\r\n * @param event The paste event\r\n * @param callback Callback function when data is ready\r\n * @param fallbackHtmlRetriever If direct HTML retriving is not support (e.g. Internet Explorer), as a fallback,\r\n * using this helper function to retrieve HTML content\r\n * @returns An object with the following properties:\r\n *  types: Available types from the clipboard event\r\n *  text: Plain text from the clipboard event\r\n *  image: Image file from the clipboard event\r\n *  html: Html string from the clipboard event. When set to null, it means there's no HTML found from the event.\r\n *   When set to undefined, it means can't retrieve HTML string, there may be HTML string but direct retrieving is\r\n *   not supported by browser.\r\n */\r\nexport default function extractClipboardEvent(\r\n    event: ClipboardEvent,\r\n    callback: (items: ClipboardItems) => void\r\n) {\r\n    let dataTransfer =\r\n        event.clipboardData ||\r\n        (<WindowForIE>(<Node>event.target).ownerDocument.defaultView).clipboardData;\r\n    let result: ClipboardItems = {\r\n        types: dataTransfer.types ? [].slice.call(dataTransfer.types) : [],\r\n        text: dataTransfer.getData('text'),\r\n        image: getImage(dataTransfer),\r\n        html: undefined,\r\n    };\r\n\r\n    if (event.clipboardData && event.clipboardData.items) {\r\n        event.preventDefault();\r\n        let items = event.clipboardData.items;\r\n        for (let i = 0; i < items.length; i++) {\r\n            let item = items[i];\r\n            if (item.type && item.type.indexOf('text/html') == 0) {\r\n                item.getAsString(html => {\r\n                    result.html = Browser.isEdge ? workaroundForEdge(html) : html;\r\n                    callback(result);\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        // No HTML content found, set html to null\r\n        result.html = null;\r\n    }\r\n\r\n    callback(result);\r\n}\r\n\r\nfunction getImage(dataTransfer: DataTransfer): File {\r\n    // Chrome, Firefox, Edge support dataTransfer.items\r\n    let fileCount = dataTransfer.items ? dataTransfer.items.length : 0;\r\n    for (let i = 0; i < fileCount; i++) {\r\n        let item = dataTransfer.items[i];\r\n        if (item.type && item.type.indexOf('image/') == 0) {\r\n            return item.getAsFile();\r\n        }\r\n    }\r\n    // IE, Safari support dataTransfer.files\r\n    fileCount = dataTransfer.files ? dataTransfer.files.length : 0;\r\n    for (let i = 0; i < fileCount; i++) {\r\n        let file = dataTransfer.files.item(i);\r\n        if (file.type && file.type.indexOf('image/') == 0) {\r\n            return file;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Edge sometimes doesn't remove the headers, which cause we paste more things then expected.\r\n * So we need to remove it in our code\r\n * @param html The HTML string got from clipboard\r\n */\r\nfunction workaroundForEdge(html: string) {\r\n    let headerValues = CLIPBOARD_HTML_HEADER_REGEX.exec(html);\r\n\r\n    if (headerValues && headerValues.length == 3) {\r\n        let start = parseInt(headerValues[1]);\r\n        let end = parseInt(headerValues[2]);\r\n        if (start > 0 && end > start) {\r\n            html = html.substring(start, end);\r\n        }\r\n    }\r\n\r\n    return html;\r\n}\r\n","import contains from './contains';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\ninterface HTMLElementForIE extends HTMLElement {\r\n    msMatchesSelector: (selector: string) => boolean;\r\n}\r\n\r\n/**\r\n * Find closest element ancestor start from the given node which matches the given selector\r\n * @param node Find ancestor start from this node\r\n * @param root Root node where the search should stop at. The return value can never be this node\r\n * @param selector The expected selector. If null, return the first HTML Element found from start node\r\n * @returns An HTML element which matches the given selector. If the given start node matches the selector,\r\n * returns the given node\r\n */\r\nexport default function findClosestElementAncestor(\r\n    node: Node,\r\n    root?: Node,\r\n    selector?: string\r\n): HTMLElement {\r\n    node = !node ? null : node.nodeType == NodeType.Element ? node : node.parentNode;\r\n    let element = node && node.nodeType == NodeType.Element ? <HTMLElement>node : null;\r\n\r\n    if (element && selector) {\r\n        if (element.closest) {\r\n            element = element.closest(selector) as HTMLElement;\r\n        } else {\r\n            while (\r\n                element &&\r\n                element != root &&\r\n                !(element.matches || (<HTMLElementForIE>element).msMatchesSelector).call(\r\n                    element,\r\n                    selector\r\n                )\r\n            ) {\r\n                element = element.parentElement;\r\n            }\r\n        }\r\n    }\r\n\r\n    return !root || contains(root, element) ? element : null;\r\n}\r\n","/**\r\n * Creates an HTML node array from html\r\n * @param html the html string to create HTML elements from\r\n * @param ownerDocument Owner document of the result HTML elements\r\n * @returns An HTML node array to represent the given html string\r\n */\r\nexport default function fromHtml(html: string, ownerDocument: HTMLDocument): Node[] {\r\n    let element = ownerDocument.createElement('DIV');\r\n    element.innerHTML = html;\r\n\r\n    return [].slice.call(element.childNodes);\r\n}\r\n","import findClosestElementAncestor from './findClosestElementAncestor';\r\n\r\n/**\r\n * Get computed styles of a node\r\n * @param node The node to get computed styles from\r\n * @param styleNames Names of style to get, can be a single name or an array.\r\n * Default value is font-family, font-size, color, background-color\r\n * @returns An array of the computed styles\r\n */\r\nexport default function getComputedStyles(\r\n    node: Node,\r\n    styleNames: string | string[] = ['font-family', 'font-size', 'color', 'background-color']\r\n): string[] {\r\n    let element = findClosestElementAncestor(node);\r\n    let result: string[] = [];\r\n    styleNames = styleNames instanceof Array ? styleNames : [styleNames];\r\n    if (element) {\r\n        let win = element.ownerDocument.defaultView || window;\r\n        let styles = win.getComputedStyle(element);\r\n\r\n        if (styles) {\r\n            for (let style of styleNames) {\r\n                let value = (styles.getPropertyValue(style) || '').toLowerCase();\r\n                value = style == 'font-size' ? px2Pt(value) : value;\r\n                result.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * A shortcut for getComputedStyles() when only one style is to be retrieved\r\n * @param node The node to get style from\r\n * @param styleName The style name\r\n * @returns The style value\r\n */\r\nexport function getComputedStyle(node: Node, styleName: string): string {\r\n    return getComputedStyles(node, styleName)[0] || '';\r\n}\r\n\r\nfunction px2Pt(px: string) {\r\n    if (px && px.indexOf('px') == px.length - 2) {\r\n        // Edge may not handle the floating computing well which causes the calculated value is a little less than actual value\r\n        // So add 0.05 to fix it\r\n        return Math.round(parseFloat(px) * 75 + 0.05) / 100 + 'pt';\r\n    }\r\n    return px;\r\n}\r\n","import shouldSkipNode from './shouldSkipNode';\r\nimport { getLeafSibling } from './getLeafSibling';\r\n\r\n/**\r\n * Get first/last leaf node of the given root node.\r\n * @param rootNode Root node to get leaf node from\r\n * @param isFirst True to get first leaf node, false to get last leaf node\r\n */\r\nfunction getLeafNode(rootNode: Node, isFirst: boolean): Node {\r\n    let getChild = (node: Node): Node => (isFirst ? node.firstChild : node.lastChild);\r\n    let result = getChild(rootNode);\r\n    while (result && getChild(result)) {\r\n        result = getChild(result);\r\n    }\r\n\r\n    if (result && shouldSkipNode(result)) {\r\n        result = getLeafSibling(rootNode, result, isFirst);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * Get the first meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nexport function getFirstLeafNode(rootNode: Node): Node {\r\n    return getLeafNode(rootNode, true /*isFirst*/);\r\n}\r\n\r\n/**\r\n * Get the last meaningful leaf node\r\n * @param rootNode Root node to get leaf node from\r\n */\r\nexport function getLastLeafNode(rootNode: Node): Node {\r\n    return getLeafNode(rootNode, false /*isFirst*/);\r\n}\r\n","import contains from './contains';\r\nimport shouldSkipNode from './shouldSkipNode';\r\n\r\n/**\r\n * This walks forwards/backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n * @param isNext True to get next leaf sibling node, false to get previous leaf sibling node\r\n */\r\nexport function getLeafSibling(rootNode: Node, startNode: Node, isNext: boolean): Node {\r\n    let result = null;\r\n    let getSibling = isNext\r\n        ? (node: Node) => node.nextSibling\r\n        : (node: Node) => node.previousSibling;\r\n    let getChild = isNext ? (node: Node) => node.firstChild : (node: Node) => node.lastChild;\r\n    if (contains(rootNode, startNode)) {\r\n        let curNode = startNode;\r\n        let shouldContinue = true;\r\n\r\n        while (shouldContinue) {\r\n            // Find next/previous node, starting from next/previous sibling, then one level up to find next/previous sibling from parent\r\n            // till a non-null nextSibling/previousSibling is found or the ceiling is encountered (rootNode)\r\n            let parentNode = curNode.parentNode;\r\n            curNode = getSibling(curNode);\r\n            while (!curNode && parentNode != rootNode) {\r\n                curNode = getSibling(parentNode);\r\n                parentNode = parentNode.parentNode;\r\n            }\r\n\r\n            // Now traverse down to get first/last child\r\n            while (curNode && getChild(curNode)) {\r\n                curNode = getChild(curNode);\r\n            }\r\n\r\n            // Check special nodes (i.e. node that has a display:none etc.) and continue looping if so\r\n            shouldContinue = curNode && shouldSkipNode(curNode);\r\n            if (!shouldContinue) {\r\n                // Found a good leaf node, assign and exit\r\n                result = curNode;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * This walks forwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n */\r\nexport function getNextLeafSibling(rootNode: Node, startNode: Node): Node {\r\n    return getLeafSibling(rootNode, startNode, true /*isNext*/);\r\n}\r\n\r\n/**\r\n * This walks backwards DOM tree to get next meaningful node\r\n * @param rootNode Root node to scope the leaf sibling node\r\n * @param startNode current node to get sibling node from\r\n */\r\nexport function getPreviousLeafSibling(rootNode: Node, startNode: Node): Node {\r\n    return getLeafSibling(rootNode, startNode, false /*isNext*/);\r\n}\r\n","import { DocumentCommand, PendableFormatState } from 'roosterjs-editor-types';\n\n/**\n * Names of Pendable formats\n */\nexport type PendableFormatNames = keyof PendableFormatState;\n\n/**\n * A map from pendable format name to document command\n */\nexport const PendableFormatCommandMap: { [key in PendableFormatNames]: DocumentCommand } = {\n    /**\n     * Bold\n     */\n    isBold: DocumentCommand.Bold,\n\n    /**\n     * Italic\n     */\n    isItalic: DocumentCommand.Italic,\n\n    /**\n     * Underline\n     */\n    isUnderline: DocumentCommand.Underline,\n\n    /**\n     * StrikeThrough\n     */\n    isStrikeThrough: DocumentCommand.StrikeThrough,\n\n    /**\n     * Subscript\n     */\n    isSubscript: DocumentCommand.Subscript,\n\n    /**\n     * Superscript\n     */\n    isSuperscript: DocumentCommand.Superscript,\n};\n\n/**\n * Get Pendable Format State at cursor.\n * @param document The HTML Document to get format state from\n * @returns A PendableFormatState object which contains the values of pendable format states\n */\nexport default function getPendableFormatState(document: Document): PendableFormatState {\n    let keys = Object.keys(PendableFormatCommandMap) as PendableFormatNames[];\n\n    return keys.reduce(\n        (state, key) => {\n            state[key] = document.queryCommandState(PendableFormatCommandMap[key]);\n            return state;\n        },\n        <PendableFormatState>{}\n    );\n}\n","import { NodeType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Get the html tag of a node, or empty if it is not an element\r\n * @param node The node to get tag of\r\n * @returns Tag name in upper case if the given node is an Element, or empty string otherwise\r\n */\r\nexport default function getTagOfNode(node: Node): string {\r\n    return node && node.nodeType == NodeType.Element ? (<Element>node).tagName.toUpperCase() : '';\r\n}\r\n","import ContentTraverser from '../contentTraverser/ContentTraverser';\n\n/**\n * get block element's text content.\n * @param rootNode Root node that the get the textContent of.\n * @returns text content of given text content.\n */\nexport default function getTextContent(rootNode: Node): string {\n    const traverser = ContentTraverser.createBodyTraverser(rootNode);\n    let block = traverser && traverser.currentBlockElement;\n    let textContent: string[] = [];\n\n    while (block) {\n        textContent.push(block.getTextContent());\n        block = traverser.getNextBlockElement();\n    }\n\n    return textContent.join('\\n');\n}\n","import getTagOfNode from './getTagOfNode';\r\n\r\nconst BLOCK_ELEMENT_TAGS = 'ADDRESS,ARTICLE,ASIDE,BLOCKQUOTE,CANVAS,DD,DIV,DL,DT,FIELDSET,FIGCAPTION,FIGURE,FOOTER,FORM,H1,H2,H3,H4,H5,H6,HEADER,HR,LI,MAIN,NAV,NOSCRIPT,OL,OUTPUT,P,PRE,SECTION,TABLE,TD,TH,TFOOT,UL,VIDEO'.split(\r\n    ','\r\n);\r\nconst BLOCK_DISPLAY_STYLES = ['block', 'list-item', 'table-cell'];\r\n\r\n/**\r\n * Checks if the node is a block like element. Block like element are usually those P, DIV, LI, TD etc.\r\n * @param node The node to check\r\n * @returns True if the node is a block element, otherwise false\r\n */\r\nexport default function isBlockElement(node: Node): boolean {\r\n    let tag = getTagOfNode(node);\r\n    return !!(\r\n        tag &&\r\n        (BLOCK_DISPLAY_STYLES.indexOf((<HTMLElement>node).style.display) >= 0 ||\r\n            BLOCK_ELEMENT_TAGS.indexOf(tag) >= 0)\r\n    );\r\n}\r\n","import { DocumentPosition } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Checks if node1 is after node2\r\n * @param node1 The node to check if it is after another node\r\n * @param node2 The node to check if another node is after this one\r\n * @returns True if node1 is after node2, otherwise false\r\n */\r\nexport default function isNodeAfter(node1: Node, node2: Node): boolean {\r\n    return !!(\r\n        node1 &&\r\n        node2 &&\r\n        (node2.compareDocumentPosition(node1) & DocumentPosition.Following) ==\r\n            DocumentPosition.Following\r\n    );\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\nconst VISIBLE_ELEMENT_TAGS = ['IMG'];\r\nconst VISIBLE_CHILD_ELEMENT_SELECTOR = ['TABLE', 'IMG', 'LI'].join(',');\r\nconst ZERO_WIDTH_SPACE = /\\u200b/g;\r\n\r\n/**\r\n * Check if a given node has no visible content\r\n * @param node The node to check\r\n * @param trimContent Whether trim the text content so that spaces will be treated as empty.\r\n * Default value is false\r\n * @returns True if there isn't any visible element inside node, otherwise false\r\n */\r\nexport default function isNodeEmpty(node: Node, trimContent?: boolean) {\r\n    if (!node) {\r\n        return false;\r\n    } else if (node.nodeType == NodeType.Text) {\r\n        return trim(node.nodeValue, trimContent) == '';\r\n    } else if (node.nodeType == NodeType.Element) {\r\n        let element = node as Element;\r\n        let textContent = trim(element.textContent, trimContent);\r\n        if (\r\n            textContent != '' ||\r\n            VISIBLE_ELEMENT_TAGS.indexOf(getTagOfNode(element)) >= 0 ||\r\n            element.querySelectorAll(VISIBLE_CHILD_ELEMENT_SELECTOR)[0]\r\n        ) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction trim(s: string, trim: boolean) {\r\n    s = s.replace(ZERO_WIDTH_SPACE, '');\r\n    return trim ? s.trim() : s;\r\n}\r\n","import getTagOfNode from './getTagOfNode';\r\n\r\n/**\r\n * HTML void elements\r\n * Per https://www.w3.org/TR/html/syntax.html#syntax-elements, cannot have child nodes\r\n * This regex is used when we move focus to very begin of editor. We should avoid putting focus inside\r\n * void elements so users don't accidently create child nodes in them\r\n */\r\nconst HTML_VOID_ELEMENTS = 'AREA,BASE,BR,COL,COMMAND,EMBED,HR,IMG,INPUT,KEYGEN,LINK,META,PARAM,SOURCE,TRACK,WBR'.split(\r\n    ','\r\n);\r\n\r\n/**\r\n * Check if the given node is html void element. Void element cannot have childen\r\n * @param node The node to check\r\n */\r\nexport default function isVoidHtmlElement(node: Node): boolean {\r\n    return !!node && HTML_VOID_ELEMENTS.indexOf(getTagOfNode(node)) >= 0;\r\n}\r\n","import { LinkData } from 'roosterjs-editor-types';\r\n\r\ninterface LinkMatchRule {\r\n    match: RegExp;\r\n    except?: RegExp;\r\n    normalizeUrl?: (url: string) => string;\r\n}\r\n\r\n// http exclude matching regex\r\n// invalid URL example (in paricular on IE and Edge):\r\n// - http://www.bing.com%00, %00 before ? (question mark) is considered invalid. IE/Edge throws invalid argument exception\r\n// - http://www.bing.com%1, %1 is invalid\r\n// - http://www.bing.com%g, %g is invalid (IE and Edge expects a two hex value after a %)\r\n// - http://www.bing.com%, % as ending is invalid (IE and Edge expects a two hex value after a %)\r\n// All above % cases if they're after ? (question mark) is then considered valid again\r\n// Similar for @, it needs to be after / (forward slash), or ? (question mark). Otherwise IE/Edge will throw security exception\r\n// - http://www.bing.com@name, @name before ? (question mark) is considered invalid\r\n// - http://www.bing.com/@name, is valid sine it is after / (forward slash)\r\n// - http://www.bing.com?@name, is also valid sinve it is after ? (question mark)\r\n// The regex below is essentially a break down of:\r\n// ^[^?]+%[^0-9a-f]+ => to exclude URL like www.bing.com%%\r\n// ^[^?]+%[0-9a-f][^0-9a-f]+ => to exclude URL like www.bing.com%1\r\n// ^[^?]+%00 => to exclude URL like www.bing.com%00\r\n// ^[^?]+%$ => to exclude URL like www.bing.com%\r\n// ^https?:\\/\\/[^?\\/]+@ => to exclude URL like http://www.bing.com@name\r\n// ^www\\.[^?\\/]+@ => to exclude URL like www.bing.com@name\r\n// , => to exclude url like www.bing,,com\r\nconst httpExcludeRegEx = /^[^?]+%[^0-9a-f]+|^[^?]+%[0-9a-f][^0-9a-f]+|^[^?]+%00|^[^?]+%$|^https?:\\/\\/[^?\\/]+@|^www\\.[^?\\/]+@/i;\r\n\r\n// via https://tools.ietf.org/html/rfc1035 Page 7\r\nconst labelRegEx = '[a-z0-9](?:[a-z0-9-]*[a-z0-9])?'; // We're using case insensitive regexes below so don't bother including A-Z\r\nconst domainNameRegEx = `(?:${labelRegEx}\\\\.)*${labelRegEx}`;\r\nconst domainPortRegEx = `${domainNameRegEx}(?:\\\\:[0-9]+)?`;\r\nconst domainPortWithUrlRegEx = `${domainPortRegEx}(?:[\\\\/\\\\?]\\\\S*)?`;\r\n\r\nconst linkMatchRules: { [schema: string]: LinkMatchRule } = {\r\n    http: {\r\n        match: new RegExp(\r\n            `^(?:microsoft-edge:)?http:\\\\/\\\\/${domainPortWithUrlRegEx}|www\\\\.${domainPortWithUrlRegEx}`,\r\n            'i'\r\n        ),\r\n        except: httpExcludeRegEx,\r\n        normalizeUrl: url =>\r\n            new RegExp('^(?:microsoft-edge:)?http:\\\\/\\\\/', 'i').test(url) ? url : 'http://' + url,\r\n    },\r\n    https: {\r\n        match: new RegExp(`^(?:microsoft-edge:)?https:\\\\/\\\\/${domainPortWithUrlRegEx}`, 'i'),\r\n        except: httpExcludeRegEx,\r\n    },\r\n    mailto: { match: new RegExp('^mailto:\\\\S+@\\\\S+\\\\.\\\\S+', 'i') },\r\n    notes: { match: new RegExp('^notes:\\\\/\\\\/\\\\S+', 'i') },\r\n    file: { match: new RegExp('^file:\\\\/\\\\/\\\\/?\\\\S+', 'i') },\r\n    unc: { match: new RegExp('^\\\\\\\\\\\\\\\\\\\\S+', 'i') },\r\n    ftp: {\r\n        match: new RegExp(\r\n            `^ftp:\\\\/\\\\/${domainPortWithUrlRegEx}|ftp\\\\.${domainPortWithUrlRegEx}`,\r\n            'i'\r\n        ),\r\n        normalizeUrl: url => (new RegExp('^ftp:\\\\/\\\\/', 'i').test(url) ? url : 'ftp://' + url),\r\n    },\r\n    news: { match: new RegExp(`^news:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n    telnet: { match: new RegExp(`^telnet:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n    gopher: { match: new RegExp(`^gopher:\\\\/\\\\/${domainPortWithUrlRegEx}`, 'i') },\r\n    wais: { match: new RegExp(`^wais:(\\\\/\\\\/)?${domainPortWithUrlRegEx}`, 'i') },\r\n};\r\n\r\n/**\r\n * Try to match a given string with link match rules, return matched link\r\n * @param url Input url to match\r\n * @param option Link match option, exact or partial. If it is exact match, we need\r\n * to check the length of matched link and url\r\n * @param rules Optional link match rules, if not passed, only the default link match\r\n * rules will be applied\r\n * @returns The matched link data, or null if no match found.\r\n * The link data includes an original url and a normalized url\r\n */\r\nexport default function matchLink(url: string): LinkData {\r\n    if (url) {\r\n        for (let schema of Object.keys(linkMatchRules)) {\r\n            let rule = linkMatchRules[schema];\r\n            let matches = url.match(rule.match);\r\n            if (matches && matches[0] == url && (!rule.except || !rule.except.test(url))) {\r\n                return {\r\n                    scheme: schema,\r\n                    originalUrl: url,\r\n                    normalizedUrl: rule.normalizeUrl ? rule.normalizeUrl(url) : url,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import { DocumentPosition } from 'roosterjs-editor-types';\r\nimport { QueryScope } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * Query HTML elements in the container by a selector string\r\n * @param container Container element to query from\r\n * @param selector Selector string to query\r\n * @param forEachCallback An optional callback to be invoked on each node in query result\r\n * @param scope The scope of the query, default value is QueryScope.Body\r\n * @param range The selection range to query with. This is required when scope is not Body\r\n * @returns HTML Element array of the query result\r\n */\r\nexport default function queryElements(\r\n    container: HTMLElement,\r\n    selector: string,\r\n    forEachCallback?: (node: HTMLElement) => any,\r\n    scope: QueryScope = QueryScope.Body,\r\n    range?: Range\r\n): HTMLElement[] {\r\n    if (!container || !selector) {\r\n        return [];\r\n    }\r\n\r\n    let elements = [].slice.call(container.querySelectorAll(selector)) as HTMLElement[];\r\n\r\n    if (scope != QueryScope.Body && range) {\r\n        elements = elements.filter(element =>\r\n            isIntersectWithNodeRange(element, range, scope == QueryScope.InSelection)\r\n        );\r\n    }\r\n\r\n    if (forEachCallback) {\r\n        elements.forEach(forEachCallback);\r\n    }\r\n    return elements;\r\n}\r\n\r\nfunction isIntersectWithNodeRange(\r\n    node: Node,\r\n    range: Range,\r\n    nodeContainedByRangeOnly: boolean\r\n): boolean {\r\n    let startPosition = node.compareDocumentPosition(range.startContainer);\r\n    let endPosition = node.compareDocumentPosition(range.endContainer);\r\n    let targetPositions = [DocumentPosition.Same, DocumentPosition.Contains];\r\n\r\n    if (!nodeContainedByRangeOnly) {\r\n        targetPositions.push(DocumentPosition.ContainedBy);\r\n    }\r\n\r\n    return (\r\n        checkPosition(startPosition, targetPositions) || // intersectStart\r\n        checkPosition(endPosition, targetPositions) || // intersectEnd\r\n        (checkPosition(startPosition, [DocumentPosition.Preceding]) && // Contains\r\n            checkPosition(endPosition, [DocumentPosition.Following]) &&\r\n            !checkPosition(endPosition, [DocumentPosition.ContainedBy]))\r\n    );\r\n}\r\n\r\nfunction checkPosition(position: DocumentPosition, targets: DocumentPosition[]): boolean {\r\n    return targets.some(target =>\r\n        target == DocumentPosition.Same\r\n            ? position == DocumentPosition.Same\r\n            : (position & target) == target\r\n    );\r\n}\r\n","import { getComputedStyle } from './getComputedStyles';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\nconst CRLF = /^[\\r\\n]+$/gm;\r\n\r\n/**\r\n * Skip a node when any of following conditions are true\r\n * - it is neither Element nor Text\r\n * - it is a text node but is empty\r\n * - it is a text node but contains just CRLF (noisy text node that often comes in-between elements)\r\n * - has a display:none\r\n */\r\nexport default function shouldSkipNode(node: Node): boolean {\r\n    if (node.nodeType == NodeType.Text) {\r\n        return !node.nodeValue || node.textContent == '' || CRLF.test(node.nodeValue);\r\n    } else if (node.nodeType == NodeType.Element) {\r\n        return getComputedStyle(node, 'display') == 'none';\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n","import isNodeAfter from './isNodeAfter';\r\n\r\n/**\r\n * Split parent node of the given node before/after the given node.\r\n * When a parent node contains [A,B,C] and pass B as the given node,\r\n * If split before, the new nodes will be [A][B,C] and returns [A];\r\n * otherwise, it will be [A,B][C] and returns [C].\r\n * @param node The node to split before/after\r\n * @param splitBefore Whether split before or after\r\n * @param removeEmptyNewNode If the new node is empty (even then only child is space or ZER_WIDTH_SPACE),\r\n * we remove it. @default false\r\n * @returns The new parent node\r\n */\r\nexport default function splitParentNode(node: Node, splitBefore: boolean): Node {\r\n    if (!node || !node.parentNode) {\r\n        return null;\r\n    }\r\n\r\n    let parentNode = node.parentNode;\r\n    let newParent = parentNode.cloneNode(false /*deep*/) as HTMLElement;\r\n    newParent.removeAttribute('id');\r\n    if (splitBefore) {\r\n        while (parentNode.firstChild && parentNode.firstChild != node) {\r\n            newParent.appendChild(parentNode.firstChild);\r\n        }\r\n    } else {\r\n        while (node.nextSibling) {\r\n            newParent.appendChild(node.nextSibling);\r\n        }\r\n    }\r\n\r\n    // When the only child of new parent is ZERO_WIDTH_SPACE, we can still prevent keeping it by set removeEmptyNewNode to true\r\n    if (newParent.firstChild && newParent.innerHTML != '') {\r\n        parentNode.parentNode.insertBefore(\r\n            newParent,\r\n            splitBefore ? parentNode : parentNode.nextSibling\r\n        );\r\n    } else {\r\n        newParent = null;\r\n    }\r\n\r\n    return newParent;\r\n}\r\n\r\n/**\r\n * Split parent node by a balanced node range\r\n * @param nodes The nodes to split from. If only one node is passed, split it from all its siblings.\r\n * If two or nodes are passed, will split before the first one and after the last one, all other nodes will be ignored\r\n * @returns The parent node of the given node range if the given nodes are balanced, otherwise null\r\n */\r\nexport function splitBalancedNodeRange(nodes: Node | Node[]): HTMLElement {\r\n    let start = nodes instanceof Array ? nodes[0] : nodes;\r\n    let end = nodes instanceof Array ? nodes[nodes.length - 1] : nodes;\r\n    let parentNode = start && end && start.parentNode == end.parentNode ? start.parentNode : null;\r\n    if (parentNode) {\r\n        if (isNodeAfter(start, end)) {\r\n            let temp = end;\r\n            end = start;\r\n            start = temp;\r\n        }\r\n        splitParentNode(start, true /*splitBefore*/);\r\n        splitParentNode(end, false /*splitBefore*/);\r\n    }\r\n\r\n    return parentNode as HTMLElement;\r\n}\r\n","/**\r\n * Removes the node and keep all children in place, return the parentNode where the children are attached\r\n * @param node the node to remove\r\n */\r\nexport default function unwrap(node: Node): Node {\r\n    // Unwrap requires a parentNode\r\n    let parentNode = node ? node.parentNode : null;\r\n    if (!parentNode) {\r\n        return null;\r\n    }\r\n\r\n    while (node.firstChild) {\r\n        parentNode.insertBefore(node.firstChild, node);\r\n    }\r\n\r\n    parentNode.removeChild(node);\r\n    return parentNode;\r\n}\r\n","import fromHtml from './fromHtml';\r\n\r\n/**\r\n * Wrap all the node with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML tag name\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap<T extends keyof HTMLElementTagNameMap>(\r\n    nodes: Node | Node[],\r\n    wrapper?: T\r\n): HTMLElementTagNameMap[T];\r\n\r\n/**\r\n * Wrap all the node with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML string, default value is DIV\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap(nodes: Node | Node[], wrapper?: string): HTMLElement;\r\n\r\n/**\r\n * Wrap all the node with html and return the wrapped node, and put the wrapper node under the parent of the first node\r\n * @param nodes The node or node array to wrap\r\n * @param wrapper The wrapper HTML element, default value is a new DIV element\r\n * @returns The wrapper element\r\n */\r\nexport default function wrap(nodes: Node | Node[], wrapper?: HTMLElement): HTMLElement;\r\n\r\nexport default function wrap(nodes: Node | Node[], wrapper?: string | HTMLElement): HTMLElement {\r\n    nodes = !nodes ? [] : nodes instanceof Node ? [nodes] : nodes;\r\n    if (nodes.length == 0 || !nodes[0]) {\r\n        return null;\r\n    }\r\n\r\n    if (!(wrapper instanceof Element)) {\r\n        let document = nodes[0].ownerDocument;\r\n        wrapper = wrapper || 'div';\r\n        wrapper = /^\\w+$/.test(wrapper)\r\n            ? document.createElement(wrapper)\r\n            : (fromHtml(wrapper, document)[0] as HTMLElement);\r\n    }\r\n\r\n    let parentNode = nodes[0].parentNode;\r\n\r\n    if (parentNode) {\r\n        parentNode.insertBefore(wrapper, nodes[0]);\r\n    }\r\n\r\n    for (let node of nodes) {\r\n        wrapper.appendChild(node);\r\n    }\r\n\r\n    return wrapper;\r\n}\r\n","import ContentEditFeatures, { getDefaultContentEditFeatures } from './ContentEditFeatures';\r\nimport { AutoLink, UnlinkWhenBackspaceAfterLink } from './features/autoLinkFeatures';\r\nimport { DefaultShortcut } from './features/shortcutFeatures';\r\nimport { Editor, EditorPlugin, GenericContentEditFeature } from 'roosterjs-editor-core';\r\nimport { InsertLineBeforeStructuredNodeFeature } from './features/insertLineBeforeStructuredNodeFeature';\r\nimport { PluginEvent } from 'roosterjs-editor-types';\r\nimport { TabInTable, UpDownInTable } from './features/tableFeatures';\r\n\r\nimport {\r\n    AutoBullet,\r\n    IndentWhenTab,\r\n    OutdentWhenShiftTab,\r\n    MergeInNewLine,\r\n    OutdentWhenBackOn1stEmptyLine,\r\n    OutdentWhenEnterOnEmptyLine,\r\n    getSmartOrderedList,\r\n} from './features/listFeatures';\r\nimport {\r\n    UnquoteWhenBackOnEmpty1stLine,\r\n    UnquoteWhenEnterOnEmptyLine,\r\n} from './features/quoteFeatures';\r\n\r\n/**\r\n * An editor plugin to handle content edit event.\r\n * The following cases are included:\r\n * 1. Auto increase/decrease indentation on Tab, Shift+tab\r\n * 2. Enter, Backspace on empty list item\r\n * 3. Enter, Backspace on empty blockquote line\r\n * 4. Auto bullet/numbering\r\n * 5. Auto link\r\n * 6. Tab in table\r\n * 7. Up/Down in table\r\n * 8. Manage list style\r\n */\r\nexport default class ContentEdit implements EditorPlugin {\r\n    private editor: Editor;\r\n\r\n    /**\r\n     * Create instance of ContentEdit plugin\r\n     * @param features An optional feature set to determine which features the plugin should provide\r\n     */\r\n    constructor(private featureSet?: ContentEditFeatures) {}\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'ContentEdit';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin\r\n     * @param editor The editor instance\r\n     */\r\n    public initialize(editor: Editor): void {\r\n        this.editor = editor;\r\n        this.getFilteredFeatures().forEach(feature => this.editor.addContentEditFeature(feature));\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    public dispose(): void {\r\n        this.editor = null;\r\n    }\r\n\r\n    private getFilteredFeatures(): GenericContentEditFeature<PluginEvent>[] {\r\n        let featureSet = this.featureSet || getDefaultContentEditFeatures();\r\n        let allFeatures: {\r\n            [key in keyof Partial<ContentEditFeatures>]: GenericContentEditFeature<PluginEvent>\r\n        } = {\r\n            indentWhenTab: IndentWhenTab,\r\n            outdentWhenShiftTab: OutdentWhenShiftTab,\r\n            outdentWhenBackspaceOnEmptyFirstLine: OutdentWhenBackOn1stEmptyLine,\r\n            outdentWhenEnterOnEmptyLine: OutdentWhenEnterOnEmptyLine,\r\n            mergeInNewLineWhenBackspaceOnFirstChar: MergeInNewLine,\r\n            unquoteWhenBackspaceOnEmptyFirstLine: UnquoteWhenBackOnEmpty1stLine,\r\n            unquoteWhenEnterOnEmptyLine: UnquoteWhenEnterOnEmptyLine,\r\n            tabInTable: TabInTable,\r\n            upDownInTable: UpDownInTable,\r\n            insertLineBeforeStructuredNodeFeature: InsertLineBeforeStructuredNodeFeature,\r\n            autoBullet: AutoBullet,\r\n            autoLink: AutoLink,\r\n            unlinkWhenBackspaceAfterLink: UnlinkWhenBackspaceAfterLink,\r\n            defaultShortcut: DefaultShortcut,\r\n            smartOrderedList: getSmartOrderedList(featureSet.smartOrderedListStyles),\r\n        };\r\n        let keys = Object.keys(allFeatures) as (keyof ContentEditFeatures)[];\r\n        return keys.filter(key => featureSet[key]).map(key => allFeatures[key]);\r\n    }\r\n}\r\n","import { Browser } from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Feature set for ContentEdit plugin.\r\n * Call getDefaultContentEditFeatures() to get default feature set.\r\n */\r\nexport default interface ContentEditFeatures {\r\n    /**\r\n     * When press Tab in a list, indent current list item\r\n     * @default true\r\n     */\r\n    indentWhenTab: boolean;\r\n\r\n    /**\r\n     * When press Shift+Tab in a list, outdent current list item\r\n     * @default true\r\n     */\r\n    outdentWhenShiftTab: boolean;\r\n\r\n    /**\r\n     * When press BaskSpace on empty line which is the first item of a list, outdent current list item\r\n     * @default true\r\n     */\r\n    outdentWhenBackspaceOnEmptyFirstLine: boolean;\r\n\r\n    /**\r\n     * When press Enter on empty line in a list, outdent current list item\r\n     * @default true for IE, false for other browsers since they have already had the behavior\r\n     */\r\n    outdentWhenEnterOnEmptyLine: boolean;\r\n\r\n    /**\r\n     * When press Backspace on first char in a list, make current item a new line of previous list item\r\n     * @default false\r\n     */\r\n    mergeInNewLineWhenBackspaceOnFirstChar: boolean;\r\n\r\n    /**\r\n     * When press BAckspace on empty line which is the first line of a blockquote, unquote current line\r\n     * @default true\r\n     */\r\n    unquoteWhenBackspaceOnEmptyFirstLine: boolean;\r\n\r\n    /**\r\n     * When press Enter on empty line in a blockquote, unquote current line\r\n     * @default true\r\n     */\r\n    unquoteWhenEnterOnEmptyLine: boolean;\r\n\r\n    /**\r\n     * When press space after an asterik or number in an empty line, toggle bullet/numbering\r\n     * @default true\r\n     */\r\n    autoBullet: boolean;\r\n\r\n    /**\r\n     * When press TAB or SHIFT+TAB key in table cell, jump to next/previous table cell\r\n     * @default true\r\n     */\r\n    tabInTable: boolean;\r\n\r\n    /**\r\n     * When press Up or Down in table cell, jump to the table cell above/below\r\n     * @default true for Chrome and safari, false for other browsers since they arleady have correct behavior\r\n     */\r\n    upDownInTable: boolean;\r\n\r\n    /**\r\n     * When press Enter at the beginning of first structured element (table, list) and there isn't line before the position\r\n     * we create a new line before so that user got a chance to enter content before the table or list\r\n     * @default false\r\n     */\r\n    insertLineBeforeStructuredNodeFeature: boolean;\r\n\r\n    /**\r\n     * When press Space or Enter after a hyperlink-like string, convert the string to a hyperlink\r\n     * @default true\r\n     */\r\n    autoLink: boolean;\r\n\r\n    /**\r\n     * Respond to default common keyboard short, i.e. Ctrl+B, Ctrl+I, Ctrl+U, Ctrl+Z, Ctrl+Y\r\n     * @default true\r\n     */\r\n    defaultShortcut: boolean;\r\n\r\n    /**\r\n     * Unlink when backspace right after a hyperlink\r\n     * @default false\r\n     */\r\n    unlinkWhenBackspaceAfterLink: boolean;\r\n\r\n    /**\r\n     * When generate ordered list, the list bullet will variare according its nesting level, in a loop of '1', 'a', 'i'\r\n     * @default false\r\n     */\r\n    smartOrderedList: boolean;\r\n\r\n    /**\r\n     * A style list for smart ordered list. This value is only effective when smartOrderedList is true\r\n     * @default ['lower-alpha', 'lower-roman', 'decimal']\r\n     */\r\n    smartOrderedListStyles: string[];\r\n}\r\n\r\n/**\r\n * Get default feature set of ContentEdit plugin\r\n */\r\nexport function getDefaultContentEditFeatures(): ContentEditFeatures {\r\n    return {\r\n        autoLink: true,\r\n        indentWhenTab: true,\r\n        outdentWhenShiftTab: true,\r\n        outdentWhenBackspaceOnEmptyFirstLine: true,\r\n        outdentWhenEnterOnEmptyLine: Browser.isIE,\r\n        mergeInNewLineWhenBackspaceOnFirstChar: false,\r\n        unquoteWhenBackspaceOnEmptyFirstLine: true,\r\n        unquoteWhenEnterOnEmptyLine: true,\r\n        autoBullet: true,\r\n        tabInTable: true,\r\n        upDownInTable: Browser.isChrome || Browser.isSafari,\r\n        insertLineBeforeStructuredNodeFeature: false,\r\n        defaultShortcut: true,\r\n        unlinkWhenBackspaceAfterLink: false,\r\n        smartOrderedList: false,\r\n        smartOrderedListStyles: ['lower-alpha', 'lower-roman', 'decimal'],\r\n    };\r\n}\r\n","import { LinkInlineElement, matchLink } from 'roosterjs-editor-dom';\r\nimport { removeLink, replaceWithNode } from 'roosterjs-editor-api';\r\nimport {\r\n    ChangeSource,\r\n    LinkData,\r\n    PluginEvent,\r\n    PluginEventType,\r\n    PluginKeyboardEvent,\r\n    ClipboardData,\r\n} from 'roosterjs-editor-types';\r\nimport {\r\n    Editor,\r\n    cacheGetEventData,\r\n    cacheGetContentSearcher,\r\n    clearContentSearcherCache,\r\n    GenericContentEditFeature,\r\n    Keys,\r\n} from 'roosterjs-editor-core';\r\n\r\n/**\r\n * When user type, they may end a link with a puncatuation, i.e. www.bing.com;\r\n * we need to trim off the trailing puncatuation before turning it to link match\r\n */\r\nconst TRAILING_PUNCTUATION_REGEX = /[.+=\\s:;\"',>]+$/i;\r\nconst MINIMUM_LENGTH = 5;\r\n\r\n/**\r\n * AutoLink edit feature, provides the ability to automatically convert text user typed or pasted\r\n * in hyperlink format into a real hyperlink\r\n */\r\nexport const AutoLink: GenericContentEditFeature<PluginEvent> = {\r\n    keys: [Keys.ENTER, Keys.SPACE, Keys.CONTENTCHANGED],\r\n    shouldHandleEvent: cacheGetLinkData,\r\n    handleEvent: autoLink,\r\n};\r\n\r\n/**\r\n * UnlinkWhenBackspaceAfterLink edit feature, provides the ability to convert a hyperlink back into text\r\n * if user presses BACKSPACE right after a hyperlink\r\n */\r\nexport const UnlinkWhenBackspaceAfterLink: GenericContentEditFeature<PluginKeyboardEvent> = {\r\n    keys: [Keys.BACKSPACE],\r\n    shouldHandleEvent: hasLinkBeforeCursor,\r\n    handleEvent: (event, editor) => {\r\n        event.rawEvent.preventDefault();\r\n        removeLink(editor);\r\n    },\r\n};\r\n\r\nfunction cacheGetLinkData(event: PluginEvent, editor: Editor): LinkData {\r\n    return event.eventType == PluginEventType.KeyDown ||\r\n        (event.eventType == PluginEventType.ContentChanged && event.source == ChangeSource.Paste)\r\n        ? cacheGetEventData(event, 'LINK_DATA', () => {\r\n              // First try to match link from the whole paste string from the plain text in clipboard.\r\n              // This helps when we paste a link next to some existing character, and the text we got\r\n              // from clipboard will only contain what we pasted, any existing characters will not\r\n              // be included.\r\n              let clipboardData =\r\n                  event.eventType == PluginEventType.ContentChanged &&\r\n                  event.source == ChangeSource.Paste &&\r\n                  (event.data as ClipboardData);\r\n              let link = matchLink((clipboardData.text || '').trim());\r\n              let searcher = cacheGetContentSearcher(event, editor);\r\n\r\n              // In case the matched link is already inside a <A> tag, we do a range search.\r\n              // getRangeFromText will return null if the given text is already in a LinkInlineElement\r\n              if (link && searcher.getRangeFromText(link.originalUrl, false /*exactMatch*/)) {\r\n                  return link;\r\n              }\r\n\r\n              let word = searcher && searcher.getWordBefore();\r\n              if (word && word.length > MINIMUM_LENGTH) {\r\n                  // Check for trailing punctuation\r\n                  let trailingPunctuations = word.match(TRAILING_PUNCTUATION_REGEX);\r\n                  let trailingPunctuation = (trailingPunctuations || [])[0] || '';\r\n                  let candidate = word.substring(0, word.length - trailingPunctuation.length);\r\n\r\n                  // Do special handling for ')', '}', ']'\r\n                  ['()', '{}', '[]'].forEach(str => {\r\n                      if (\r\n                          candidate[candidate.length - 1] == str[1] &&\r\n                          candidate.indexOf(str[0]) < 0\r\n                      ) {\r\n                          candidate = candidate.substr(0, candidate.length - 1);\r\n                      }\r\n                  });\r\n\r\n                  // Match and replace in editor\r\n                  return matchLink(candidate);\r\n              }\r\n              return null;\r\n          })\r\n        : null;\r\n}\r\n\r\nfunction hasLinkBeforeCursor(event: PluginKeyboardEvent, editor: Editor): boolean {\r\n    let contentSearcher = cacheGetContentSearcher(event, editor);\r\n    let inline = contentSearcher.getInlineElementBefore();\r\n    return inline instanceof LinkInlineElement;\r\n}\r\n\r\nfunction autoLink(event: PluginEvent, editor: Editor) {\r\n    let anchor = editor.getDocument().createElement('a');\r\n    let linkData = cacheGetLinkData(event, editor);\r\n\r\n    // Need to get searcher before we enter the async callback since the callback can happen when cursor is moved to next line\r\n    // and at that time a new searcher won't be able to find the link text to replace\r\n    let searcher = editor.getContentSearcherOfCursor();\r\n    anchor.textContent = linkData.originalUrl;\r\n    anchor.href = linkData.normalizedUrl;\r\n\r\n    editor.runAsync(() => {\r\n        editor.performAutoComplete(() => {\r\n            replaceWithNode(editor, linkData.originalUrl, anchor, false /* exactMatch */, searcher);\r\n\r\n            // The content at cursor has changed. Should also clear the cursor data cache\r\n            clearContentSearcherCache(event);\r\n            return anchor;\r\n        }, ChangeSource.AutoLink);\r\n    });\r\n}\r\n","import { cacheGetEventData, ContentEditFeature, Editor, Keys } from 'roosterjs-editor-core';\r\nimport { PluginKeyboardEvent, PositionType } from 'roosterjs-editor-types';\r\nimport {\r\n    Browser,\r\n    fromHtml,\r\n    isPositionAtBeginningOf,\r\n    Position,\r\n    getTagOfNode,\r\n} from 'roosterjs-editor-dom';\r\n\r\n// Edge can sometimes lose current format when Enter to new line.\r\n// So here we add an extra SPAN for Edge to workaround this bug\r\nconst NEWLINE_HTML = Browser.isEdge ? '<div><span><br></span></div>' : '<div><br></div>';\r\nconst CHILD_PARENT_TAG_MAP: { [childTag: string]: string } = {\r\n    TD: 'TABLE',\r\n    TH: 'TABLE',\r\n    LI: 'OL,UL',\r\n};\r\nconst CHILD_SELECTOR = Object.keys(CHILD_PARENT_TAG_MAP).join(',');\r\n\r\n/**\r\n * InsertLineBeforeStructuredNode edit feature, provides the ability to insert an empty line before\r\n * a structured element (bullet/numbering list, blockquote, table) if the element is at beginning of\r\n * document\r\n */\r\nexport const InsertLineBeforeStructuredNodeFeature: ContentEditFeature = {\r\n    keys: [Keys.ENTER],\r\n    shouldHandleEvent: cacheGetStructuredElement,\r\n    handleEvent: (event, editor) => {\r\n        let element = cacheGetStructuredElement(event, editor);\r\n        let div = fromHtml(NEWLINE_HTML, editor.getDocument())[0] as HTMLElement;\r\n        editor.addUndoSnapshot(() => {\r\n            element.parentNode.insertBefore(div, element);\r\n            // Select the new line when we are in table. This is the same behavior with Word\r\n            if (getTagOfNode(element) == 'TABLE') {\r\n                editor.select(new Position(div, PositionType.Begin).normalize());\r\n            }\r\n        });\r\n        event.rawEvent.preventDefault();\r\n    },\r\n};\r\n\r\nfunction cacheGetStructuredElement(event: PluginKeyboardEvent, editor: Editor) {\r\n    return cacheGetEventData(event, 'FIRST_STRUCTURE', () => {\r\n        // Provide a chance to keep browser default behavior by pressing SHIFT\r\n        let element = event.rawEvent.shiftKey ? null : editor.getElementAtCursor(CHILD_SELECTOR);\r\n\r\n        if (element) {\r\n            let range = editor.getSelectionRange();\r\n            if (\r\n                range &&\r\n                range.collapsed &&\r\n                isPositionAtBeginningOf(Position.getStart(range), element) &&\r\n                !editor.getBodyTraverser(element).getPreviousBlockElement()\r\n            ) {\r\n                return editor.getElementAtCursor(CHILD_PARENT_TAG_MAP[getTagOfNode(element)]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    });\r\n}\r\n","import { setIndentation, toggleBullet, toggleNumbering } from 'roosterjs-editor-api';\r\nimport {\r\n    cacheGetContentSearcher,\r\n    cacheGetElementAtCursor,\r\n    Editor,\r\n    ContentEditFeature,\r\n    GenericContentEditFeature,\r\n    Keys,\r\n} from 'roosterjs-editor-core';\r\nimport {\r\n    ContentChangedEvent,\r\n    Indentation,\r\n    PluginKeyboardEvent,\r\n    PositionType,\r\n} from 'roosterjs-editor-types';\r\nimport {\r\n    Browser,\r\n    Position,\r\n    getTagOfNode,\r\n    isNodeEmpty,\r\n    isPositionAtBeginningOf,\r\n} from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * IndentWhenTab edit feature, provides the ability to indent current list when user press TAB\r\n */\r\nexport const IndentWhenTab: ContentEditFeature = {\r\n    keys: [Keys.TAB],\r\n    shouldHandleEvent: (event, editor) =>\r\n        !event.rawEvent.shiftKey && cacheGetListElement(event, editor),\r\n    handleEvent: (event, editor) => {\r\n        setIndentation(editor, Indentation.Increase);\r\n        event.rawEvent.preventDefault();\r\n    },\r\n};\r\n\r\n/**\r\n * OutdentWhenShiftTab edit feature, provides the ability to outdent current list when user press Shift+TAB\r\n */\r\nexport const OutdentWhenShiftTab: ContentEditFeature = {\r\n    keys: [Keys.TAB],\r\n    shouldHandleEvent: (event, editor) =>\r\n        event.rawEvent.shiftKey && cacheGetListElement(event, editor),\r\n    handleEvent: (event, editor) => {\r\n        setIndentation(editor, Indentation.Decrease);\r\n        event.rawEvent.preventDefault();\r\n    },\r\n};\r\n\r\n/**\r\n * MergeInNewLine edit feature, provides the ability to merge current line into a new line when user press\r\n * BACKSPACE at beginning of a list item\r\n */\r\nexport const MergeInNewLine: ContentEditFeature = {\r\n    keys: [Keys.BACKSPACE],\r\n    shouldHandleEvent: (event, editor) => {\r\n        let li = cacheGetElementAtCursor(editor, event, 'LI');\r\n        let range = editor.getSelectionRange();\r\n        return li && range && isPositionAtBeginningOf(Position.getStart(range), li);\r\n    },\r\n    handleEvent: (event, editor) => {\r\n        let li = cacheGetElementAtCursor(editor, event, 'LI');\r\n        if (li.previousSibling) {\r\n            editor.runAsync(() => {\r\n                let br = editor.getDocument().createElement('BR');\r\n                editor.insertNode(br);\r\n                editor.select(br, PositionType.After);\r\n            });\r\n        } else {\r\n            toggleListAndPreventDefault(event, editor);\r\n        }\r\n    },\r\n};\r\n\r\n/**\r\n * OutdentWhenBackOn1stEmptyLine edit feature, provides the ability to outdent current item if user press\r\n * BACKSPACE at the first and empty line of a list\r\n */\r\nexport const OutdentWhenBackOn1stEmptyLine: ContentEditFeature = {\r\n    keys: [Keys.BACKSPACE],\r\n    shouldHandleEvent: (event, editor) => {\r\n        let li = cacheGetElementAtCursor(editor, event, 'LI');\r\n        return li && isNodeEmpty(li) && !li.previousSibling;\r\n    },\r\n    handleEvent: toggleListAndPreventDefault,\r\n};\r\n\r\n/**\r\n * OutdentWhenEnterOnEmptyLine edit feature, provides the ability to outdent current item if user press\r\n * ENTER at the beginning of an empty line of a list\r\n */\r\nexport const OutdentWhenEnterOnEmptyLine: ContentEditFeature = {\r\n    keys: [Keys.ENTER],\r\n    shouldHandleEvent: (event, editor) => {\r\n        let li = cacheGetElementAtCursor(editor, event, 'LI');\r\n        return !event.rawEvent.shiftKey && li && isNodeEmpty(li);\r\n    },\r\n    handleEvent: (event, editor) => {\r\n        editor.performAutoComplete(() => toggleListAndPreventDefault(event, editor));\r\n    },\r\n};\r\n\r\n/**\r\n * AutoBullet edit feature, provides the ablility to automatically convert current line into a list.\r\n * When user input \"1. \", convert into a numbering list\r\n * When user input \"- \" or \"* \", convert into a bullet list\r\n */\r\nexport const AutoBullet: ContentEditFeature = {\r\n    keys: [Keys.SPACE],\r\n    shouldHandleEvent: (event, editor) => {\r\n        if (!cacheGetListElement(event, editor)) {\r\n            let searcher = cacheGetContentSearcher(event, editor);\r\n            let textBeforeCursor = searcher.getSubStringBefore(3);\r\n\r\n            // Auto list is triggered if:\r\n            // 1. Text before cursor exactly mathces '*', '-' or '1.'\r\n            // 2. There's no non-text inline entities before cursor\r\n            return (\r\n                ['*', '-', '1.'].indexOf(textBeforeCursor) >= 0 &&\r\n                !searcher.getNearestNonTextInlineElement()\r\n            );\r\n        }\r\n        return false;\r\n    },\r\n    handleEvent: (event, editor) => {\r\n        editor.runAsync(() => {\r\n            editor.performAutoComplete(() => {\r\n                let searcher = editor.getContentSearcherOfCursor();\r\n                let textBeforeCursor = searcher.getSubStringBefore(3);\r\n                let rangeToDelete = searcher.getRangeFromText(\r\n                    textBeforeCursor,\r\n                    true /*exactMatch*/\r\n                );\r\n\r\n                if (rangeToDelete) {\r\n                    rangeToDelete.deleteContents();\r\n                }\r\n\r\n                // If not explicitly insert br, Chrome/Safari/IE will operate on the previous line\r\n                let tempBr = editor.getDocument().createElement('BR');\r\n                if (Browser.isChrome || Browser.isSafari || Browser.isIE11OrGreater) {\r\n                    editor.insertNode(tempBr);\r\n                }\r\n\r\n                if (textBeforeCursor.indexOf('1.') == 0) {\r\n                    toggleNumbering(editor);\r\n                } else {\r\n                    toggleBullet(editor);\r\n                }\r\n\r\n                editor.deleteNode(tempBr);\r\n            });\r\n        });\r\n    },\r\n};\r\n\r\n/**\r\n * Get an instance of SmartOrderedList edit feature. This feature provides the ability to use different\r\n * number style for different level of numbering list.\r\n * @param styleList The list of number styles used for this feature.\r\n * See https://www.w3schools.com/cssref/pr_list-style-type.asp for more information\r\n */\r\nexport function getSmartOrderedList(\r\n    styleList: string[]\r\n): GenericContentEditFeature<ContentChangedEvent> {\r\n    return {\r\n        keys: [Keys.CONTENTCHANGED], // Triggered by ContentChangedEvent\r\n        shouldHandleEvent: (event, editor) => event.data instanceof HTMLOListElement,\r\n        handleEvent: (event, editor) => {\r\n            let ol = event.data as HTMLOListElement;\r\n            let parentOl = editor.getElementAtCursor('OL', ol.parentNode) as HTMLOListElement;\r\n            if (parentOl) {\r\n                // The style list must has at least one value. If no value is passed in, fallback to decimal\r\n                let styles = styleList && styleList.length > 0 ? styleList : ['decimal'];\r\n                ol.style.listStyle =\r\n                    styles[(styles.indexOf(parentOl.style.listStyle) + 1) % styles.length];\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nfunction toggleListAndPreventDefault(event: PluginKeyboardEvent, editor: Editor) {\r\n    let listInfo = cacheGetListElement(event, editor);\r\n    if (listInfo) {\r\n        let listElement = listInfo[0];\r\n        let tag = getTagOfNode(listElement);\r\n        if (tag == 'UL') {\r\n            toggleBullet(editor);\r\n        } else if (tag == 'OL') {\r\n            toggleNumbering(editor);\r\n        }\r\n        editor.focus();\r\n        event.rawEvent.preventDefault();\r\n    }\r\n}\r\n\r\nfunction cacheGetListElement(event: PluginKeyboardEvent, editor: Editor) {\r\n    let li = cacheGetElementAtCursor(editor, event, 'LI,TABLE');\r\n    let listElement = li && getTagOfNode(li) == 'LI' && editor.getElementAtCursor('UL,OL', li);\r\n    return listElement ? [listElement, li] : null;\r\n}\r\n","import { cacheGetEventData, ContentEditFeature, Editor, Keys } from 'roosterjs-editor-core';\r\nimport { PluginKeyboardEvent, PositionType } from 'roosterjs-editor-types';\r\nimport {\r\n    getTagOfNode,\r\n    isNodeEmpty,\r\n    splitBalancedNodeRange,\r\n    unwrap,\r\n    wrap,\r\n} from 'roosterjs-editor-dom';\r\n\r\nconst QUOTE_TAG = 'BLOCKQUOTE';\r\nconst STRUCTURED_TAGS = [QUOTE_TAG, 'LI', 'TD', 'TH'].join(',');\r\n\r\n/**\r\n * UnquoteWhenBackOnEmpty1stLine edit feature, provides the ability to Unquote current line when\r\n * user press BACKSPACE on first and empty line of a BLOCKQUOTE\r\n */\r\nexport const UnquoteWhenBackOnEmpty1stLine: ContentEditFeature = {\r\n    keys: [Keys.BACKSPACE],\r\n    shouldHandleEvent: (event, editor) => {\r\n        let childOfQuote = cacheGetQuoteChild(event, editor);\r\n        return childOfQuote && isNodeEmpty(childOfQuote) && !childOfQuote.previousSibling;\r\n    },\r\n    handleEvent: splitQuote,\r\n};\r\n\r\n/**\r\n * UnquoteWhenEnterOnEmptyLine edit feature, provides the ability to Unquote current line when\r\n * user press ENTER on an empty line of a BLOCKQUOTE\r\n */\r\nexport const UnquoteWhenEnterOnEmptyLine: ContentEditFeature = {\r\n    keys: [Keys.ENTER],\r\n    shouldHandleEvent: (event, editor) => {\r\n        let childOfQuote = cacheGetQuoteChild(event, editor);\r\n        let shift = event.rawEvent.shiftKey;\r\n        return !shift && childOfQuote && isNodeEmpty(childOfQuote);\r\n    },\r\n    handleEvent: (event, editor) => editor.performAutoComplete(() => splitQuote(event, editor)),\r\n};\r\n\r\nfunction cacheGetQuoteChild(event: PluginKeyboardEvent, editor: Editor): Node {\r\n    return cacheGetEventData(event, 'QUOTE_CHILD', () => {\r\n        let quote = editor.getElementAtCursor(STRUCTURED_TAGS);\r\n        if (quote && getTagOfNode(quote) == QUOTE_TAG) {\r\n            let pos = editor.getFocusedPosition();\r\n            let block = pos && editor.getBlockElementAtNode(pos.normalize().node);\r\n            if (block) {\r\n                let node =\r\n                    block.getStartNode() == quote\r\n                        ? block.getStartNode()\r\n                        : block.collapseToSingleElement();\r\n                return isNodeEmpty(node) ? node : null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    });\r\n}\r\n\r\nfunction splitQuote(event: PluginKeyboardEvent, editor: Editor) {\r\n    editor.addUndoSnapshot(() => {\r\n        let childOfQuote = cacheGetQuoteChild(event, editor);\r\n        let parent: Node;\r\n        if (getTagOfNode(childOfQuote) == QUOTE_TAG) {\r\n            childOfQuote = wrap([].slice.call(childOfQuote.childNodes));\r\n        }\r\n        parent = splitBalancedNodeRange(childOfQuote);\r\n        unwrap(parent);\r\n        editor.select(childOfQuote, PositionType.Begin);\r\n    });\r\n    event.rawEvent.preventDefault();\r\n}\r\n","import { Browser } from 'roosterjs-editor-dom';\r\nimport { cacheGetEventData, ContentEditFeature, Editor, Keys } from 'roosterjs-editor-core';\r\nimport { FontSizeChange, PluginEventType, PluginKeyboardEvent } from 'roosterjs-editor-types';\r\nimport {\r\n    changeFontSize,\r\n    toggleBold,\r\n    toggleItalic,\r\n    toggleUnderline,\r\n    toggleBullet,\r\n    toggleNumbering,\r\n} from 'roosterjs-editor-api';\r\n\r\ninterface ShortcutCommand {\r\n    winKey: number;\r\n    macKey: number;\r\n    action: (editor: Editor) => any;\r\n}\r\n\r\nfunction createCommand(winKey: number, macKey: number, action: (editor: Editor) => any) {\r\n    return {\r\n        winKey,\r\n        macKey,\r\n        action,\r\n    };\r\n}\r\n\r\nconst commands: ShortcutCommand[] = [\r\n    createCommand(Keys.Ctrl | Keys.B, Keys.Meta | Keys.B, toggleBold),\r\n    createCommand(Keys.Ctrl | Keys.I, Keys.Meta | Keys.I, toggleItalic),\r\n    createCommand(Keys.Ctrl | Keys.U, Keys.Meta | Keys.U, toggleUnderline),\r\n    createCommand(Keys.Ctrl | Keys.Z, Keys.Meta | Keys.Z, editor => editor.undo()),\r\n    createCommand(Keys.Ctrl | Keys.Y, Keys.Meta | Keys.Shift | Keys.Z, editor => editor.redo()),\r\n    createCommand(Keys.Ctrl | Keys.PERIOD, Keys.Meta | Keys.PERIOD, toggleBullet),\r\n    createCommand(Keys.Ctrl | Keys.FORWARDSLASH, Keys.Meta | Keys.FORWARDSLASH, toggleNumbering),\r\n    createCommand(\r\n        Keys.Ctrl | Keys.Shift | Keys.PERIOD,\r\n        Keys.Meta | Keys.Shift | Keys.PERIOD,\r\n        editor => changeFontSize(editor, FontSizeChange.Increase)\r\n    ),\r\n    createCommand(\r\n        Keys.Ctrl | Keys.Shift | Keys.COMMA,\r\n        Keys.Meta | Keys.Shift | Keys.COMMA,\r\n        editor => changeFontSize(editor, FontSizeChange.Decrease)\r\n    ),\r\n];\r\n\r\n/**\r\n * DefaultShortcut edit feature, provides shortcuts for the following features:\r\n * Ctrl/Meta+B: toggle bold style\r\n * Ctrl/Meta+I: toggle italic style\r\n * Ctrl/Meta+U: toggle underline style\r\n * Ctrl/Meta+Z: undo\r\n * Ctrl+Y/Meta+Shift+Z: redo\r\n * Ctrl/Meta+PERIOD: toggle bullet list\r\n * Ctrl/Meta+/: toggle numbering list\r\n * Ctrl/Meta+Shift+>: increase font size\r\n * Ctrl/Meta+Shift+<: decrease font size\r\n */\r\nexport const DefaultShortcut: ContentEditFeature = {\r\n    allowFunctionKeys: true,\r\n    keys: [Keys.B, Keys.I, Keys.U, Keys.Y, Keys.Z, Keys.COMMA, Keys.PERIOD, Keys.FORWARDSLASH],\r\n    shouldHandleEvent: cacheGetCommand,\r\n    handleEvent: (event, editor) => {\r\n        let command = cacheGetCommand(event);\r\n        if (command) {\r\n            command.action(editor);\r\n            event.rawEvent.preventDefault();\r\n            event.rawEvent.stopPropagation();\r\n        }\r\n    },\r\n};\r\n\r\nfunction cacheGetCommand(event: PluginKeyboardEvent) {\r\n    return cacheGetEventData(event, 'DEFAULT_SHORT_COMMAND', () => {\r\n        let e = event.rawEvent;\r\n        let key =\r\n            // Need to check ALT key to be false since in some language (e.g. Polski) uses AltGr to input some special charactors\r\n            // In that case, ctrlKey and altKey are both true in Edge, but we should not trigger any shortcut function here\r\n            event.eventType == PluginEventType.KeyDown && !e.altKey\r\n                ? e.which |\r\n                  (e.metaKey && Keys.Meta) |\r\n                  (e.shiftKey && Keys.Shift) |\r\n                  (e.ctrlKey && Keys.Ctrl)\r\n                : 0;\r\n        return key && commands.filter(cmd => (Browser.isMac ? cmd.macKey : cmd.winKey) == key)[0];\r\n    });\r\n}\r\n","import { cacheGetEventData, ContentEditFeature, Editor, Keys } from 'roosterjs-editor-core';\r\nimport {\r\n    contains,\r\n    getTagOfNode,\r\n    isVoidHtmlElement,\r\n    Position,\r\n    VTable\r\n    } from 'roosterjs-editor-dom';\r\nimport { NodeType, PluginEvent, PositionType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * TabInTable edit feature, provides the ability to jump between cells when user press TAB in table\r\n */\r\nexport const TabInTable: ContentEditFeature = {\r\n    keys: [Keys.TAB],\r\n    shouldHandleEvent: cacheGetTableCell,\r\n    handleEvent: (event, editor) => {\r\n        let shift = event.rawEvent.shiftKey;\r\n        let td = cacheGetTableCell(event, editor);\r\n        for (\r\n            let vtable = new VTable(td),\r\n                step = shift ? -1 : 1,\r\n                row = vtable.row,\r\n                col = vtable.col + step;\r\n            ;\r\n            col += step\r\n        ) {\r\n            if (col < 0 || col >= vtable.cells[row].length) {\r\n                row += step;\r\n                if (row < 0 || row >= vtable.cells.length) {\r\n                    editor.select(vtable.table, shift ? PositionType.Before : PositionType.After);\r\n                    break;\r\n                }\r\n                col = shift ? vtable.cells[row].length - 1 : 0;\r\n            }\r\n            let cell = vtable.getCell(row, col);\r\n            if (cell.td) {\r\n                editor.select(cell.td, PositionType.Begin);\r\n                break;\r\n            }\r\n        }\r\n        event.rawEvent.preventDefault();\r\n    },\r\n};\r\n\r\n/**\r\n * UpDownInTable edit feature, provides the ability to jump to cell above/below when user press UP/DOWN\r\n * in table\r\n */\r\nexport const UpDownInTable: ContentEditFeature = {\r\n    keys: [Keys.UP, Keys.DOWN],\r\n    shouldHandleEvent: cacheGetTableCell,\r\n    handleEvent: (event, editor) => {\r\n        let td = cacheGetTableCell(event, editor);\r\n        let vtable = new VTable(td);\r\n        let isUp = event.rawEvent.which == Keys.UP;\r\n        let step = isUp ? -1 : 1;\r\n        let targetTd: HTMLTableCellElement = null;\r\n        let hasShiftKey = event.rawEvent.shiftKey;\r\n        let { anchorNode, anchorOffset } = editor.getSelection();\r\n\r\n        for (let row = vtable.row; row >= 0 && row < vtable.cells.length; row += step) {\r\n            let cell = vtable.getCell(row, vtable.col);\r\n            if (cell.td && cell.td != td) {\r\n                targetTd = cell.td;\r\n                break;\r\n            }\r\n        }\r\n\r\n        editor.runAsync(() => {\r\n            let newContainer = editor.getElementAtCursor();\r\n            if (\r\n                contains(vtable.table, newContainer) &&\r\n                !contains(td, newContainer, true /*treatSameNodeAsContain*/)\r\n            ) {\r\n                let newPos = targetTd\r\n                    ? new Position(targetTd, PositionType.Begin)\r\n                    : new Position(vtable.table, isUp ? PositionType.Before : PositionType.After);\r\n                if (hasShiftKey) {\r\n                    newPos =\r\n                        newPos.node.nodeType == NodeType.Element && isVoidHtmlElement(newPos.node)\r\n                            ? new Position(\r\n                                  newPos.node,\r\n                                  newPos.isAtEnd ? PositionType.After : PositionType.Before\r\n                              )\r\n                            : newPos;\r\n                    editor\r\n                        .getSelection()\r\n                        .setBaseAndExtent(anchorNode, anchorOffset, newPos.node, newPos.offset);\r\n                } else {\r\n                    editor.select(newPos);\r\n                }\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nfunction cacheGetTableCell(event: PluginEvent, editor: Editor): HTMLTableCellElement {\r\n    return cacheGetEventData(event, 'TABLECELL_FOR_TABLE_FEATURES', () => {\r\n        let pos = editor.getFocusedPosition();\r\n        let firstTd = editor.getElementAtCursor('TD,TH,LI', pos.node);\r\n        return getTagOfNode(firstTd) == 'LI' ? null : (firstTd as HTMLTableCellElement);\r\n    });\r\n}\r\n","import { cacheGetContentSearcher, Editor, EditorPlugin } from 'roosterjs-editor-core';\nimport { PluginEvent, PluginEventType, PositionType } from 'roosterjs-editor-types';\n\n/**\n * An interface to define a replacement rule for CustomReplace plugin\n */\nexport type Replacement = {\n    /**\n     * Source string to replace from\n     */\n    sourceString: string;\n\n    /**\n     * HTML string to replace to\n     */\n    replacementHTML: string;\n\n    /**\n     * Whether the matching should be case sensitive\n     */\n    matchSourceCaseSensitive: boolean;\n};\n\nconst makeReplacement = (\n    sourceString: string,\n    replacementHTML: string,\n    matchSourceCaseSensitive: boolean\n): Replacement => ({ sourceString, replacementHTML, matchSourceCaseSensitive });\n\nconst defaultReplacements: Replacement[] = [\n    makeReplacement(':)', '🙂', true),\n    makeReplacement(';)', '😉', true),\n    makeReplacement(':O', '😲', true),\n    makeReplacement(':o', '😯', true),\n    makeReplacement('<3', '❤️', true),\n];\n\n/**\n * Wrapper for CustomReplaceContentEditFeature that provides an API for updating the\n * content edit feature\n */\nexport default class CustomReplacePlugin implements EditorPlugin {\n    private longestReplacementLength: number;\n    private editor: Editor;\n    private replacements: Replacement[];\n    private replacementEndCharacters: Set<string>;\n\n    /**\n     * Create instance of CustomReplace plugin\n     * @param replacements Replacement rules. If not passed, a default replacement rule set will be applied\n     */\n    constructor(replacements: Replacement[] = defaultReplacements) {\n        this.updateReplacements(replacements);\n    }\n\n    /**\n     * Set the replacements that this plugin is looking for.\n     * @param newReplacements new set of replacements for this plugin\n     */\n    updateReplacements(newReplacements: Replacement[]) {\n        this.replacements = newReplacements;\n        this.longestReplacementLength = getLongestReplacementSourceLength(this.replacements);\n        this.replacementEndCharacters = getReplacementEndCharacters(this.replacements);\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'CustomReplace';\n    }\n\n    /**\n     * Initialize this plugin\n     * @param editor The editor instance\n     */\n    public initialize(editor: Editor): void {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    public dispose(): void {\n        this.editor = null;\n    }\n\n    public onPluginEvent(event: PluginEvent) {\n        if (this.editor.isInIME() || event.eventType != PluginEventType.Input) {\n            return;\n        }\n\n        // Exit early on input events that do not insert a replacement's final character.\n        if (event.rawEvent.data && !this.replacementEndCharacters.has(event.rawEvent.data)) {\n            return;\n        }\n\n        // Get the matching replacement\n        const range = this.editor.getSelectionRange();\n        if (range == null) {\n            return;\n        }\n        const searcher = cacheGetContentSearcher(event, this.editor);\n        const stringToSearch = searcher.getSubStringBefore(this.longestReplacementLength);\n\n        const replacement = this.getMatchingReplacement(stringToSearch);\n        if (replacement == null) {\n            return;\n        }\n\n        // Reconstruct a selection of the text on the document that matches the\n        // replacement we selected.\n        const matchingText = searcher.getSubStringBefore(replacement.sourceString.length);\n        const matchingRange = searcher.getRangeFromText(matchingText, true /* exactMatch */);\n\n        // parse the html string off the dom and inline the resulting element.\n        const parsingSpan = document.createElement('span');\n        parsingSpan.innerHTML = replacement.replacementHTML;\n        const nodeToInsert =\n            parsingSpan.childNodes.length == 1 ? parsingSpan.childNodes[0] : parsingSpan;\n\n        // Switch the node for the selection range\n        this.editor.performAutoComplete(() => {\n            matchingRange.deleteContents();\n            matchingRange.insertNode(nodeToInsert);\n            this.editor.select(nodeToInsert, PositionType.End);\n        });\n    }\n\n    private getMatchingReplacement(stringToSearch: string): Replacement | null {\n        if (stringToSearch.length == 0) {\n            return null;\n        }\n        const lowerCaseStringToSearch = stringToSearch.toLocaleLowerCase();\n        for (const replacement of this.replacements) {\n            const [sourceMatch, replacementMatch] = replacement.matchSourceCaseSensitive\n                ? [stringToSearch, replacement.sourceString]\n                : [lowerCaseStringToSearch, replacement.sourceString.toLocaleLowerCase()];\n\n            if (\n                sourceMatch.substring(sourceMatch.length - replacementMatch.length) ==\n                replacementMatch\n            ) {\n                return replacement;\n            }\n        }\n        return null;\n    }\n}\n\nfunction getLongestReplacementSourceLength(replacements: Replacement[]): number {\n    return Math.max.apply(null, replacements.map(replacement => replacement.sourceString.length));\n}\n\nfunction getReplacementEndCharacters(replacements: Replacement[]): Set<string> {\n    const endChars = new Set<string>();\n    for (let replacement of replacements) {\n        const sourceString = replacement.sourceString;\n        if (sourceString.length == 0) {\n            continue;\n        }\n        const lastChar = sourceString[sourceString.length - 1];\n        if (!replacement.matchSourceCaseSensitive) {\n            endChars.add(lastChar.toLocaleLowerCase());\n            endChars.add(lastChar.toLocaleUpperCase());\n        } else {\n            endChars.add(lastChar);\n        }\n    }\n    return endChars;\n}\n","import { Browser } from 'roosterjs-editor-dom';\r\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\r\nimport { PluginEvent, PluginEventType } from 'roosterjs-editor-types';\r\n\r\n/**\r\n * An editor plugin that show a tooltip for existing link\r\n */\r\nexport default class HyperLink implements EditorPlugin {\r\n    private editor: Editor;\r\n    private disposer: () => void;\r\n\r\n    /**\r\n     * Create a new instance of HyperLink class\r\n     * @param getTooltipCallback A callback function to get tooltip text for an existing hyperlink.\r\n     * Default value is to return the href itself. If null, there will be no tooltip text.\r\n     * @param target (Optional) Target window name for hyperlink. If null, will use \"_blank\"\r\n     * @param onLinkClick (Optional) Open link callback (return false to use default behavior)\r\n     */\r\n    constructor(\r\n        private getTooltipCallback: (href: string, a: HTMLAnchorElement) => string = href => href,\r\n        private target?: string,\r\n        private onLinkClick?: (anchor: HTMLAnchorElement, mouseEvent: MouseEvent) => boolean | void\r\n    ) {}\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'Hyperlink';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin\r\n     * @param editor The editor instance\r\n     */\r\n    public initialize(editor: Editor): void {\r\n        this.editor = editor;\r\n        this.disposer =\r\n            this.getTooltipCallback &&\r\n            editor.addDomEventHandler({ mouseover: this.onMouse, mouseout: this.onMouse });\r\n    }\r\n\r\n    protected onMouse = (e: MouseEvent) => {\r\n        const a = this.editor.getElementAtCursor('a[href]', <Node>e.target) as HTMLAnchorElement;\r\n        const href = this.tryGetHref(a);\r\n\r\n        if (href) {\r\n            this.editor.setEditorDomAttribute(\r\n                'title',\r\n                e.type == 'mouseover' ? this.getTooltipCallback(href, a) : null\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    public dispose(): void {\r\n        this.disposer();\r\n        this.disposer = null;\r\n        this.editor = null;\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    public onPluginEvent(event: PluginEvent): void {\r\n        if (event.eventType == PluginEventType.MouseUp) {\r\n            const anchor = this.editor.getElementAtCursor('A', <Node>(\r\n                event.rawEvent.srcElement\r\n            )) as HTMLAnchorElement;\r\n\r\n            if (anchor) {\r\n                if (this.onLinkClick && this.onLinkClick(anchor, event.rawEvent) !== false) {\r\n                    return;\r\n                }\r\n\r\n                let href: string;\r\n                if (\r\n                    !Browser.isFirefox &&\r\n                    (href = this.tryGetHref(anchor)) &&\r\n                    (Browser.isMac ? event.rawEvent.metaKey : event.rawEvent.ctrlKey) &&\r\n                    event.rawEvent.button === 0\r\n                ) {\r\n                    try {\r\n                        const target = this.target || '_blank';\r\n                        const window = this.editor.getDocument().defaultView;\r\n                        window.open(href, target);\r\n                    } catch {}\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Try get href from an anchor element\r\n     * The reason this is put in a try-catch is that\r\n     * it has been seen that accessing href may throw an exception, in particular on IE/Edge\r\n     */\r\n    private tryGetHref(anchor: HTMLAnchorElement): string {\r\n        try {\r\n            return anchor ? anchor.href : null;\r\n        } catch {}\r\n    }\r\n}\r\n","import buildClipboardData from './buildClipboardData';\r\nimport fragmentHandler from './fragmentHandler';\r\nimport textToHtml from './textToHtml';\r\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\r\nimport { getFormatState } from 'roosterjs-editor-api';\r\nimport { insertImage } from 'roosterjs-editor-api';\r\nimport {\r\n    AttributeCallbackMap,\r\n    getInheritableStyles,\r\n    HtmlSanitizer,\r\n    htmlToDom,\r\n} from 'roosterjs-html-sanitizer';\r\nimport {\r\n    BeforePasteEvent,\r\n    ChangeSource,\r\n    ClipboardData,\r\n    DefaultFormat,\r\n    NodeType,\r\n    PasteOption,\r\n    PluginEventType,\r\n} from 'roosterjs-editor-types';\r\nimport {\r\n    applyFormat,\r\n    fromHtml,\r\n    getFirstLeafNode,\r\n    getNextLeafSibling,\r\n    Position,\r\n} from 'roosterjs-editor-dom';\r\n\r\n/**\r\n * Paste plugin, handles onPaste event and paste content into editor\r\n */\r\nexport default class Paste implements EditorPlugin {\r\n    private editor: Editor;\r\n    private pasteDisposer: () => void;\r\n    private sanitizer: HtmlSanitizer;\r\n\r\n    /**\r\n     * Create an instance of Paste\r\n     * @param preserved Not used. Preserved parameter only used for compatibility with old code\r\n     * @param attributeCallbacks A set of callbacks to help handle html attribute during sanitization\r\n     */\r\n    constructor(preserved?: any, attributeCallbacks?: AttributeCallbackMap) {\r\n        this.sanitizer = new HtmlSanitizer({\r\n            attributeCallbacks,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'Paste';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    public initialize(editor: Editor) {\r\n        this.editor = editor;\r\n        this.pasteDisposer = editor.addDomEventHandler('paste', this.onPaste);\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    public dispose() {\r\n        this.pasteDisposer();\r\n        this.pasteDisposer = null;\r\n        this.editor = null;\r\n    }\r\n\r\n    private onPaste = (event: Event) => {\r\n        buildClipboardData(<ClipboardEvent>event, this.editor, items => {\r\n            this.pasteOriginal({\r\n                snapshotBeforePaste: null,\r\n                originalFormat: this.getCurrentFormat(),\r\n                types: items.types,\r\n                image: items.image,\r\n                text: items.text,\r\n                rawHtml: items.html,\r\n                html: items.html ? this.sanitizeHtml(items.html) : textToHtml(items.text),\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Paste into editor using passed in clipboardData with original format\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    public pasteOriginal(clipboardData: ClipboardData) {\r\n        this.paste(clipboardData, this.detectPasteOption(clipboardData));\r\n    }\r\n\r\n    /**\r\n     * Paste plain text into editor using passed in clipboardData\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    public pasteText(clipboardData: ClipboardData) {\r\n        this.paste(clipboardData, PasteOption.PasteText);\r\n    }\r\n\r\n    /**\r\n     * Paste into editor using passed in clipboardData with curent format\r\n     * @param clipboardData The clipboardData to paste\r\n     */\r\n    public pasteAndMergeFormat(clipboardData: ClipboardData) {\r\n        this.paste(clipboardData, this.detectPasteOption(clipboardData), true /*mergeFormat*/);\r\n    }\r\n\r\n    private detectPasteOption(clipboardData: ClipboardData): PasteOption {\r\n        return clipboardData.text || !clipboardData.image\r\n            ? PasteOption.PasteHtml\r\n            : PasteOption.PasteImage;\r\n    }\r\n\r\n    private paste(\r\n        clipboardData: ClipboardData,\r\n        pasteOption: PasteOption,\r\n        mergeCurrentFormat?: boolean\r\n    ) {\r\n        let document = this.editor.getDocument();\r\n        let fragment = document.createDocumentFragment();\r\n\r\n        if (pasteOption == PasteOption.PasteHtml) {\r\n            let html = clipboardData.html;\r\n            let nodes = fromHtml(html, document);\r\n\r\n            for (let node of nodes) {\r\n                if (mergeCurrentFormat) {\r\n                    this.applyToElements(node, this.applyFormatting(clipboardData.originalFormat, this.editor.isDarkMode()));\r\n                }\r\n                fragment.appendChild(node);\r\n            }\r\n        }\r\n\r\n        let event = this.editor.triggerPluginEvent(\r\n            PluginEventType.BeforePaste,\r\n            {\r\n                clipboardData,\r\n                fragment,\r\n                pasteOption,\r\n            },\r\n            true /*broadcast*/\r\n        );\r\n        this.internalPaste(event);\r\n    }\r\n\r\n    private internalPaste(event: BeforePasteEvent) {\r\n        let { clipboardData, fragment, pasteOption } = event;\r\n        this.editor.focus();\r\n        this.editor.addUndoSnapshot(() => {\r\n            if (clipboardData.snapshotBeforePaste == null) {\r\n                clipboardData.snapshotBeforePaste = this.editor.getContent(\r\n                    false /*triggerExtractContentEvent*/,\r\n                    true /*markSelection*/\r\n                );\r\n            } else {\r\n                this.editor.setContent(clipboardData.snapshotBeforePaste);\r\n            }\r\n\r\n            switch (pasteOption) {\r\n                case PasteOption.PasteHtml:\r\n                    this.editor.insertNode(fragment);\r\n                    break;\r\n\r\n                case PasteOption.PasteText:\r\n                    let html = textToHtml(clipboardData.text);\r\n                    this.editor.insertContent(html);\r\n                    break;\r\n\r\n                case PasteOption.PasteImage:\r\n                    insertImage(this.editor, clipboardData.image);\r\n                    break;\r\n            }\r\n\r\n            return clipboardData;\r\n        }, ChangeSource.Paste);\r\n    }\r\n\r\n    private applyFormatting = (format: DefaultFormat, isDarkMode: boolean) => (element: HTMLElement) => {\r\n        applyFormat(element, format, isDarkMode);\r\n    }\r\n\r\n    private applyToElements(node: Node, elementTransform: (element: HTMLElement) => void) {\r\n        let leaf = getFirstLeafNode(node);\r\n        let parents: HTMLElement[] = [];\r\n        while (leaf) {\r\n            if (\r\n                leaf.nodeType == NodeType.Text &&\r\n                leaf.parentNode &&\r\n                parents.indexOf(<HTMLElement>leaf.parentNode) < 0\r\n            ) {\r\n                parents.push(<HTMLElement>leaf.parentNode);\r\n            }\r\n            leaf = getNextLeafSibling(node, leaf);\r\n        }\r\n        parents.push(<HTMLElement>node);\r\n        for (let parent of parents) {\r\n            elementTransform(parent);\r\n        }\r\n    }\r\n\r\n    private getCurrentFormat(): DefaultFormat {\r\n        let format = getFormatState(this.editor);\r\n        return format\r\n            ? {\r\n                fontFamily: format.fontName,\r\n                fontSize: format.fontSize,\r\n                textColor: format.textColor,\r\n                backgroundColor: format.backgroundColor,\r\n                bold: format.isBold,\r\n                italic: format.isItalic,\r\n                underline: format.isUnderline,\r\n            }\r\n            : {};\r\n    }\r\n\r\n    private sanitizeHtml(html: string): string {\r\n        let doc = htmlToDom(html, true /*preserveFragmentOnly*/, fragmentHandler);\r\n        if (doc && doc.body) {\r\n            this.sanitizer.convertGlobalCssToInlineCss(doc);\r\n\r\n            let range = this.editor.getSelectionRange();\r\n            let element = range && Position.getStart(range).normalize().element;\r\n            let currentStyles = getInheritableStyles(element);\r\n            this.sanitizer.sanitize(doc.body, currentStyles);\r\n            return doc.body.innerHTML;\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import { ClipboardItems, ContentPosition } from 'roosterjs-editor-types';\r\nimport { Editor } from 'roosterjs-editor-core';\r\nimport { extractClipboardEvent, fromHtml } from 'roosterjs-editor-dom';\r\n\r\nconst CONTAINER_HTML =\r\n    '<div contenteditable style=\"width: 1px; height: 1px; overflow: hidden; position: fixed; top: 0; left; 0; -webkit-user-select: text\"></div>';\r\n\r\n/**\r\n * Build ClipboardData from a paste event\r\n * @param event The paste event\r\n * @param editor The editor\r\n * @param callback Callback function when data is ready\r\n */\r\nexport default function buildClipboardData(\r\n    event: ClipboardEvent,\r\n    editor: Editor,\r\n    callback: (items: ClipboardItems) => void\r\n) {\r\n    extractClipboardEvent(event, items => {\r\n        if (items.html === undefined) {\r\n            retrieveHtmlViaTempDiv(editor, html => {\r\n                items.html = html;\r\n                callback(items);\r\n            });\r\n        } else {\r\n            callback(items);\r\n        }\r\n    });\r\n}\r\n\r\nfunction retrieveHtmlViaTempDiv(editor: Editor, callback: (html: string) => void) {\r\n    // cache original selection range in editor\r\n    let originalSelectionRange = editor.getSelectionRange();\r\n    let tempDiv = getTempDivForPaste(editor);\r\n    tempDiv.focus();\r\n\r\n    editor.runAsync(() => {\r\n        // restore original selection range in editor\r\n        editor.select(originalSelectionRange);\r\n        callback(tempDiv.innerHTML);\r\n        tempDiv.style.display = 'none';\r\n        tempDiv.innerHTML = '';\r\n    });\r\n}\r\n\r\nfunction getTempDivForPaste(editor: Editor): HTMLElement {\r\n    let tempDiv = editor.getCustomData(\r\n        'PasteDiv',\r\n        () => {\r\n            let pasteDiv = fromHtml(CONTAINER_HTML, editor.getDocument())[0] as HTMLElement;\r\n            editor.insertNode(pasteDiv, {\r\n                position: ContentPosition.Outside,\r\n                updateCursor: false,\r\n                replaceSelection: false,\r\n                insertOnNewLine: false,\r\n            });\r\n            return pasteDiv;\r\n        },\r\n        pasteDiv => {\r\n            pasteDiv.parentNode.removeChild(pasteDiv);\r\n        }\r\n    );\r\n    tempDiv.style.display = '';\r\n    return tempDiv;\r\n}\r\n","import { HtmlSanitizer } from 'roosterjs-html-sanitizer';\r\n\r\n/**\r\n * Convert pasted content from Excel, add borders when source doc doesn't have a border\r\n * @param doc HTML Document which contains the content from Excel\r\n */\r\nexport default function convertPastedContentFromExcel(doc: HTMLDocument) {\r\n    let sanitizer = new HtmlSanitizer({\r\n        styleCallbacks: {\r\n            border: (value, element) => value != 'none' || element.style.border != 'none',\r\n        },\r\n        additionalAllowAttributes: ['class'],\r\n    });\r\n    sanitizer.sanitize(doc.body);\r\n\r\n    let styleNode = doc.createElement('style');\r\n    doc.body.appendChild(styleNode);\r\n    styleNode.innerHTML = 'td {border: solid 1px #d4d4d4}';\r\n    sanitizer.convertGlobalCssToInlineCss(doc);\r\n}\r\n","import convertPastedContentFromExcel from './excelConverter/convertPastedContentFromExcel';\r\nimport convertPastedContentFromWord from './wordConverter/convertPastedContentFromWord';\r\nimport { getTagOfNode } from 'roosterjs-editor-dom';\r\nimport { splitWithFragment } from 'roosterjs-html-sanitizer';\r\n\r\nconst WORD_ATTRIBUTE_NAME = 'xmlns:w';\r\nconst WORD_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:word';\r\nconst EXCEL_ATTRIBUTE_NAME = 'xmlns:x';\r\nconst EXCEL_ATTRIBUTE_VALUE = 'urn:schemas-microsoft-com:office:excel';\r\n\r\nconst LAST_TD_END_REGEX = /<\\/\\s*td\\s*>((?!<\\/\\s*tr\\s*>)[\\s\\S])*$/i;\r\nconst LAST_TR_END_REGEX = /<\\/\\s*tr\\s*>((?!<\\/\\s*table\\s*>)[\\s\\S])*$/i;\r\nconst LAST_TR_REGEX = /<tr[^>]*>[^<]*/i;\r\nconst LAST_TABLE_REGEX = /<table[^>]*>[^<]*/i;\r\n\r\nexport default function fragmentHandler(doc: HTMLDocument, source: string) {\r\n    let [html, before] = splitWithFragment(source);\r\n    let firstNode = doc && doc.body && (doc.querySelector('html') as HTMLElement);\r\n    if (getTagOfNode(firstNode) == 'HTML') {\r\n        if (firstNode.getAttribute(WORD_ATTRIBUTE_NAME) == WORD_ATTRIBUTE_VALUE) {\r\n            // Handle HTML copied from MS Word\r\n            doc.body.innerHTML = html;\r\n            convertPastedContentFromWord(doc);\r\n        } else if (firstNode.getAttribute(EXCEL_ATTRIBUTE_NAME) == EXCEL_ATTRIBUTE_VALUE) {\r\n            // Handle HTML copied from MS Excel\r\n            if (html.match(LAST_TD_END_REGEX)) {\r\n                let trMatch = before.match(LAST_TR_REGEX);\r\n                let tr = trMatch ? trMatch[0] : '<TR>';\r\n                html = tr + html + '</TR>';\r\n            }\r\n            if (html.match(LAST_TR_END_REGEX)) {\r\n                let tableMatch = before.match(LAST_TABLE_REGEX);\r\n                let table = tableMatch ? tableMatch[0] : '<TABLE>';\r\n                html = table + html + '</TABLE>';\r\n            }\r\n            doc.body.innerHTML = html;\r\n            convertPastedContentFromExcel(doc);\r\n        } else {\r\n            // Handle HTML copied from other places\r\n            doc.body.innerHTML = html;\r\n        }\r\n    }\r\n}\r\n","import { Browser } from 'roosterjs-editor-dom';\r\n\r\nvar ZERO_WIDTH_SPACE = '&#8203;';\r\n\r\n/**\r\n * Convert plain to HTML\r\n * @param text The plain text to convert\r\n * @returns HTML string to present the input text\r\n */\r\nexport default function textToHtml(text: string): string {\r\n    text = (text || '')\r\n        .replace(/&/g, '&amp;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/^ /gm, '&nbsp;')\r\n        .replace(/\\r/g, '');\r\n    let lines = text.split('\\n');\r\n    if (lines.length == 2) {\r\n        text = `<span>${lines[0]}<br></span><span>${lines[1]}</span>`;\r\n    } else if (lines.length > 2) {\r\n        text = '';\r\n        let lineEnd = Browser.isIEOrEdge ? ZERO_WIDTH_SPACE : '<br>';\r\n        lines.forEach((line, i) => {\r\n            if (i == 0) {\r\n                text += `<span>${line}<br></span>`;\r\n            } else if (i == lines.length - 1) {\r\n                text += `<span>${line}</span>`;\r\n            } else {\r\n                text += `<div>${line}${lineEnd}</div>`;\r\n            }\r\n        });\r\n    }\r\n    text = text.replace(/\\s\\s/g, ' &nbsp;');\r\n    return text;\r\n}\r\n","import { NodeType } from 'roosterjs-editor-types';\r\n\r\n/** NodeId attribute */\r\nconst NODE_ID_ATTRIBUTE_NAME = 'NodeId';\r\n\r\n/** Custom data for dom elements */\r\nexport default interface CustomData {\r\n    /** The dict storing custom data, key is element Id, value is dictionary */\r\n    dict: { [key: string]: { [key: string]: number } };\r\n\r\n    /** Next node Id to use */\r\n    nextNodeId: number;\r\n}\r\n\r\n/** create an empty CustomData */\r\nexport function createCustomData(): CustomData {\r\n    return {\r\n        dict: {},\r\n        nextNodeId: 1,\r\n    };\r\n}\r\n\r\n/**\r\n * Sets the specified object data\r\n */\r\nexport function setObject(customData: CustomData, element: Node, key: string, value: any) {\r\n    // Get the id for the element\r\n    if (element.nodeType == NodeType.Element) {\r\n        let id = getAndSetNodeId(customData, element as HTMLElement);\r\n        if (id != '') {\r\n            // Get the values for the element\r\n            if (!customData.dict[id]) {\r\n                // First time dictionary creation\r\n                customData.dict[id] = {};\r\n            }\r\n            customData.dict[id][key] = value;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Reads the specified object data\r\n */\r\nexport function getObject(customData: CustomData, element: Node, key: string): any {\r\n    if (element.nodeType == NodeType.Element) {\r\n        let id = getAndSetNodeId(customData, element as HTMLElement);\r\n        if (id != '') {\r\n            return customData.dict[id] && customData.dict[id][key];\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/** Get the unique id for the specified node... */\r\nfunction getAndSetNodeId(customData: CustomData, element: HTMLElement): string {\r\n    let id = element.getAttribute(NODE_ID_ATTRIBUTE_NAME);\r\n    if (!id) {\r\n        id = customData.nextNodeId.toString();\r\n        customData.nextNodeId++;\r\n        element.setAttribute(NODE_ID_ATTRIBUTE_NAME, id);\r\n    }\r\n    return id;\r\n}\r\n","import ListMetadata from './ListMetadata';\r\n\r\n/** Holds the ids for the lists already seen for a specified level */\r\nexport default interface LevelLists {\r\n    /**\r\n     * The metadata for the lists seen at  this level\r\n     * key: word list id, value: list metadata\r\n     */\r\n    listsMetadata: { [key: string]: ListMetadata };\r\n\r\n    /** Unique id of the list currently at this level */\r\n    currentUniqueListId: number;\r\n}\r\n\r\n/** create an empty LevelLists */\r\nexport function createLevelLists(): LevelLists {\r\n    return {\r\n        listsMetadata: {},\r\n        currentUniqueListId: -1,\r\n    };\r\n}\r\n","import LevelLists, { createLevelLists } from './LevelLists';\r\nimport ListItemMetadata from './ListItemMetadata';\r\nimport ListMetadata from './ListMetadata';\r\n\r\n/** Contains the state of the WordConverter when called back after yielding */\r\nexport default interface WordConverterArguments {\r\n    /** The list of element nodes being processed */\r\n    nodes: NodeListOf<HTMLElement>;\r\n\r\n    /** The index of the element currently being processed */\r\n    currentIndex: number;\r\n\r\n    /**\r\n     * Holds the metadata for all the lists we have found\r\n     * key: unique list id, value: list metadata\r\n     */\r\n    lists: { [key: string]: ListMetadata };\r\n\r\n    /**\r\n     * Stores the list item metatada of the items we\r\n     * have found that need to be converted\r\n     */\r\n    listItems: ListItemMetadata[];\r\n\r\n    /**\r\n     * This array holds the list id of the lists we are processing\r\n     * that are next to each other.. This list will be used to determine\r\n     * if list items are next to each other or if they are separated...\r\n     * Separated items are ignored from the conversion\r\n     */\r\n\r\n    currentListIdsByLevels: LevelLists[];\r\n\r\n    /** Remembers the item that was last processed  */\r\n    lastProcessedItem: HTMLElement;\r\n}\r\n\r\n/** create an empty WordConverterArguments */\r\nexport function createWordConverterArguments(\r\n    nodes: NodeListOf<HTMLElement>\r\n): WordConverterArguments {\r\n    return {\r\n        nodes: nodes,\r\n        currentIndex: 0,\r\n        lists: {},\r\n        listItems: [],\r\n        currentListIdsByLevels: [createLevelLists()],\r\n        lastProcessedItem: null,\r\n    };\r\n}\r\n","import { createWordConverter } from './wordConverter';\r\nimport { createWordConverterArguments } from './WordConverterArguments';\r\nimport { HtmlSanitizer } from 'roosterjs-html-sanitizer';\r\nimport { processNodeConvert, processNodesDiscovery } from './converterUtils';\r\n\r\n/** Converts all the Word generated list items in the specified node into standard HTML UL and OL tags */\r\nexport default function convertPastedContentFromWord(doc: HTMLDocument) {\r\n    let sanitizer = new HtmlSanitizer({\r\n        elementCallbacks: {\r\n            ['O:P']: () => false,\r\n        },\r\n        additionalAllowAttributes: ['class'],\r\n    });\r\n    sanitizer.sanitize(doc.body);\r\n\r\n    let wordConverter = createWordConverter();\r\n\r\n    // First find all the nodes that we need to check for list item information\r\n    // This call will return all the p and header elements under the root node.. These are the elements that\r\n    // Word uses a list items, so we'll only process them and avoid walking the whole tree.\r\n    let elements = doc.querySelectorAll('p');\r\n    if (elements.length > 0) {\r\n        wordConverter.wordConverterArgs = createWordConverterArguments(elements);\r\n        if (processNodesDiscovery(wordConverter)) {\r\n            processNodeConvert(wordConverter);\r\n        }\r\n    }\r\n}\r\n","import ListItemMetadata from './ListItemMetadata';\r\nimport ListMetadata from './ListMetadata';\r\nimport WordConverter from './wordConverter';\r\nimport WordConverterArguments from './WordConverterArguments';\r\nimport { createLevelLists } from './LevelLists';\r\nimport { getObject, setObject } from './CustomData';\r\nimport { getTagOfNode } from 'roosterjs-editor-dom';\r\nimport { NodeType } from 'roosterjs-editor-types';\r\n\r\n/** Word list metadata style name */\r\nconst LOOKUP_DEPTH = 5;\r\n\r\n/** Name for the word list id property in the custom data */\r\nconst UNIQUE_LIST_ID_CUSTOM_DATA = 'UniqueListId';\r\n\r\n/** Word list metadata style name */\r\nconst MSO_LIST_STYLE_NAME = 'mso-list';\r\n\r\n/** Regular expression to match line breaks */\r\nconst LINE_BREAKS = /[\\n|\\r]/gi;\r\n\r\n/**\r\n * Handles the pass 1: Discovery\r\n * During discovery, we'll parse the metadata out of the elements and store it in the list items dictionary.\r\n * We'll detect cases where the list items for a particular ordered list are not next to each other. Word does these\r\n * for numbered headers, and we don't want to convert those, because the numbering would be completely wrong.\r\n */\r\nexport function processNodesDiscovery(wordConverter: WordConverter): boolean {\r\n    let args = wordConverter.wordConverterArgs;\r\n    while (args.currentIndex < args.nodes.length) {\r\n        let node = args.nodes.item(args.currentIndex);\r\n\r\n        // Try to get the list metadata for the specified node\r\n        let itemMetadata = getListItemMetadata(node);\r\n        if (itemMetadata) {\r\n            let levelInfo =\r\n                args.currentListIdsByLevels[itemMetadata.level - 1] || createLevelLists();\r\n            args.currentListIdsByLevels[itemMetadata.level - 1] = levelInfo;\r\n\r\n            // We need to drop some list information if this is not an item next to another\r\n            if (args.lastProcessedItem && getRealPreviousSibling(node) != args.lastProcessedItem) {\r\n                // This list item is not next to the previous one. This means that there is some content in between them\r\n                // so we need to reset our list of list ids per level\r\n                resetCurrentLists(args);\r\n            }\r\n\r\n            // Get the list metadata for the list that will hold this item\r\n            let listMetadata = levelInfo.listsMetadata[itemMetadata.wordListId];\r\n            if (!listMetadata) {\r\n                // Get the first item fake bullet.. This will be used later to check what is the right type of list\r\n                let firstFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\r\n\r\n                // This is a the first item of a list.. We'll create the list metadata using the information\r\n                // we already have from this first item\r\n                listMetadata = {\r\n                    numberOfItems: 0,\r\n                    uniqueListId: wordConverter.nextUniqueId++,\r\n                    firstFakeBullet: firstFakeBullet,\r\n\r\n                    // If the bullet we got is emtpy or not found, we ignore the list out.. this means\r\n                    // that this is not an item we need to convert of that the format doesn't match what\r\n                    // we are expecting\r\n                    ignore: !firstFakeBullet || firstFakeBullet.length == 0,\r\n\r\n                    // We'll use the first fake bullet to try to figure out which type of list we create. If this list has a second\r\n                    // item, we'll perform a better comparasion, but for one item lists, this will be check that will determine the list type\r\n                    tagName: getFakeBulletTagName(firstFakeBullet),\r\n                };\r\n                levelInfo.listsMetadata[itemMetadata.wordListId] = listMetadata;\r\n                args.lists[listMetadata.uniqueListId.toString()] = listMetadata;\r\n            } else if (!listMetadata.ignore && listMetadata.numberOfItems == 1) {\r\n                // This is the second item we've seen for this list.. we'll compare the 2 fake bullet\r\n                // items we have an decide if we create ordered or unordered lists based on this.\r\n                // This is the best way we can do this since we cannot read the metadata that Word\r\n                // puts in the head of the HTML...\r\n                let secondFakeBullet = getFakeBulletText(node, LOOKUP_DEPTH);\r\n                listMetadata.tagName =\r\n                    listMetadata.firstFakeBullet == secondFakeBullet ? 'UL' : 'OL';\r\n            }\r\n\r\n            // Set the unique id to the list\r\n            itemMetadata.uniqueListId = listMetadata.uniqueListId;\r\n\r\n            // Check if we need to ignore this list... we'll either know already that we need to ignore\r\n            // it, or we'll know it because the previous list items are not next to this one\r\n            if (\r\n                listMetadata.ignore ||\r\n                (listMetadata.tagName == 'OL' &&\r\n                    listMetadata.numberOfItems > 0 &&\r\n                    levelInfo.currentUniqueListId != itemMetadata.uniqueListId)\r\n            ) {\r\n                // We need to ignore this item... and we also need to forget about the lists that\r\n                // are not at the root level\r\n                listMetadata.ignore = true;\r\n                args.currentListIdsByLevels[0].currentUniqueListId = -1;\r\n                args.currentListIdsByLevels = args.currentListIdsByLevels.slice(0, 1);\r\n            } else {\r\n                // This is an item we don't need to ignore... If added lists deep under this one before\r\n                // we'll drop their ids from the list of ids per level.. this is because this list item\r\n                // breaks the deeper lists.\r\n                if (args.currentListIdsByLevels.length > itemMetadata.level) {\r\n                    args.currentListIdsByLevels = args.currentListIdsByLevels.slice(\r\n                        0,\r\n                        itemMetadata.level\r\n                    );\r\n                }\r\n\r\n                levelInfo.currentUniqueListId = itemMetadata.uniqueListId;\r\n\r\n                // Add the list item into the list of items to be processed\r\n                args.listItems.push(itemMetadata);\r\n                listMetadata.numberOfItems++;\r\n            }\r\n\r\n            args.lastProcessedItem = node;\r\n        } else {\r\n            // Here, we know that this is not a list item, but we'll want to check if it is one \"no bullet\" list items...\r\n            // these can be created by creating a bullet and hitting delete on it it... The content will continue to be indented, but there will\r\n            // be no bullet and the list will continue correctly after that. Visually, it looks like the previous item has multiple lines, but\r\n            // the HTML generated has multiple paragraphs with the same class. We'll merge these when we find them, so the logic doesn't skips\r\n            // the list conversion thinking that the list items are not together...\r\n            let last = args.lastProcessedItem;\r\n            if (\r\n                last &&\r\n                getRealPreviousSibling(node) == last &&\r\n                node.tagName == last.tagName &&\r\n                node.className == last.className\r\n            ) {\r\n                // Add 2 line breaks and move all the nodes to the last item\r\n                last.appendChild(last.ownerDocument.createElement('br'));\r\n                last.appendChild(last.ownerDocument.createElement('br'));\r\n                while (node.firstChild != null) {\r\n                    last.appendChild(node.firstChild);\r\n                }\r\n\r\n                // Remove the item that we don't need anymore\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        }\r\n\r\n        // Move to the next element are return true if more elements need to be processed\r\n        args.currentIndex++;\r\n    }\r\n\r\n    return args.listItems.length > 0;\r\n}\r\n\r\n/**\r\n * Handles the pass 2: Conversion\r\n * During conversion, we'll go over the elements that belong to a list that we've marked as a list to convert, and we'll perform the\r\n * conversion needed\r\n */\r\nexport function processNodeConvert(wordConverter: WordConverter): boolean {\r\n    let args = wordConverter.wordConverterArgs;\r\n    args.currentIndex = 0;\r\n\r\n    while (args.currentIndex < args.listItems.length) {\r\n        let metadata = args.listItems[args.currentIndex];\r\n        let node = metadata.originalNode;\r\n        let listMetadata = args.lists[metadata.uniqueListId.toString()];\r\n        if (!listMetadata.ignore) {\r\n            // We have a list item that we need to convert, get or create the list\r\n            // that hold this item out\r\n            let list = getOrCreateListForNode(wordConverter, node, metadata, listMetadata);\r\n            if (list) {\r\n                // Clean the element out.. this call gets rid of the fake bullet and unneeded nodes\r\n                cleanupListIgnore(node, LOOKUP_DEPTH);\r\n\r\n                // Create a new list item and transfer the children\r\n                let li = node.ownerDocument.createElement('LI');\r\n                while (node.firstChild) {\r\n                    li.appendChild(node.firstChild);\r\n                }\r\n\r\n                // Append the list item into the list\r\n                list.appendChild(li);\r\n\r\n                // Remove the node we just converted\r\n                node.parentNode.removeChild(node);\r\n\r\n                if (listMetadata.tagName == 'UL') {\r\n                    wordConverter.numBulletsConverted++;\r\n                } else {\r\n                    wordConverter.numNumberedConverted++;\r\n                }\r\n            }\r\n        }\r\n\r\n        args.currentIndex++;\r\n    }\r\n\r\n    return wordConverter.numBulletsConverted > 0 || wordConverter.numNumberedConverted > 0;\r\n}\r\n\r\n/**\r\n * Gets or creates the list (UL or OL) that holds this item out based on the\r\n * items content and the specified metadata\r\n */\r\nfunction getOrCreateListForNode(\r\n    wordConverter: WordConverter,\r\n    node: HTMLElement,\r\n    metadata: ListItemMetadata,\r\n    listMetadata: ListMetadata\r\n): Node {\r\n    // First get the last list next to this node under the specified level. This code\r\n    // path will return the list or will create lists if needed\r\n    let list = recurringGetOrCreateListAtNode(node, metadata.level, listMetadata);\r\n\r\n    // Here use the unique list ID to detect if we have the right list...\r\n    // it is possible to have 2 different lists next to each other with different formats, so\r\n    // we want to detect this an create separate lists for those cases\r\n    let listId = getObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA);\r\n\r\n    // If we have a list with and ID, but the ID is different than the ID for this list item, this\r\n    // is a completely new list, so we'll append a new list for that\r\n    if ((listId && listId != metadata.uniqueListId) || (!listId && list.firstChild)) {\r\n        let newList = node.ownerDocument.createElement(listMetadata.tagName);\r\n        list.parentNode.insertBefore(newList, list.nextSibling);\r\n        list = newList;\r\n    }\r\n\r\n    // Set the list id into the custom data\r\n    setObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA, metadata.uniqueListId);\r\n\r\n    // This call will convert the list if needed to the right type of list required. This can happen\r\n    // on the cases where the first list item for this list is located after a deeper list. for that\r\n    // case, we will have created a UL for it, and we may need to convert it\r\n    return convertListIfNeeded(wordConverter, list, listMetadata);\r\n}\r\n\r\n/**\r\n * Converts the list between UL and OL if needed, by using the fake bullet and\r\n * information already stored in the list itself\r\n */\r\nfunction convertListIfNeeded(\r\n    wordConverter: WordConverter,\r\n    list: Node,\r\n    listMetadata: ListMetadata\r\n): Node {\r\n    // Check if we need to convert the list out\r\n    if (listMetadata.tagName != getTagOfNode(list)) {\r\n        // We have the wrong list type.. convert it, set the id again and tranfer all the childs\r\n        let newList = list.ownerDocument.createElement(listMetadata.tagName);\r\n        setObject(\r\n            wordConverter.customData,\r\n            newList,\r\n            UNIQUE_LIST_ID_CUSTOM_DATA,\r\n            getObject(wordConverter.customData, list, UNIQUE_LIST_ID_CUSTOM_DATA)\r\n        );\r\n        while (list.firstChild) {\r\n            newList.appendChild(list.firstChild);\r\n        }\r\n        list.parentNode.insertBefore(newList, list);\r\n        list.parentNode.removeChild(list);\r\n        list = newList;\r\n    }\r\n\r\n    return list;\r\n}\r\n\r\n/**\r\n * Gets or creates the specified list\r\n */\r\nfunction recurringGetOrCreateListAtNode(\r\n    node: HTMLElement,\r\n    level: number,\r\n    listMetadata: ListMetadata\r\n): Node {\r\n    let parent: Node = null;\r\n    let possibleList: Node;\r\n    if (level == 1) {\r\n        // Root case, we'll check if the list is the previous sibling of the node\r\n        possibleList = getRealPreviousSibling(node);\r\n    } else {\r\n        // If we get here, we are looking for level 2 or deeper... get the upper list\r\n        // and check if the last element is a list\r\n        parent = recurringGetOrCreateListAtNode(node, level - 1, null);\r\n        possibleList = parent.lastChild;\r\n    }\r\n\r\n    // Check the element that we got and verify that it is a list\r\n    if (possibleList && possibleList.nodeType == NodeType.Element) {\r\n        let tag = getTagOfNode(possibleList);\r\n        if (tag == 'UL' || tag == 'OL') {\r\n            // We have a list.. use it\r\n            return possibleList;\r\n        }\r\n    }\r\n\r\n    // If we get here, it means we don't have a list and we need to create one\r\n    // this code path will always create new lists as UL lists\r\n    let newList = node.ownerDocument.createElement(listMetadata ? listMetadata.tagName : 'UL');\r\n    if (level == 1) {\r\n        // For level 1, we'll insert the list beofre the node\r\n        node.parentNode.insertBefore(newList, node);\r\n    } else {\r\n        // Any level 2 or above, we insert the list as the last\r\n        // child of the upper level list\r\n        parent.appendChild(newList);\r\n    }\r\n\r\n    return newList;\r\n}\r\n\r\n/**\r\n * Cleans up the node children by removing the childs marked as mso-list: Ignore.\r\n * This nodes hold the fake bullet information that Word puts in and when\r\n * conversion is happening, we want to get rid of these elements\r\n */\r\nfunction cleanupListIgnore(node: Node, levels: number) {\r\n    let nodesToRemove: Node[] = [];\r\n\r\n    for (let child: Node = node.firstChild; child; child = child.nextSibling) {\r\n        // Clean up the item internally first if we need to based on the number of levels\r\n        if (child.nodeType == NodeType.Element && levels > 1) {\r\n            cleanupListIgnore(child, levels - 1);\r\n        }\r\n\r\n        // Try to convert word comments into ignore elements if we haven't done so for this element\r\n        child = fixWordListComments(child, true /*removeComments*/);\r\n\r\n        // Check if we can remove this item out\r\n        if (isEmptySpan(child) || isIgnoreNode(child)) {\r\n            nodesToRemove.push(child);\r\n        }\r\n    }\r\n\r\n    nodesToRemove.forEach(child => node.removeChild(child));\r\n}\r\n\r\n/**\r\n * Reads the word list metadada out of the specified node. If the node\r\n * is not a Word list item, it returns null.\r\n */\r\nfunction getListItemMetadata(node: HTMLElement): ListItemMetadata {\r\n    if (node.nodeType == NodeType.Element) {\r\n        let listatt = getStyleValue(node, MSO_LIST_STYLE_NAME);\r\n        if (listatt && listatt.length > 0) {\r\n            try {\r\n                // Word mso-list property holds 3 space separated values in the following format: lst1 level1 lfo0\r\n                // Where:\r\n                // (0) List identified for the metadata in the &lt;head&gt; of the document. We cannot read the &lt;head&gt; metada\r\n                // (1) Level of the list. This also maps to the &lt;head&gt; metadata that we cannot read, but\r\n                // for almost all cases, it maps to the list identation (or level). We'll use it as the\r\n                // list indentation value\r\n                // (2) Contains a specific list identifier.\r\n                // Example value: \"l0 level1 lfo1\"\r\n                let listprops = listatt.split(' ');\r\n                if (listprops.length == 3) {\r\n                    return <ListItemMetadata>{\r\n                        level: parseInt(listprops[1].substr('level'.length)),\r\n                        wordListId: listatt,\r\n                        originalNode: node,\r\n                        uniqueListId: 0,\r\n                    };\r\n                }\r\n            } catch (e) {}\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction isFakeBullet(fakeBullet: string): boolean {\r\n    return ['o', '·', '§', '-'].indexOf(fakeBullet) >= 0;\r\n}\r\n\r\n/** Given a fake bullet text, returns the type of list that should be used for it */\r\nfunction getFakeBulletTagName(fakeBullet: string): string {\r\n    return isFakeBullet(fakeBullet) ? 'UL' : 'OL';\r\n}\r\n\r\n/**\r\n * Finds the fake bullet text out of the specified node and returns it. For images, it will return\r\n * a bullet string. If not found, it returns null...\r\n */\r\nfunction getFakeBulletText(node: Node, levels: number): string {\r\n    // Word uses the following format for their bullets:\r\n    // &lt;p style=\"mso-list:l1 level1 lfo2\"&gt;\r\n    // &lt;span style=\"...\"&gt;\r\n    // &lt;span style=\"mso-list:Ignore\"&gt;1.&lt;span style=\"...\"&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/span&gt;&lt;/span&gt;\r\n    // &lt;/span&gt;\r\n    // Content here...\r\n    // &lt;/p&gt;\r\n    //\r\n    // Basically, we need to locate the mso-list:Ignore SPAN, which holds either one text or image node. That\r\n    // text or image node will be the fake bullet we are looking for\r\n    let result: string = null;\r\n    let child: Node = node.firstChild;\r\n    while (!result && child) {\r\n        // First, check if we need to convert the Word list comments into real elements\r\n        child = fixWordListComments(child, true /*removeComments*/);\r\n\r\n        // Check if this is the node that holds the fake bullets (mso-list: Ignore)\r\n        if (isIgnoreNode(child)) {\r\n            // Yes... this is the node that holds either the text or image data\r\n            result = child.textContent.trim();\r\n\r\n            // This is the case for image case\r\n            if (result.length == 0) {\r\n                result = 'o';\r\n            }\r\n        } else if (child.nodeType == NodeType.Element && levels > 1) {\r\n            // If this is an element and we are not in the last level, try to get the fake bullet\r\n            // out of the child\r\n            result = getFakeBulletText(child, levels - 1);\r\n        }\r\n\r\n        child = child.nextSibling;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * If the specified element is a Word List comments, this code verifies and fixes\r\n * the markup when needed to ensure that Chrome bullet conversions work as expected\r\n * -----\r\n * We'll convert &lt;!--[if !supportLists]--&gt; and &lt;!--[endif]--&gt; comments into\r\n * &lt;span style=\"mso-list:Ignore\"&gt;&lt;/span&gt;... Chrome has a bug where it drops the\r\n * styles of the span, but we'll use these comments to recreate them out\r\n */\r\nfunction fixWordListComments(child: Node, removeComments: boolean): Node {\r\n    if (child.nodeType == NodeType.Comment) {\r\n        let value = (child as Comment).data;\r\n        if (value && value.trim().toLowerCase() == '[if !supportlists]') {\r\n            // We have a list ignore start, find the end.. We know is not more than\r\n            // 3 nodes away, so we'll optimize our checks\r\n            let nextElement = child;\r\n            let endComment: Node = null;\r\n            for (let j = 0; j < 4; j++) {\r\n                nextElement = getRealNextSibling(nextElement);\r\n                if (!nextElement) {\r\n                    break;\r\n                }\r\n                if (nextElement.nodeType == NodeType.Comment) {\r\n                    value = (nextElement as Comment).data;\r\n                    if (value && value.trim().toLowerCase() == '[endif]') {\r\n                        endComment = nextElement;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // if we found the end node, wrap everything out\r\n            if (endComment) {\r\n                let newSpan = child.ownerDocument.createElement('span');\r\n                newSpan.setAttribute('style', 'mso-list: ignore');\r\n                nextElement = getRealNextSibling(child);\r\n                while (nextElement != endComment) {\r\n                    nextElement = nextElement.nextSibling as HTMLElement;\r\n                    newSpan.appendChild(nextElement.previousSibling);\r\n                }\r\n\r\n                // Insert the element out and use that one as the current child\r\n                endComment.parentNode.insertBefore(newSpan, endComment);\r\n\r\n                // Remove the comments out if the call specified it out\r\n                if (removeComments) {\r\n                    child.parentNode.removeChild(child);\r\n                    endComment.parentNode.removeChild(endComment);\r\n                }\r\n\r\n                // Last, make sure we return the new element out instead of the comment\r\n                child = newSpan;\r\n            }\r\n        }\r\n    }\r\n\r\n    return child;\r\n}\r\n\r\n/** Finds the real previous sibling, ignoring emtpy text nodes */\r\nfunction getRealPreviousSibling(node: Node): Node {\r\n    let prevSibling = node;\r\n    do {\r\n        prevSibling = prevSibling.previousSibling;\r\n    } while (prevSibling && isEmptyTextNode(prevSibling));\r\n    return prevSibling;\r\n}\r\n\r\n/** Finds the real next sibling, ignoring empty text nodes */\r\nfunction getRealNextSibling(node: Node): Node {\r\n    let nextSibling = node;\r\n    do {\r\n        nextSibling = nextSibling.nextSibling;\r\n    } while (nextSibling && isEmptyTextNode(nextSibling));\r\n\r\n    return nextSibling;\r\n}\r\n\r\n/**\r\n * Checks if the specified node is marked as a mso-list: Ignore. These\r\n * nodes need to be ignored when a list item is converted into standard\r\n * HTML lists\r\n */\r\nfunction isIgnoreNode(node: Node): boolean {\r\n    if (node.nodeType == NodeType.Element) {\r\n        let listatt = getStyleValue(node as HTMLElement, MSO_LIST_STYLE_NAME);\r\n        if (listatt && listatt.length > 0 && listatt.trim().toLowerCase() == 'ignore') {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/** Checks if the specified node is an empty span. */\r\nfunction isEmptySpan(node: Node): boolean {\r\n    return getTagOfNode(node) == 'SPAN' && !node.firstChild;\r\n}\r\n\r\n/** Reads the specified style value from the node */\r\nfunction getStyleValue(node: HTMLElement, styleName: string): string {\r\n    // Word uses non-standard names for the metadata that puts in the style of the element...\r\n    // Most browsers will not provide the information for those unstandard values throug the node.style\r\n    // property, so the only reliable way to read them is to get the attribute directly and do\r\n    // the required parsing..\r\n    let textStyle = node.getAttribute('style');\r\n    if (textStyle && textStyle.length > 0 && textStyle.indexOf(styleName) >= 0) {\r\n        // Split all the CSS name: value pairs\r\n        let inStyles = textStyle.split(';');\r\n        for (let i = 0; i < inStyles.length; i++) {\r\n            // Split the name and value\r\n            let nvpair = inStyles[i].split(':');\r\n            if (nvpair.length == 2 && nvpair[0].trim() == styleName) {\r\n                return nvpair[1].trim();\r\n            }\r\n        }\r\n    }\r\n\r\n    // As a backup mechanism, we'll still try to get the value from the style object\r\n    // Dictionary styles = (Dictionary)(object)node.Style;\r\n    // return (string)styles[styleName];\r\n    return null;\r\n}\r\n\r\n/** Checks if the node is an empty text node that can be ignored */\r\nfunction isEmptyTextNode(node: Node): boolean {\r\n    // No node is empty\r\n    if (!node) {\r\n        return true;\r\n    }\r\n\r\n    // Empty text node is empty\r\n    if (node.nodeType == NodeType.Text) {\r\n        let value = node.nodeValue;\r\n        value = value.replace(LINE_BREAKS, '');\r\n        return value.trim().length == 0;\r\n    }\r\n\r\n    // Span or Font with an empty child node is empty\r\n    let tagName = getTagOfNode(node);\r\n    if (node.firstChild == node.lastChild && (tagName == 'SPAN' || tagName == 'FONT')) {\r\n        return isEmptyTextNode(node.firstChild);\r\n    }\r\n\r\n    // If not found, then this is not empty\r\n    return false;\r\n}\r\n\r\n/** Resets the list */\r\nfunction resetCurrentLists(args: WordConverterArguments) {\r\n    for (let i = 0; i < args.currentListIdsByLevels.length; i++) {\r\n        let ll = args.currentListIdsByLevels[i];\r\n        if (ll) {\r\n            ll.currentUniqueListId = -1;\r\n        }\r\n    }\r\n}\r\n","import CustomData, { createCustomData } from './CustomData';\r\nimport WordConverterArguments from './WordConverterArguments';\r\n\r\n/** Processes HTML generated by Word, converting Word Lists into standard HTML UL and OL tags */\r\nexport default interface WordConverter {\r\n    /** Next unique id to be assigned to a list */\r\n    nextUniqueId: number;\r\n\r\n    /** Number of bullets converted */\r\n    numBulletsConverted: number;\r\n\r\n    /** Number of numbering converted */\r\n    numNumberedConverted: number;\r\n\r\n    /** The structure that records the status of the conversion */\r\n    wordConverterArgs: WordConverterArguments;\r\n\r\n    /** Custom data storage for list items */\r\n    customData: CustomData;\r\n}\r\n\r\n/** create an empty WordConverter */\r\nexport function createWordConverter(): WordConverter {\r\n    return {\r\n        nextUniqueId: 1,\r\n        numBulletsConverted: 0,\r\n        numNumberedConverted: 0,\r\n        wordConverterArgs: null,\r\n        customData: createCustomData(),\r\n    };\r\n}\r\n","import { contains, fromHtml, getComputedStyle, VTable } from 'roosterjs-editor-dom';\r\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\r\nimport {\r\n    ContentPosition,\r\n    PluginEvent,\r\n    PluginEventType,\r\n    PluginMouseEvent,\r\n    ChangeSource,\r\n} from 'roosterjs-editor-types';\r\n\r\nconst TABLE_RESIZE_HANDLE_KEY = 'TABLE_RESIZE_HANDLE';\r\nconst HANDLE_WIDTH = 6;\r\nconst CONTAINER_HTML = `<div style=\"position: fixed; cursor: col-resize; width: ${HANDLE_WIDTH}px; border: solid 0 #C6C6C6;\"></div>`;\r\n\r\n/**\r\n * TableResize plugin, provides the ability to resize a table by drag-and-drop\r\n */\r\nexport default class TableResize implements EditorPlugin {\r\n    private editor: Editor;\r\n    private onMouseOverDisposer: () => void;\r\n    private td: HTMLTableCellElement;\r\n    private pageX = -1;\r\n    private initialPageX: number;\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    initialize(editor: Editor) {\r\n        this.editor = editor;\r\n        this.onMouseOverDisposer = this.editor.addDomEventHandler('mouseover', this.onMouseOver);\r\n    }\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'TableResize';\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    dispose() {\r\n        this.detachMouseEvents();\r\n        this.editor = null;\r\n        this.onMouseOverDisposer();\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    onPluginEvent(event: PluginEvent) {\r\n        if (\r\n            this.td &&\r\n            (event.eventType == PluginEventType.KeyDown ||\r\n                event.eventType == PluginEventType.ContentChanged ||\r\n                (event.eventType == PluginEventType.MouseDown && !this.clickIntoCurrentTd(event)))\r\n        ) {\r\n            this.td = null;\r\n            this.calcAndShowHandle();\r\n        }\r\n    }\r\n\r\n    private clickIntoCurrentTd(event: PluginMouseEvent) {\r\n        let mouseEvent = event.rawEvent;\r\n        let target = mouseEvent.target;\r\n        return (\r\n            target instanceof Node &&\r\n            contains(this.td, <Node>target, true /*treatSameNodeAsContain*/)\r\n        );\r\n    }\r\n\r\n    private onMouseOver = (e: MouseEvent) => {\r\n        let node = <HTMLElement>(e.srcElement || e.target);\r\n        if (\r\n            this.pageX < 0 &&\r\n            node &&\r\n            (node.tagName == 'TD' || node.tagName == 'TH') &&\r\n            node != this.td\r\n        ) {\r\n            this.td = <HTMLTableCellElement>node;\r\n            this.calcAndShowHandle();\r\n        }\r\n    };\r\n\r\n    private calcAndShowHandle() {\r\n        if (this.td) {\r\n            let tr = <HTMLTableRowElement>this.editor.getElementAtCursor('TR', this.td);\r\n            let table = <HTMLTableElement>this.editor.getElementAtCursor('TABLE', tr);\r\n            if (tr && table) {\r\n                let [left, top] = this.getPosition(table);\r\n                let handle = this.getResizeHandle();\r\n\r\n                left +=\r\n                    this.td.offsetLeft +\r\n                    (this.isRtl(table) ? 0 : this.td.offsetWidth - HANDLE_WIDTH);\r\n                handle.style.display = '';\r\n                handle.style.top = top + 'px';\r\n                handle.style.height = table.offsetHeight + 'px';\r\n                handle.style.left = left + 'px';\r\n            }\r\n        } else {\r\n            this.getResizeHandle().style.display = 'none';\r\n        }\r\n    }\r\n\r\n    private adjustHandle(pageX: number) {\r\n        let handle = this.getResizeHandle();\r\n        handle.style.left = handle.offsetLeft + pageX - this.pageX + 'px';\r\n        this.pageX = pageX;\r\n    }\r\n\r\n    private getPosition(e: HTMLElement): [number, number] {\r\n        let parent = <HTMLElement>e.offsetParent;\r\n        let [left, top] = parent ? this.getPosition(parent) : [0, 0];\r\n        return [left + e.offsetLeft - e.scrollLeft, top + e.offsetTop - e.scrollTop];\r\n    }\r\n\r\n    private getResizeHandle() {\r\n        return this.editor.getCustomData(\r\n            TABLE_RESIZE_HANDLE_KEY,\r\n            () => {\r\n                let document = this.editor.getDocument();\r\n                let handle = fromHtml(CONTAINER_HTML, document)[0] as HTMLElement;\r\n                this.editor.insertNode(handle, {\r\n                    position: ContentPosition.Outside,\r\n                    updateCursor: false,\r\n                    replaceSelection: false,\r\n                    insertOnNewLine: false,\r\n                });\r\n                handle.addEventListener('mousedown', this.onMouseDown);\r\n                return handle;\r\n            },\r\n            handle => {\r\n                handle.removeEventListener('mousedown', this.onMouseDown);\r\n                handle.parentNode.removeChild(handle);\r\n            }\r\n        );\r\n    }\r\n\r\n    private cancelEvent(e: MouseEvent) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    private onMouseDown = (e: MouseEvent) => {\r\n        if (!this.editor || this.editor.isDisposed()) {\r\n            return;\r\n        }\r\n\r\n        this.pageX = e.pageX;\r\n        this.initialPageX = e.pageX;\r\n        this.attachMouseEvents();\r\n\r\n        let handle = this.getResizeHandle();\r\n        handle.style.borderWidth = '0 1px';\r\n\r\n        this.cancelEvent(e);\r\n    };\r\n\r\n    private onMouseMove = (e: MouseEvent) => {\r\n        this.adjustHandle(e.pageX);\r\n        this.cancelEvent(e);\r\n    };\r\n\r\n    private onMouseUp = (e: MouseEvent) => {\r\n        this.detachMouseEvents();\r\n\r\n        let handle = this.getResizeHandle();\r\n        handle.style.borderWidth = '0';\r\n\r\n        let table = this.editor.getElementAtCursor('TABLE', this.td) as HTMLTableElement;\r\n        let cellPadding = parseInt(table.cellPadding);\r\n        cellPadding = isNaN(cellPadding) ? 0 : cellPadding;\r\n\r\n        if (e.pageX != this.initialPageX) {\r\n            let newWidth =\r\n                this.td.clientWidth -\r\n                cellPadding * 2 +\r\n                (e.pageX - this.initialPageX) * (this.isRtl(table) ? -1 : 1);\r\n            this.editor.addUndoSnapshot((start, end) => {\r\n                this.setTableColumnWidth(newWidth + 'px');\r\n                this.editor.select(start, end);\r\n            }, ChangeSource.Format);\r\n        }\r\n\r\n        this.pageX = -1;\r\n        this.calcAndShowHandle();\r\n        this.editor.focus();\r\n        this.cancelEvent(e);\r\n    };\r\n\r\n    private attachMouseEvents() {\r\n        if (this.editor && !this.editor.isDisposed()) {\r\n            let document = this.editor.getDocument();\r\n            document.addEventListener('mousemove', this.onMouseMove, true);\r\n            document.addEventListener('mouseup', this.onMouseUp, true);\r\n        }\r\n    }\r\n\r\n    private detachMouseEvents() {\r\n        if (this.editor && !this.editor.isDisposed()) {\r\n            let document = this.editor.getDocument();\r\n            document.removeEventListener('mousemove', this.onMouseMove, true);\r\n            document.removeEventListener('mouseup', this.onMouseUp, true);\r\n        }\r\n    }\r\n\r\n    private setTableColumnWidth(width: string) {\r\n        let vtable = new VTable(this.td);\r\n        vtable.table.style.width = '';\r\n        vtable.table.width = '';\r\n        vtable.forEachCellOfCurrentColumn(cell => {\r\n            if (cell.td) {\r\n                cell.td.style.width = cell.td == this.td ? width : '';\r\n            }\r\n        });\r\n        vtable.writeBack();\r\n        return this.editor.contains(this.td) ? this.td : vtable.getCurrentTd();\r\n    }\r\n\r\n    private isRtl(element: HTMLElement) {\r\n        return getComputedStyle(element, 'direction') == 'rtl';\r\n    }\r\n}\r\n","import { applyFormat, wrap } from 'roosterjs-editor-dom';\r\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\r\nimport {\r\n    ChangeSource,\r\n    PluginEvent,\r\n    PluginEventType,\r\n    ContentPosition,\r\n    ContentChangedEvent,\r\n    ExtractContentEvent,\r\n    DefaultFormat,\r\n} from 'roosterjs-editor-types';\r\n\r\nconst WATERMARK_SPAN_ID = '_rooster_watermarkSpan';\r\nconst WATERMARK_REGEX = new RegExp(\r\n    `<span[^>]*id=['\"]?${WATERMARK_SPAN_ID}['\"]?[^>]*>[^<]*</span>`,\r\n    'ig'\r\n);\r\n\r\n/**\r\n * A watermark plugin to manage watermark string for roosterjs\r\n */\r\nexport default class Watermark implements EditorPlugin {\r\n    private editor: Editor;\r\n    private isWatermarkShowing: boolean;\r\n    private disposer: () => void;\r\n\r\n    /**\r\n     * Create an instance of Watermark plugin\r\n     * @param watermark The watermark string\r\n     */\r\n    constructor(private watermark: string, private format?: DefaultFormat) {\r\n        this.format = this.format || {\r\n            fontSize: '14px',\r\n            textColor: '#aaa',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'Watermark';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    initialize(editor: Editor) {\r\n        this.editor = editor;\r\n        this.showHideWatermark(false /*ignoreCachedState*/);\r\n        this.disposer = this.editor.addDomEventHandler({\r\n            focus: this.handleWatermark,\r\n            blur: this.handleWatermark,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    dispose() {\r\n        this.disposer();\r\n        this.disposer = null;\r\n        this.hideWatermark();\r\n        this.editor = null;\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    onPluginEvent(event: PluginEvent) {\r\n        if (event.eventType == PluginEventType.ContentChanged) {\r\n            // When content is changed from setContent() API, current cached state\r\n            // may not be accurate, so we ignore it\r\n            this.showHideWatermark((<ContentChangedEvent>event).source == ChangeSource.SetContent);\r\n        } else if (event.eventType == PluginEventType.ExtractContent && this.isWatermarkShowing) {\r\n            this.removeWartermarkFromHtml(event as ExtractContentEvent);\r\n        }\r\n    }\r\n\r\n    private handleWatermark = () => {\r\n        this.showHideWatermark(false /*ignoreCachedState*/);\r\n    };\r\n\r\n    private showHideWatermark(ignoreCachedState: boolean) {\r\n        if (this.editor.hasFocus() && (ignoreCachedState || this.isWatermarkShowing)) {\r\n            this.hideWatermark();\r\n            this.editor.focus();\r\n        } else if (\r\n            !this.editor.hasFocus() &&\r\n            (ignoreCachedState || !this.isWatermarkShowing) &&\r\n            this.editor.isEmpty(true /*trim*/)\r\n        ) {\r\n            this.showWatermark();\r\n        }\r\n    }\r\n\r\n    private showWatermark() {\r\n        let document = this.editor.getDocument();\r\n        let watermarkNode = wrap(\r\n            document.createTextNode(this.watermark),\r\n            `<span id=\"${WATERMARK_SPAN_ID}\"></span>`\r\n        ) as HTMLElement;\r\n        applyFormat(watermarkNode, this.format, this.editor.isDarkMode());\r\n        this.editor.insertNode(watermarkNode, {\r\n            position: ContentPosition.Begin,\r\n            updateCursor: false,\r\n            replaceSelection: false,\r\n            insertOnNewLine: false,\r\n        });\r\n        this.isWatermarkShowing = true;\r\n    }\r\n\r\n    private hideWatermark() {\r\n        this.editor.queryElements(`span[id=\"${WATERMARK_SPAN_ID}\"]`, span =>\r\n            this.editor.deleteNode(span)\r\n        );\r\n        this.isWatermarkShowing = false;\r\n    }\r\n\r\n    private removeWartermarkFromHtml(event: ExtractContentEvent) {\r\n        let content = event.content;\r\n        content = content.replace(WATERMARK_REGEX, '');\r\n        event.content = content;\r\n    }\r\n}\r\n","export { default as HyperLink } from './HyperLink/HyperLink';\r\nexport { default as ContentEdit } from './ContentEdit/ContentEdit';\r\nexport { default as Paste } from './Paste/Paste';\r\nexport {\r\n    default as ContentEditFeatures,\r\n    getDefaultContentEditFeatures,\r\n} from './ContentEdit/ContentEditFeatures';\r\nexport { default as Watermark } from './Watermark/Watermark';\r\nexport { default as TableResize } from './TableResize/TableResize';\r\nexport { default as CustomReplace, Replacement } from './CustomReplace/CustomReplace';\r\n","export { default as HtmlSanitizer } from './sanitizer/HtmlSanitizer';\r\nexport { default as HtmlSanitizerOptions } from './types/HtmlSanitizerOptions';\r\nexport { default as SanitizeHtmlOptions } from './types/SanitizeHtmlOptions';\r\nexport { default as htmlToDom, splitWithFragment } from './utils/htmlToDom';\r\nexport { default as getInheritableStyles } from './utils/getInheritableStyles';\r\nexport {\r\n    AttributeCallback,\r\n    AttributeCallbackMap,\r\n    ElementCallback,\r\n    Map,\r\n    StringMap,\r\n    StyleCallback,\r\n    StyleCallbackMap,\r\n    ElementCallbackMap,\r\n} from './types/maps';\r\n","import getInheritableStyles from '../utils/getInheritableStyles';\r\nimport HtmlSanitizerOptions from '../types/HtmlSanitizerOptions';\r\nimport htmlToDom from '../utils/htmlToDom';\r\nimport SanitizeHtmlOptions from '../types/SanitizeHtmlOptions';\r\nimport { cloneObject } from '../utils/cloneObject';\r\nimport {\r\n    StringMap,\r\n    StyleCallbackMap,\r\n    ElementCallbackMap,\r\n    AttributeCallbackMap,\r\n} from '../types/maps';\r\nimport {\r\n    getAllowedAttributes,\r\n    getAllowedTags,\r\n    getDefaultStyleValues,\r\n    getStyleCallbacks,\r\n} from '../utils/getAllowedValues';\r\n\r\n/**\r\n * HTML sanitizer class provides two featuers:\r\n * 1. Convert global CSS to inline CSS\r\n * 2. Sanitize an HTML document, remove unnecessary/dangerous attribute/nodes\r\n */\r\nexport default class HtmlSanitizer {\r\n    /**\r\n     * Convert global CSS to inline CSS if any\r\n     * @param html HTML source\r\n     * @param additionalStyleNodes (Optional) additional HTML STYLE elements used as global CSS\r\n     */\r\n    static convertInlineCss(html: string, additionalStyleNodes?: HTMLStyleElement[]) {\r\n        let sanitizer = new HtmlSanitizer({\r\n            additionalGlobalStyleNodes: additionalStyleNodes,\r\n        });\r\n        return sanitizer.exec(html, true /*convertCssOnly*/);\r\n    }\r\n\r\n    /**\r\n     * Sanitize HTML string, remove any unuseful HTML node/attribute/CSS.\r\n     * @param html HTML source string\r\n     * @param options Options used for this sanitizing process\r\n     */\r\n    static sanitizeHtml(html: string, options?: SanitizeHtmlOptions) {\r\n        options = options || {};\r\n        let sanitizer = new HtmlSanitizer(options);\r\n        let currentStyles =\r\n            options.currentElementOrStyle instanceof HTMLElement\r\n                ? getInheritableStyles(options.currentElementOrStyle)\r\n                : options.currentElementOrStyle;\r\n        return sanitizer.exec(\r\n            html,\r\n            options.convertCssOnly,\r\n            options.preserveFragmentOnly,\r\n            currentStyles\r\n        );\r\n    }\r\n\r\n    private elementCallbacks: ElementCallbackMap;\r\n    private styleCallbacks: StyleCallbackMap;\r\n    private attributeCallbacks: AttributeCallbackMap;\r\n    private allowedTags: string[];\r\n    private allowedAttributes: string[];\r\n    private defaultStyleValues: StringMap;\r\n    private additionalGlobalStyleNodes: HTMLStyleElement[];\r\n    private allowPreserveWhiteSpace: boolean;\r\n\r\n    /**\r\n     * Construct a new instance of HtmlSanitizer\r\n     * @param options Options for HtmlSanitizer\r\n     */\r\n    constructor(options?: HtmlSanitizerOptions) {\r\n        options = options || {};\r\n        this.elementCallbacks = cloneObject(options.elementCallbacks);\r\n        this.styleCallbacks = getStyleCallbacks(options.styleCallbacks);\r\n        this.attributeCallbacks = cloneObject(options.attributeCallbacks);\r\n        this.allowedTags = getAllowedTags(options.additionalAllowedTags);\r\n        this.allowedAttributes = getAllowedAttributes(options.additionalAllowAttributes);\r\n        this.defaultStyleValues = getDefaultStyleValues(options.additionalDefaultStyleValues);\r\n        this.additionalGlobalStyleNodes = options.additionalGlobalStyleNodes || [];\r\n        this.allowPreserveWhiteSpace = options.allowPreserveWhiteSpace;\r\n    }\r\n\r\n    /**\r\n     * Sanitize HTML string\r\n     * This function will do the following work:\r\n     * 1. Convert global CSS into inline CSS\r\n     * 2. Remove dangerous HTML tags and attributes\r\n     * 3. Remove useless CSS properties\r\n     * @param html The input HTML\r\n     * @param convertInlineCssOnly Whether only convert inline css and skip html content sanitizing\r\n     * @param preserveFragmentOnly If set to true, only preserve the html content between &lt;!--StartFragment--&gt; and &lt;!--Endfragment--&gt;\r\n     * @param currentStyles Current inheritable CSS styles\r\n     */\r\n    exec(\r\n        html: string,\r\n        convertCssOnly?: boolean,\r\n        preserveFragmentOnly?: boolean,\r\n        currentStyles?: StringMap\r\n    ): string {\r\n        let doc = htmlToDom(html, preserveFragmentOnly);\r\n        if (doc) {\r\n            this.convertGlobalCssToInlineCss(doc);\r\n            if (!convertCssOnly) {\r\n                this.sanitize(doc.body, currentStyles);\r\n            }\r\n        }\r\n        return (doc && doc.body && doc.body.innerHTML) || '';\r\n    }\r\n\r\n    /**\r\n     * Sanitize an HTML element, remove unnecessary or dangerous elements/attribute/CSS rules\r\n     * @param rootNode Root node to sanitize\r\n     * @param currentStyles Current CSS styles. Inheritable styles in the given node which has\r\n     * the same value with current styles will be ignored.\r\n     */\r\n    sanitize(rootNode: HTMLElement, currentStyles?: StringMap) {\r\n        if (!rootNode) {\r\n            return '';\r\n        }\r\n        currentStyles = cloneObject(currentStyles, getInheritableStyles(null));\r\n        this.processNode(rootNode, currentStyles, {});\r\n    }\r\n\r\n    /**\r\n     * Convert global CSS into inline CSS\r\n     * @param rootNode The HTML Document\r\n     */\r\n    convertGlobalCssToInlineCss(rootNode: HTMLDocument) {\r\n        let styleNodes = toArray(rootNode.querySelectorAll('style'));\r\n        let styleSheets = this.additionalGlobalStyleNodes\r\n            .reverse()\r\n            .map(node => node.sheet as CSSStyleSheet)\r\n            .concat(styleNodes.map(node => node.sheet as CSSStyleSheet).reverse())\r\n            .filter(sheet => sheet);\r\n        for (let styleSheet of styleSheets) {\r\n            for (let j = styleSheet.cssRules.length - 1; j >= 0; j--) {\r\n                // Skip any none-style rule, i.e. @page\r\n                let styleRule = styleSheet.cssRules[j] as CSSStyleRule;\r\n                let text = styleRule && styleRule.style ? styleRule.style.cssText : null;\r\n                if (styleRule.type != CSSRule.STYLE_RULE || !text || !styleRule.selectorText) {\r\n                    continue;\r\n                }\r\n                // Make sure the selector is not empty\r\n                for (let selector of styleRule.selectorText.split(',')) {\r\n                    if (!selector || !selector.trim() || selector.indexOf(':') >= 0) {\r\n                        continue;\r\n                    }\r\n                    let nodes = toArray(rootNode.querySelectorAll(selector));\r\n                    // Always put existing styles after so that they have higher priority\r\n                    // Which means if both global style and inline style apply to the same element,\r\n                    // inline style will have higher priority\r\n                    nodes.forEach(node =>\r\n                        node.setAttribute('style', text + (node.getAttribute('style') || ''))\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        styleNodes.forEach(node => {\r\n            if (node.parentNode) {\r\n                node.parentNode.removeChild(node);\r\n            }\r\n        });\r\n    }\r\n\r\n    private processNode(node: Node, currentStyle: StringMap, context: Object) {\r\n        let nodeType = node.nodeType;\r\n        let isElement = nodeType == Node.ELEMENT_NODE;\r\n        let isText = nodeType == Node.TEXT_NODE;\r\n        let element = <HTMLElement>node;\r\n        let tag = isElement ? element.tagName.toUpperCase() : '';\r\n\r\n        if (\r\n            (isElement && !this.allowElement(element, tag, context)) ||\r\n            (isText && /^[\\r\\n]*$/g.test(node.nodeValue) && !currentStyle.insidePRE) ||\r\n            (!isElement && !isText)\r\n        ) {\r\n            node.parentNode.removeChild(node);\r\n        } else if (\r\n            isText &&\r\n            !this.allowPreserveWhiteSpace &&\r\n            currentStyle['white-space'] == 'pre'\r\n        ) {\r\n            node.nodeValue = node.nodeValue.replace(/^ /gm, '\\u00A0').replace(/ {2}/g, ' \\u00A0');\r\n        } else if (isElement) {\r\n            let thisStyle = cloneObject(currentStyle);\r\n            this.processAttributes(element, context);\r\n            this.processCss(element, tag, thisStyle, context);\r\n\r\n            // Special handling for PRE tag, need to preserve \\r\\n inside PRE\r\n            if (tag == 'PRE') {\r\n                thisStyle.insidePRE = 'true';\r\n            }\r\n\r\n            let child: Node = element.firstChild;\r\n            let next: Node;\r\n            for (; child; child = next) {\r\n                next = child.nextSibling;\r\n                this.processNode(child, thisStyle, context);\r\n            }\r\n        }\r\n    }\r\n\r\n    private processCss(element: HTMLElement, tag: string, thisStyle: StringMap, context: Object) {\r\n        let styleNode = element.getAttributeNode('style');\r\n        if (!styleNode) {\r\n            return;\r\n        }\r\n\r\n        let source = styleNode.value.split(';');\r\n        let result = source.filter(style => {\r\n            let pair: string[];\r\n\r\n            if (!style || style.trim() == '' || (pair = style.split(':')).length != 2) {\r\n                return false;\r\n            }\r\n\r\n            let name = pair[0].trim().toLowerCase();\r\n            let value = pair[1].trim().toLowerCase();\r\n            let callback = this.styleCallbacks[name];\r\n            let isInheritable = thisStyle[name] != undefined;\r\n            let keep =\r\n                (!callback || callback(value, element, context)) &&\r\n                value != 'inherit' &&\r\n                value.indexOf('expression') < 0 &&\r\n                name.substr(0, 1) != '-' &&\r\n                this.defaultStyleValues[name] != value &&\r\n                ((isInheritable && value != thisStyle[name]) ||\r\n                    (!isInheritable && value != 'initial' && value != 'normal'));\r\n            if (keep && isInheritable) {\r\n                thisStyle[name] = value;\r\n            }\r\n            return keep && (this.allowPreserveWhiteSpace || name != 'white-space');\r\n        });\r\n\r\n        if (source.length != result.length) {\r\n            if (result.length > 0) {\r\n                element.setAttribute('style', result.map(s => s.trim()).join('; '));\r\n            } else {\r\n                element.removeAttribute('style');\r\n            }\r\n        }\r\n    }\r\n\r\n    private processAttributes(element: HTMLElement, context: Object) {\r\n        for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n            let attribute = element.attributes[i];\r\n            let name = attribute.name.toLowerCase().trim();\r\n            let value = attribute.value;\r\n            let callback = this.attributeCallbacks[name];\r\n\r\n            if (callback) {\r\n                value = callback(value, element, context);\r\n            } else if (this.allowedAttributes.indexOf(name) < 0) {\r\n                value = null;\r\n            }\r\n\r\n            if (\r\n                value === null ||\r\n                value === undefined ||\r\n                value.toLowerCase().indexOf('script:') >= 0\r\n            ) {\r\n                element.removeAttribute(name);\r\n            } else {\r\n                attribute.value = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    private allowElement(element: HTMLElement, tag: string, context: Object): boolean {\r\n        let callback = this.elementCallbacks[tag];\r\n        return callback\r\n            ? callback(element, context)\r\n            : this.allowedTags.indexOf(tag) >= 0 || tag.indexOf(':') > 0;\r\n    }\r\n}\r\n\r\nfunction toArray<T extends Node>(list: NodeListOf<T>): T[] {\r\n    return [].slice.call(list) as T[];\r\n}\r\n","import { Map } from '../types/maps';\r\n\r\nfunction nativeClone<T>(source: Map<T>, existingObj?: Map<T>): Map<T> {\r\n    return Object.assign(existingObj || {}, source);\r\n}\r\n\r\nfunction customClone<T>(source: Map<T>, existingObj?: Map<T>): Map<T> {\r\n    let result: Map<T> = existingObj || {};\r\n    if (source) {\r\n        for (let key of Object.keys(source)) {\r\n            result[key] = source[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const cloneObject = Object.assign ? nativeClone : customClone;\r\n","import { cloneObject } from './cloneObject';\r\nimport { StringMap, StyleCallbackMap } from '../types/maps';\r\n\r\nconst ALLOWED_HTML_TAGS = (\r\n    'BODY,H1,H2,H3,H4,H5,H6,FORM,P,BR,NOBR,HR,ACRONYM,ABBR,ADDRESS,B,' +\r\n    'BDI,BDO,BIG,BLOCKQUOTE,CENTER,CITE,CODE,DEL,DFN,EM,FONT,I,INS,KBD,MARK,METER,PRE,PROGRESS,' +\r\n    'Q,RP,RT,RUBY,S,SAMP,SMALL,STRIKE,STRONG,SUB,SUP,TEMPLATE,TIME,TT,U,VAR,WBR,XMP,INPUT,TEXTAREA,' +\r\n    'BUTTON,SELECT,OPTGROUP,OPTION,LABEL,FIELDSET,LEGEND,DATALIST,OUTPUT,IMG,MAP,AREA,CANVAS,FIGCAPTION,' +\r\n    'FIGURE,PICTURE,A,NAV,UL,OL,LI,DIR,UL,DL,DT,DD,MENU,MENUITEM,TABLE,CAPTION,TH,TR,TD,THEAD,TBODY,' +\r\n    'TFOOT,COL,COLGROUP,DIV,SPAN,HEADER,FOOTER,MAIN,SECTION,ARTICLE,ASIDE,DETAILS,DIALOG,SUMMARY,DATA'\r\n).split(',');\r\n\r\nconst ALLOWED_HTML_ATTRIBUTES = (\r\n    'accept,align,alt,checked,cite,color,cols,colspan,contextmenu,' +\r\n    'coords,datetime,default,dir,dirname,disabled,download,face,headers,height,hidden,high,href,' +\r\n    'hreflang,ismap,kind,label,lang,list,low,max,maxlength,media,min,multiple,open,optimum,pattern,' +\r\n    'placeholder,readonly,rel,required,reversed,rows,rowspan,scope,selected,shape,size,sizes,span,' +\r\n    'spellcheck,src,srclang,srcset,start,step,style,tabindex,target,title,translate,type,usemap,value,' +\r\n    'width,wrap'\r\n).split(',');\r\n\r\nconst DEFAULT_STYLE_VALUES: { [name: string]: string } = {\r\n    'background-color': 'transparent',\r\n    'border-bottom-color': 'rgb(0, 0, 0)',\r\n    'border-bottom-style': 'none',\r\n    'border-bottom-width': '0px',\r\n    'border-image-outset': '0',\r\n    'border-image-repeat': 'stretch',\r\n    'border-image-slice': '100%',\r\n    'border-image-source': 'none',\r\n    'border-image-width': '1',\r\n    'border-left-color': 'rgb(0, 0, 0)',\r\n    'border-left-style': 'none',\r\n    'border-left-width': '0px',\r\n    'border-right-color': 'rgb(0, 0, 0)',\r\n    'border-right-style': 'none',\r\n    'border-right-width': '0px',\r\n    'border-top-color': 'rgb(0, 0, 0)',\r\n    'border-top-style': 'none',\r\n    'border-top-width': '0px',\r\n    'outline-color': 'transparent',\r\n    'outline-style': 'none',\r\n    'outline-width': '0px',\r\n    overflow: 'visible',\r\n    'text-decoration': 'none',\r\n    '-webkit-text-stroke-width': '0px',\r\n    'word-wrap': 'break-word',\r\n    'margin-left': '0px',\r\n    'margin-right': '0px',\r\n    padding: '0px',\r\n    'padding-top': '0px',\r\n    'padding-left': '0px',\r\n    'padding-right': '0px',\r\n    'padding-bottom': '0px',\r\n    border: '0px',\r\n    'border-top': '0px',\r\n    'border-left': '0px',\r\n    'border-right': '0px',\r\n    'border-bottom': '0px',\r\n    'vertical-align': 'baseline',\r\n    float: 'none',\r\n};\r\n\r\nexport function getAllowedTags(additionalTags: string[]): string[] {\r\n    return unique(ALLOWED_HTML_TAGS.concat(additionalTags || [])).map(tag => tag.toUpperCase());\r\n}\r\n\r\nexport function getAllowedAttributes(additionalAttributes: string[]): string[] {\r\n    return unique(ALLOWED_HTML_ATTRIBUTES.concat(additionalAttributes || [])).map(attr =>\r\n        attr.toLocaleLowerCase()\r\n    );\r\n}\r\n\r\nexport function getDefaultStyleValues(additionalDefaultStyles: StringMap): StringMap {\r\n    let result = cloneObject(DEFAULT_STYLE_VALUES);\r\n    if (additionalDefaultStyles) {\r\n        Object.keys(additionalDefaultStyles).forEach(name => {\r\n            let value = additionalDefaultStyles[name];\r\n            if (value !== null && value !== undefined) {\r\n                result[name] = value;\r\n            } else {\r\n                delete result[name];\r\n            }\r\n        });\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function getStyleCallbacks(callbacks: StyleCallbackMap): StyleCallbackMap {\r\n    let result = cloneObject(callbacks);\r\n    result.position = result.position || removeValue;\r\n    result.width = result.width || removeWidthForLiAndDiv;\r\n    return result;\r\n}\r\n\r\nfunction removeValue(): null {\r\n    return null;\r\n}\r\n\r\nfunction removeWidthForLiAndDiv(value: string, element: HTMLElement) {\r\n    let tag = element.tagName;\r\n    return !(tag == 'LI' || tag == 'DIV');\r\n}\r\n\r\nfunction unique<T>(array: T[]): T[] {\r\n    return array.filter((value, index, self) => self.indexOf(value) == index);\r\n}\r\n","import { StringMap } from '../types/maps';\r\n\r\n// Inheritable CSS properties\r\n// Ref: https://www.w3.org/TR/CSS21/propidx.html\r\nconst INHERITABLE_PROPERTIES = (\r\n    'border-spacing,caption-side,color,' +\r\n    'cursor,direction,empty-cells,font-family,font-size,font-style,font-variant,font-weight,' +\r\n    'font,letter-spacing,line-height,list-style-image,list-style-position,list-style-type,' +\r\n    'list-style,orphans,quotes,text-align,text-indent,text-transform,visibility,white-space,' +\r\n    'widows,word-spacing'\r\n).split(',');\r\n\r\n/**\r\n * Get inheritable CSS style values from the given element\r\n * @param element The element to get style from\r\n */\r\nexport default function getInheritableStyles(element: HTMLElement): StringMap {\r\n    let win = element && element.ownerDocument && element.ownerDocument.defaultView;\r\n    let styles = win && win.getComputedStyle(element);\r\n    let result: StringMap = {};\r\n    INHERITABLE_PROPERTIES.forEach(\r\n        name => (result[name] = (styles && styles.getPropertyValue(name)) || '')\r\n    );\r\n    return result;\r\n}\r\n","const START_FRAGMENT = '<!--StartFragment-->';\r\nconst END_FRAGMENT = '<!--EndFragment-->';\r\n\r\n/**\r\n * Build DOM tree from the given HTML string\r\n * @param html Source HTML string\r\n * @param preserveFragmentOnly If there is fragment markup (&lt;!--StartFragment--&gt; and &lt;!--EndFragment--&gt;),\r\n * only preserve content between these markups\r\n * @param fragmentHandler An optional callback to do customized fragment handling\r\n */\r\nexport default function htmlToDom(\r\n    html: string,\r\n    preserveFragmentOnly: boolean,\r\n    fragmentHandler?: (doc: HTMLDocument, sourceHtml: string) => void\r\n): HTMLDocument {\r\n    let parser = new DOMParser();\r\n    let doc = parser.parseFromString(html || '', 'text/html');\r\n\r\n    if (doc && doc.body && doc.body.firstChild) {\r\n        // 1. Filter out html code outside of Fragment tags if need\r\n        if (preserveFragmentOnly) {\r\n            (fragmentHandler || defaultFragmentTrimmer)(doc, html);\r\n        }\r\n\r\n        return doc;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction defaultFragmentTrimmer(doc: HTMLDocument, sourceHtml: string) {\r\n    let [html] = splitWithFragment(sourceHtml);\r\n    doc.body.innerHTML = html;\r\n}\r\n\r\n/**\r\n * Split the HTML string using its fragment info\r\n * @param html Source html string\r\n * @returns [String within fragment, String before fragment, String after fragment]\r\n */\r\nexport function splitWithFragment(html: string): [string, string, string] {\r\n    let startIndex = html.indexOf(START_FRAGMENT);\r\n    let endIndex = html.lastIndexOf(END_FRAGMENT);\r\n    if (startIndex >= 0 && endIndex >= 0 && endIndex >= startIndex + START_FRAGMENT.length) {\r\n        let before = html.substr(0, startIndex);\r\n        let after = html.substr(endIndex + END_FRAGMENT.length);\r\n        html = html.substring(startIndex + START_FRAGMENT.length, endIndex);\r\n        return [html, before, after];\r\n    } else {\r\n        return [html, null, null];\r\n    }\r\n}\r\n","import { contains, getTagOfNode } from 'roosterjs-editor-dom';\r\nimport { Editor, EditorPlugin } from 'roosterjs-editor-core';\r\nimport {\r\n    ContentChangedEvent,\r\n    ChangeSource,\r\n    NodeType,\r\n    PluginEvent,\r\n    PluginEventType,\r\n    ExtractContentEvent,\r\n    PositionType,\r\n} from 'roosterjs-editor-types';\r\n\r\nconst BEGIN_TAG = 'RoosterJsImageResizingBegin';\r\nconst END_TAG = 'RoosterJsImageResizingEnd';\r\nconst EXTRACT_HTML_REGEX = new RegExp(\r\n    `<!--${BEGIN_TAG}-->[\\\\s\\\\S]*(<img\\\\s[^>]+>)[\\\\s\\\\S]*<!--${END_TAG}-->`,\r\n    'gim'\r\n);\r\nconst DELETE_KEYCODE = 46;\r\nconst BACKSPACE_KEYCODE = 8;\r\nconst SHIFT_KEYCODE = 16;\r\nconst CTRL_KEYCODE = 17;\r\nconst ALT_KEYCODE = 18;\r\n\r\n/**\r\n * ImageResize plugin provides the ability to resize an inline image in editor\r\n */\r\nexport default class ImageResize implements EditorPlugin {\r\n    private editor: Editor;\r\n    private startPageX: number;\r\n    private startPageY: number;\r\n    private startWidth: number;\r\n    private startHeight: number;\r\n    private resizeDiv: HTMLElement;\r\n    private direction: string;\r\n    private disposer: () => void;\r\n\r\n    /**\r\n     * Create a new instance of ImageResize\r\n     * @param minWidth Minimum width of image when resize in pixel, default value is 10\r\n     * @param minHeight Minimum height of image when resize in pixel, default value is 10\r\n     * @param selectionBorderColor Color of resize border and handles, default value is #DB626C\r\n     * @param forcePreserveRatio Whether always preserve width/height ratio when resize, default value is false\r\n     * @param resizableImageSelector Selector for picking which image is resizable (e.g. for all images not placeholders), note\r\n     * that the tag must be IMG regardless what the selector is\r\n     */\r\n    constructor(\r\n        private minWidth: number = 10,\r\n        private minHeight: number = 10,\r\n        private selectionBorderColor: string = '#DB626C',\r\n        private forcePreserveRatio: boolean = false,\r\n        private resizableImageSelector: string = 'img'\r\n    ) {}\r\n\r\n    /**\r\n     * Get a friendly name of  this plugin\r\n     */\r\n    getName() {\r\n        return 'ImageResize';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    initialize(editor: Editor) {\r\n        this.editor = editor;\r\n        this.disposer = editor.addDomEventHandler({\r\n            dragstart: this.onDragStart,\r\n            blur: this.onBlur,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    dispose() {\r\n        if (this.resizeDiv) {\r\n            this.hideResizeHandle();\r\n        }\r\n        this.disposer();\r\n        this.disposer = null;\r\n        this.editor = null;\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    onPluginEvent(e: PluginEvent) {\r\n        if (e.eventType == PluginEventType.MouseDown) {\r\n            const event = e.rawEvent;\r\n            const target = <HTMLElement>(event.srcElement || event.target);\r\n\r\n            if (getTagOfNode(target) == 'IMG') {\r\n                const parent = target.parentNode as HTMLElement;\r\n                const elements = parent\r\n                    ? ([].slice.call(\r\n                          parent.querySelectorAll(this.resizableImageSelector)\r\n                      ) as HTMLElement[])\r\n                    : [];\r\n                if (elements.indexOf(target) < 0) {\r\n                    return;\r\n                }\r\n\r\n                target.contentEditable = 'false';\r\n                const currentImg = this.getSelectedImage();\r\n                if (currentImg && currentImg != target) {\r\n                    this.hideResizeHandle();\r\n                }\r\n\r\n                if (!this.resizeDiv) {\r\n                    this.showResizeHandle(<HTMLImageElement>target);\r\n                }\r\n            } else if (this.resizeDiv && !contains(this.resizeDiv, target)) {\r\n                this.hideResizeHandle();\r\n            }\r\n        } else if (e.eventType == PluginEventType.KeyDown && this.resizeDiv) {\r\n            const event = e.rawEvent;\r\n            if (event.which == DELETE_KEYCODE || event.which == BACKSPACE_KEYCODE) {\r\n                this.editor.addUndoSnapshot(() => {\r\n                    this.removeResizeDiv(this.resizeDiv);\r\n                });\r\n                this.resizeDiv = null;\r\n                event.preventDefault();\r\n                this.resizeDiv = null;\r\n            } else if (\r\n                event.which != SHIFT_KEYCODE &&\r\n                event.which != CTRL_KEYCODE &&\r\n                event.which != ALT_KEYCODE\r\n            ) {\r\n                this.hideResizeHandle(true /*selectImage*/);\r\n            }\r\n        } else if (\r\n            e.eventType == PluginEventType.ContentChanged &&\r\n            (<ContentChangedEvent>e).source != ChangeSource.ImageResize\r\n        ) {\r\n            this.editor.queryElements('img', this.removeResizeDivIfAny);\r\n            this.resizeDiv = null;\r\n        } else if (e.eventType == PluginEventType.ExtractContent) {\r\n            const event = <ExtractContentEvent>e;\r\n            event.content = this.extractHtml(event.content);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select a given IMG element, show the resize handle\r\n     * @param img The IMG element to select\r\n     */\r\n    showResizeHandle(img: HTMLImageElement) {\r\n        this.resizeDiv = this.createResizeDiv(img);\r\n        img.contentEditable = 'false';\r\n        this.editor.select(this.resizeDiv, PositionType.After);\r\n    }\r\n\r\n    /**\r\n     * Hide resize handle of current selected image\r\n     * @param selectImageAfterUnSelect Optional, when set to true, select the image element after hide the resize handle\r\n     */\r\n    hideResizeHandle(selectImageAfterUnSelect?: boolean) {\r\n        let img = this.getSelectedImage();\r\n        let parent = this.resizeDiv && this.resizeDiv.parentNode;\r\n        if (parent) {\r\n            if (img) {\r\n                img.removeAttribute('contentEditable');\r\n                let referenceNode =\r\n                    this.resizeDiv.previousSibling &&\r\n                    this.resizeDiv.previousSibling.nodeType == NodeType.Comment\r\n                        ? this.resizeDiv.previousSibling\r\n                        : this.resizeDiv;\r\n                parent.insertBefore(img, referenceNode);\r\n\r\n                if (selectImageAfterUnSelect) {\r\n                    this.editor.select(img);\r\n                } else {\r\n                    this.editor.select(img, PositionType.After);\r\n                }\r\n            }\r\n            this.removeResizeDiv(this.resizeDiv);\r\n            this.resizeDiv = null;\r\n        }\r\n    }\r\n\r\n    private startResize = (e: MouseEvent) => {\r\n        let img = this.getSelectedImage();\r\n        if (this.editor && img) {\r\n            this.startPageX = e.pageX;\r\n            this.startPageY = e.pageY;\r\n            this.startWidth = img.clientWidth;\r\n            this.startHeight = img.clientHeight;\r\n            this.editor.addUndoSnapshot();\r\n\r\n            let document = this.editor.getDocument();\r\n            document.addEventListener('mousemove', this.doResize, true /*useCapture*/);\r\n            document.addEventListener('mouseup', this.finishResize, true /*useCapture*/);\r\n            this.direction = (<HTMLElement>(e.srcElement || e.target)).style.cursor;\r\n        }\r\n\r\n        this.stopEvent(e);\r\n    };\r\n\r\n    private doResize = (e: MouseEvent) => {\r\n        let img = this.getSelectedImage();\r\n        if (this.editor && img) {\r\n            let widthChange = e.pageX - this.startPageX;\r\n            let heightChange = e.pageY - this.startPageY;\r\n            let newWidth = Math.max(\r\n                this.startWidth + (this.isWest(this.direction) ? -widthChange : widthChange),\r\n                this.minWidth\r\n            );\r\n            let newHeight = Math.max(\r\n                this.startHeight + (this.isNorth(this.direction) ? -heightChange : heightChange),\r\n                this.minHeight\r\n            );\r\n\r\n            if (this.forcePreserveRatio || e.shiftKey) {\r\n                let ratio =\r\n                    this.startWidth > 0 && this.startHeight > 0\r\n                        ? (this.startWidth * 1.0) / this.startHeight\r\n                        : 0;\r\n                if (ratio > 0) {\r\n                    if (newWidth < newHeight * ratio) {\r\n                        newWidth = newHeight * ratio;\r\n                    } else {\r\n                        newHeight = newWidth / ratio;\r\n                    }\r\n                }\r\n            }\r\n\r\n            img.style.width = newWidth + 'px';\r\n            img.style.height = newHeight + 'px';\r\n        }\r\n        this.stopEvent(e);\r\n    };\r\n\r\n    private finishResize = (e: MouseEvent) => {\r\n        var img = this.getSelectedImage() as HTMLImageElement;\r\n        if (this.editor && img) {\r\n            let document = this.editor.getDocument();\r\n            document.removeEventListener('mousemove', this.doResize, true /*useCapture*/);\r\n            document.removeEventListener('mouseup', this.finishResize, true /*useCapture*/);\r\n            let width = img.clientWidth;\r\n            let height = img.clientHeight;\r\n            img.style.width = width + 'px';\r\n            img.style.height = height + 'px';\r\n            img.width = width;\r\n            img.height = height;\r\n            this.resizeDiv.style.width = '';\r\n            this.resizeDiv.style.height = '';\r\n        }\r\n        this.direction = null;\r\n        this.editor.addUndoSnapshot();\r\n        this.editor.triggerContentChangedEvent(ChangeSource.ImageResize);\r\n        this.stopEvent(e);\r\n    };\r\n\r\n    private createResizeDiv(target: HTMLElement) {\r\n        let document = this.editor.getDocument();\r\n        let resizeDiv = document.createElement('DIV');\r\n        let parent = target.parentNode;\r\n        parent.insertBefore(resizeDiv, target);\r\n        parent.insertBefore(document.createComment(BEGIN_TAG), resizeDiv);\r\n        parent.insertBefore(document.createComment(END_TAG), resizeDiv.nextSibling);\r\n\r\n        resizeDiv.style.position = 'relative';\r\n        resizeDiv.style.display = 'inline-flex';\r\n        resizeDiv.contentEditable = 'false';\r\n        resizeDiv.addEventListener('click', this.stopEvent);\r\n        resizeDiv.appendChild(target);\r\n        ['nw', 'ne', 'sw', 'se'].forEach(pos => {\r\n            let div = document.createElement('DIV');\r\n            resizeDiv.appendChild(div);\r\n            div.style.position = 'absolute';\r\n            div.style.width = '7px';\r\n            div.style.height = '7px';\r\n            div.style.backgroundColor = this.selectionBorderColor;\r\n            div.style.cursor = pos + '-resize';\r\n            if (this.isNorth(pos)) {\r\n                div.style.top = '-3px';\r\n            } else {\r\n                div.style.bottom = '-3px';\r\n            }\r\n            if (this.isWest(pos)) {\r\n                div.style.left = '-3px';\r\n            } else {\r\n                div.style.right = '-3px';\r\n            }\r\n            div.addEventListener('mousedown', this.startResize);\r\n        });\r\n        let div = document.createElement('DIV');\r\n        resizeDiv.appendChild(div);\r\n        div.style.position = 'absolute';\r\n        div.style.top = '0';\r\n        div.style.left = '0';\r\n        div.style.right = '0';\r\n        div.style.bottom = '0';\r\n        div.style.border = 'solid 1px ' + this.selectionBorderColor;\r\n        div.style.pointerEvents = 'none';\r\n        return resizeDiv;\r\n    }\r\n\r\n    private stopEvent = (e: UIEvent) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    };\r\n\r\n    private removeResizeDiv(resizeDiv: HTMLElement) {\r\n        if (this.editor && this.editor.contains(resizeDiv)) {\r\n            [resizeDiv.previousSibling, resizeDiv.nextSibling].forEach(comment => {\r\n                if (comment && comment.nodeType == NodeType.Comment) {\r\n                    this.editor.deleteNode(comment);\r\n                }\r\n            });\r\n            this.editor.deleteNode(resizeDiv);\r\n        }\r\n    }\r\n\r\n    private removeResizeDivIfAny = (img: HTMLImageElement) => {\r\n        let div = img && (img.parentNode as HTMLElement);\r\n        let previous = div && div.previousSibling;\r\n        let next = div && div.nextSibling;\r\n        if (\r\n            previous &&\r\n            previous.nodeType == NodeType.Comment &&\r\n            previous.nodeValue == BEGIN_TAG &&\r\n            next &&\r\n            next.nodeType == NodeType.Comment &&\r\n            next.nodeValue == END_TAG\r\n        ) {\r\n            div.parentNode.insertBefore(img, div);\r\n            this.removeResizeDiv(div);\r\n        }\r\n    };\r\n\r\n    private onBlur = (e: FocusEvent) => {\r\n        this.hideResizeHandle();\r\n    };\r\n\r\n    private extractHtml(html: string): string {\r\n        return html.replace(EXTRACT_HTML_REGEX, (...groups: string[]) => {\r\n            return groups[1].replace(\r\n                /(\\s*contenteditable=\"false\"(\\/?>)|contenteditable=\"false\"\\s*)/im,\r\n                '$2'\r\n            );\r\n        });\r\n    }\r\n\r\n    private getSelectedImage(): HTMLElement {\r\n        return this.resizeDiv ? <HTMLElement>this.resizeDiv.getElementsByTagName('IMG')[0] : null;\r\n    }\r\n\r\n    private isNorth(direction: string): boolean {\r\n        return direction && direction.substr(0, 1) == 'n';\r\n    }\r\n\r\n    private isWest(direction: string): boolean {\r\n        return direction && direction.substr(1, 1) == 'w';\r\n    }\r\n\r\n    private onDragStart = (e: DragEvent) => {\r\n        if ((e.srcElement || e.target) == this.getSelectedImage()) {\r\n            this.hideResizeHandle(true);\r\n        }\r\n    };\r\n}\r\n","export { default as ImageResize } from './ImageResize';\r\n","import { Browser, createRange, PartialInlineElement } from 'roosterjs-editor-dom';\r\nimport { PickerDataProvider, PickerPluginOptions } from './PickerDataProvider';\r\nimport { replaceWithNode } from 'roosterjs-editor-api';\r\nimport {\r\n    cacheGetContentSearcher,\r\n    Editor,\r\n    EditorPlugin,\r\n    isCharacterValue,\r\n    isModifierKey,\r\n} from 'roosterjs-editor-core';\r\nimport {\r\n    NodePosition,\r\n    PluginKeyboardEvent,\r\n    PluginEvent,\r\n    PluginEventType,\r\n    PositionType,\r\n    ChangeSource,\r\n} from 'roosterjs-editor-types';\r\n\r\n// Character codes.\r\n// IE11 uses different character codes. which are noted below.\r\n// If adding a new key, test in IE to figure out what the code is.\r\nconst BACKSPACE_CHARCODE = 'Backspace';\r\nconst TAB_CHARCODE = 'Tab';\r\nconst ENTER_CHARCODE = 'Enter';\r\nconst ESC_CHARCODE = !Browser.isIE ? 'Escape' : 'Esc';\r\nconst LEFT_ARROW_CHARCODE = !Browser.isIE ? 'ArrowLeft' : 'Left';\r\nconst UP_ARROW_CHARCODE = !Browser.isIE ? 'ArrowUp' : 'Up';\r\nconst RIGHT_ARROW_CHARCODE = !Browser.isIE ? 'ArrowRight' : 'Right';\r\nconst DOWN_ARROW_CHARCODE = !Browser.isIE ? 'ArrowDown' : 'Down';\r\nconst DELETE_CHARCODE = !Browser.isIE ? 'Delete' : 'Del';\r\n\r\n/**\r\n * Interface for PickerPlugin\r\n */\r\nexport interface EditorPickerPluginInterface<T extends PickerDataProvider = PickerDataProvider>\r\n    extends EditorPlugin {\r\n    dataProvider: T;\r\n}\r\n\r\n/**\r\n * PickerPlugin represents a plugin of editor which can handle picker related behaviors, including\r\n * - Show picker when special trigger key is pressed\r\n * - Hide picker\r\n * - Change selection in picker by Up/Down/Left/Right\r\n * - Apply selected item in picker\r\n *\r\n * PickerPlugin doesn't provide any UI, it just wraps related DOM events and invoke callback functions.\r\n * To show a picker UI, you need to build your own UI component. Please reference to\r\n * https://github.com/microsoft/roosterjs/tree/master/publish/samplesite/scripts/controls/samplepicker\r\n */\r\nexport default class PickerPlugin<T extends PickerDataProvider = PickerDataProvider>\r\n    implements EditorPickerPluginInterface<T> {\r\n    private editor: Editor;\r\n    private eventHandledOnKeyDown: boolean;\r\n    private blockSuggestions: boolean;\r\n    private isSuggesting: boolean;\r\n    private lastKnownRange: Range;\r\n\r\n    constructor(public readonly dataProvider: T, private pickerOptions: PickerPluginOptions) {}\r\n\r\n    /**\r\n     * Get a friendly name\r\n     */\r\n    getName() {\r\n        return 'Picker';\r\n    }\r\n\r\n    /**\r\n     * Initialize this plugin. This should only be called from Editor\r\n     * @param editor Editor instance\r\n     */\r\n    public initialize(editor: Editor) {\r\n        this.editor = editor;\r\n        this.dataProvider.onInitalize(\r\n            (htmlNode: Node) => {\r\n                this.editor.focus();\r\n\r\n                let wordToReplace = this.getWord(null);\r\n\r\n                // Safari drops our focus out so we get an empty word to replace when we call getWord.\r\n                // We fall back to using the lastKnownRange to try to get around this.\r\n                if ((!wordToReplace || wordToReplace.length == 0) && this.lastKnownRange) {\r\n                    this.editor.select(this.lastKnownRange);\r\n                    wordToReplace = this.getWord(null);\r\n                }\r\n\r\n                let insertNode = () => {\r\n                    if (wordToReplace) {\r\n                        replaceWithNode(\r\n                            this.editor,\r\n                            wordToReplace,\r\n                            htmlNode,\r\n                            true /* exactMatch */\r\n                        );\r\n                    } else {\r\n                        this.editor.insertNode(htmlNode);\r\n                    }\r\n                    this.setIsSuggesting(false);\r\n                };\r\n\r\n                if (this.pickerOptions.handleAutoComplete) {\r\n                    this.editor.performAutoComplete(insertNode, this.pickerOptions.changeSource);\r\n                } else {\r\n                    this.editor.addUndoSnapshot(insertNode, this.pickerOptions.changeSource);\r\n                }\r\n            },\r\n            (isSuggesting: boolean) => {\r\n                this.setIsSuggesting(isSuggesting);\r\n            },\r\n            editor\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Dispose this plugin\r\n     */\r\n    public dispose() {\r\n        this.editor = null;\r\n        this.dataProvider.onDispose();\r\n    }\r\n\r\n    /**\r\n     * Check if the plugin should handle the given event exclusively.\r\n     * Handle an event exclusively means other plugin will not receive this event in\r\n     * onPluginEvent method.\r\n     * If two plugins will return true in willHandleEventExclusively() for the same event,\r\n     * the final result depends on the order of the plugins are added into editor\r\n     * @param event The event to check\r\n     */\r\n    public willHandleEventExclusively(event: PluginEvent) {\r\n        return (\r\n            this.isSuggesting &&\r\n            (event.eventType == PluginEventType.KeyDown ||\r\n                event.eventType == PluginEventType.KeyUp ||\r\n                event.eventType == PluginEventType.Input)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Handle events triggered from editor\r\n     * @param event PluginEvent object\r\n     */\r\n    public onPluginEvent(event: PluginEvent) {\r\n        if (\r\n            event.eventType == PluginEventType.ContentChanged &&\r\n            event.source == ChangeSource.SetContent &&\r\n            this.dataProvider.onContentChanged\r\n        ) {\r\n            // Stop suggesting since content is fully changed\r\n            if (this.isSuggesting) {\r\n                this.setIsSuggesting(false);\r\n            }\r\n\r\n            // Undos and other major changes to document content fire this type of event.\r\n            // Inform the data provider of the current picker placed elements in the body.\r\n            let elementIds: string[] = [];\r\n            this.editor.queryElements(\r\n                \"[id^='\" + this.pickerOptions.elementIdPrefix + \"']\",\r\n                element => {\r\n                    if (element.id) {\r\n                        elementIds.push(element.id);\r\n                    }\r\n                }\r\n            );\r\n            this.dataProvider.onContentChanged(elementIds);\r\n        }\r\n        if (event.eventType == PluginEventType.KeyDown) {\r\n            this.eventHandledOnKeyDown = false;\r\n            this.onKeyDownEvent(event);\r\n        }\r\n        if (\r\n            event.eventType == PluginEventType.KeyUp &&\r\n            !this.eventHandledOnKeyDown &&\r\n            (isCharacterValue(event.rawEvent) ||\r\n                (!isModifierKey(event.rawEvent) && this.isSuggesting))\r\n        ) {\r\n            this.onKeyUpDomEvent(event);\r\n        } else if (event.eventType == PluginEventType.MouseUp) {\r\n            if (this.isSuggesting) {\r\n                this.setIsSuggesting(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setLastKnownRange(range: Range) {\r\n        this.lastKnownRange = range;\r\n    }\r\n\r\n    private setIsSuggesting(isSuggesting: boolean) {\r\n        this.isSuggesting = isSuggesting;\r\n\r\n        if (!isSuggesting) {\r\n            this.setLastKnownRange(null);\r\n        }\r\n        this.dataProvider.onIsSuggestingChanged(isSuggesting);\r\n\r\n        this.setAriaOwns(isSuggesting);\r\n        this.setAriaActiveDescendant(isSuggesting ? 0 : null);\r\n    }\r\n\r\n    private handleKeyDownEvent(event: PluginKeyboardEvent) {\r\n        this.eventHandledOnKeyDown = true;\r\n        event.rawEvent.preventDefault();\r\n        event.rawEvent.stopImmediatePropagation();\r\n    }\r\n\r\n    private getIdValue(node: Node): string {\r\n        let element = node as Element;\r\n        return element.attributes && element.attributes.getNamedItem('id')\r\n            ? (element.attributes.getNamedItem('id').value as string)\r\n            : null;\r\n    }\r\n\r\n    private getWordBeforeCursor(event: PluginKeyboardEvent): string {\r\n        let searcher = cacheGetContentSearcher(event, this.editor);\r\n        return searcher ? searcher.getWordBefore() : null;\r\n    }\r\n\r\n    private replaceNode(currentNode: Node, replacementNode: Node) {\r\n        if (currentNode) {\r\n            this.editor.deleteNode(currentNode);\r\n        }\r\n        if (replacementNode) {\r\n            this.editor.insertNode(replacementNode);\r\n        }\r\n    }\r\n\r\n    private getRangeUntilAt(event: PluginKeyboardEvent): Range {\r\n        let PositionContentSearcher = cacheGetContentSearcher(event, this.editor);\r\n        let startPos: NodePosition;\r\n        let endPos: NodePosition;\r\n        PositionContentSearcher.forEachTextInlineElement(textInline => {\r\n            let hasMatched = false;\r\n            let nodeContent = textInline.getTextContent();\r\n            let nodeIndex = nodeContent ? nodeContent.length : -1;\r\n            while (nodeIndex >= 0) {\r\n                if (nodeContent[nodeIndex] == this.pickerOptions.triggerCharacter) {\r\n                    startPos = textInline.getStartPosition().move(nodeIndex);\r\n                    hasMatched = true;\r\n                    break;\r\n                }\r\n                nodeIndex--;\r\n            }\r\n\r\n            if (hasMatched) {\r\n                endPos = textInline.getEndPosition();\r\n            }\r\n\r\n            return hasMatched;\r\n        });\r\n        return createRange(startPos, endPos) || this.editor.getDocument().createRange();\r\n    }\r\n\r\n    private onKeyUpDomEvent(event: PluginKeyboardEvent) {\r\n        if (this.isSuggesting) {\r\n            // Word before cursor represents the text prior to the cursor, up to and including the trigger symbol.\r\n            const wordBeforeCursor = this.getWord(event);\r\n            const wordBeforeCursorWithoutTriggerChar = wordBeforeCursor.substring(1);\r\n            const trimmedWordBeforeCursor = wordBeforeCursorWithoutTriggerChar.trim();\r\n\r\n            // If we hit a case where wordBeforeCursor is just the trigger character,\r\n            // that means we've gotten a onKeyUp event right after it's been typed.\r\n            // Otherwise, update the query string when:\r\n            // 1. There's an actual value\r\n            // 2. That actual value isn't just pure whitespace\r\n            // 3. That actual value isn't more than 4 words long (at which point we assume the person kept typing)\r\n            // Otherwise, we want to dismiss the picker plugin's UX.\r\n            if (\r\n                wordBeforeCursor == this.pickerOptions.triggerCharacter ||\r\n                (trimmedWordBeforeCursor &&\r\n                    trimmedWordBeforeCursor.length > 0 &&\r\n                    trimmedWordBeforeCursor.split(' ').length <= 4)\r\n            ) {\r\n                this.dataProvider.queryStringUpdated(\r\n                    trimmedWordBeforeCursor,\r\n                    wordBeforeCursorWithoutTriggerChar == trimmedWordBeforeCursor\r\n                );\r\n                this.setLastKnownRange(this.editor.getSelectionRange());\r\n            } else {\r\n                this.setIsSuggesting(false);\r\n            }\r\n        } else {\r\n            let wordBeforeCursor = this.getWordBeforeCursor(event);\r\n            if (!this.blockSuggestions) {\r\n                if (\r\n                    wordBeforeCursor != null &&\r\n                    wordBeforeCursor.split(' ').length <= 4 &&\r\n                    wordBeforeCursor[0] == this.pickerOptions.triggerCharacter\r\n                ) {\r\n                    this.setIsSuggesting(true);\r\n                    const wordBeforeCursorWithoutTriggerChar = wordBeforeCursor.substring(1);\r\n                    let trimmedWordBeforeCursor = wordBeforeCursorWithoutTriggerChar.trim();\r\n                    this.dataProvider.queryStringUpdated(\r\n                        trimmedWordBeforeCursor,\r\n                        wordBeforeCursorWithoutTriggerChar == trimmedWordBeforeCursor\r\n                    );\r\n                    this.setLastKnownRange(this.editor.getSelectionRange());\r\n                    if (this.dataProvider.setCursorPoint) {\r\n                        // Determine the bounding rectangle for the @mention\r\n                        let searcher = cacheGetContentSearcher(event, this.editor);\r\n                        let rangeNode = this.editor.getDocument().createRange();\r\n                        let nodeBeforeCursor = searcher.getInlineElementBefore().getContainerNode();\r\n                        let rangeStartSuccessfullySet = this.setRangeStart(\r\n                            rangeNode,\r\n                            nodeBeforeCursor,\r\n                            wordBeforeCursor\r\n                        );\r\n                        if (!rangeStartSuccessfullySet) {\r\n                            // VSO 24891: Out of range error is occurring because nodeBeforeCursor\r\n                            // is not including the trigger character. In this case, the node before\r\n                            // the node before cursor is the trigger character, and this is where the range should start.\r\n                            let nodeBeforeNodeBeforeCursor = nodeBeforeCursor.previousSibling;\r\n                            this.setRangeStart(\r\n                                rangeNode,\r\n                                nodeBeforeNodeBeforeCursor,\r\n                                this.pickerOptions.triggerCharacter\r\n                            );\r\n                        }\r\n                        let rect = rangeNode.getBoundingClientRect();\r\n\r\n                        // Safari's support for range.getBoundingClientRect is incomplete.\r\n                        // We perform this check to fall back to getClientRects in case it's at the page origin.\r\n                        if (rect.left == 0 && rect.bottom == 0 && rect.top == 0) {\r\n                            rect = rangeNode.getClientRects()[0];\r\n                        }\r\n\r\n                        if (rect) {\r\n                            rangeNode.detach();\r\n\r\n                            // Display the @mention popup in the correct place\r\n                            let targetPoint = { x: rect.left, y: (rect.bottom + rect.top) / 2 };\r\n                            let bufferZone = (rect.bottom - rect.top) / 2;\r\n                            this.dataProvider.setCursorPoint(targetPoint, bufferZone);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (\r\n                    wordBeforeCursor != null &&\r\n                    wordBeforeCursor[0] != this.pickerOptions.triggerCharacter\r\n                ) {\r\n                    this.blockSuggestions = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onKeyDownEvent(event: PluginKeyboardEvent) {\r\n        let keyboardEvent = event.rawEvent;\r\n        if (this.isSuggesting) {\r\n            if (keyboardEvent.key == ESC_CHARCODE) {\r\n                this.setIsSuggesting(false);\r\n                this.blockSuggestions = true;\r\n                this.handleKeyDownEvent(event);\r\n            } else if (\r\n                this.dataProvider.shiftHighlight &&\r\n                (this.pickerOptions.isHorizontal\r\n                    ? keyboardEvent.key == LEFT_ARROW_CHARCODE ||\r\n                      keyboardEvent.key == RIGHT_ARROW_CHARCODE\r\n                    : keyboardEvent.key == UP_ARROW_CHARCODE ||\r\n                      keyboardEvent.key == DOWN_ARROW_CHARCODE)\r\n            ) {\r\n                this.dataProvider.shiftHighlight(\r\n                    this.pickerOptions.isHorizontal\r\n                        ? keyboardEvent.key == RIGHT_ARROW_CHARCODE\r\n                        : keyboardEvent.key == DOWN_ARROW_CHARCODE\r\n                );\r\n\r\n                if (this.dataProvider.getSelectedIndex) {\r\n                    this.setAriaActiveDescendant(this.dataProvider.getSelectedIndex());\r\n                }\r\n\r\n                this.handleKeyDownEvent(event);\r\n            } else if (\r\n                this.dataProvider.selectOption &&\r\n                (keyboardEvent.key == ENTER_CHARCODE || keyboardEvent.key == TAB_CHARCODE)\r\n            ) {\r\n                this.dataProvider.selectOption();\r\n                this.handleKeyDownEvent(event);\r\n            } else {\r\n                // Currently no op.\r\n            }\r\n        } else {\r\n            if (keyboardEvent.key == BACKSPACE_CHARCODE) {\r\n                let searcher = cacheGetContentSearcher(event, this.editor);\r\n                let nodeBeforeCursor = searcher.getInlineElementBefore()\r\n                    ? searcher.getInlineElementBefore().getContainerNode()\r\n                    : null;\r\n                let nodeId = nodeBeforeCursor ? this.getIdValue(nodeBeforeCursor) : null;\r\n                if (\r\n                    nodeId &&\r\n                    nodeId.indexOf(this.pickerOptions.elementIdPrefix) == 0 &&\r\n                    (searcher.getInlineElementAfter() == null ||\r\n                        !(searcher.getInlineElementAfter() instanceof PartialInlineElement))\r\n                ) {\r\n                    let replacementNode = this.dataProvider.onRemove(nodeBeforeCursor, true);\r\n                    this.replaceNode(nodeBeforeCursor, replacementNode);\r\n                    this.editor.select(replacementNode, PositionType.After);\r\n                    this.handleKeyDownEvent(event);\r\n                }\r\n            } else if (keyboardEvent.key == DELETE_CHARCODE) {\r\n                let searcher = cacheGetContentSearcher(event, this.editor);\r\n                let nodeAfterCursor = searcher.getInlineElementAfter()\r\n                    ? searcher.getInlineElementAfter().getContainerNode()\r\n                    : null;\r\n                let nodeId = nodeAfterCursor ? this.getIdValue(nodeAfterCursor) : null;\r\n                if (nodeId && nodeId.indexOf(this.pickerOptions.elementIdPrefix) == 0) {\r\n                    let replacementNode = this.dataProvider.onRemove(nodeAfterCursor, false);\r\n                    this.replaceNode(nodeAfterCursor, replacementNode);\r\n                    this.handleKeyDownEvent(event);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getWord(event: PluginKeyboardEvent) {\r\n        let wordFromRange = this.getRangeUntilAt(event).toString();\r\n        let wordFromCache = this.getWordBeforeCursor(event);\r\n        // VSO 24891: In picker, trigger and mention are separated into two nodes.\r\n        // In this case, wordFromRange is the trigger character while wordFromCache is the whole string,\r\n        // so wordFromCache is what we want to return.\r\n        if (\r\n            wordFromRange == this.pickerOptions.triggerCharacter &&\r\n            wordFromRange != wordFromCache\r\n        ) {\r\n            return wordFromCache;\r\n        }\r\n        return wordFromRange;\r\n    }\r\n\r\n    private setRangeStart(rangeNode: Range, node: Node, target: string) {\r\n        let nodeOffset = node ? node.textContent.lastIndexOf(target) : -1;\r\n        if (nodeOffset > -1) {\r\n            rangeNode.setStart(node, nodeOffset);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private setAriaOwns(isSuggesting: boolean) {\r\n        this.editor.setEditorDomAttribute(\r\n            'aria-owns',\r\n            isSuggesting && this.pickerOptions.suggestionsLabel\r\n                ? this.pickerOptions.suggestionsLabel\r\n                : null\r\n        );\r\n    }\r\n\r\n    private setAriaActiveDescendant(selectedIndex: number) {\r\n        this.editor.setEditorDomAttribute(\r\n            'aria-activedescendant',\r\n            selectedIndex != null && this.pickerOptions.suggestionLabelPrefix\r\n                ? this.pickerOptions.suggestionLabelPrefix + selectedIndex.toString()\r\n                : null\r\n        );\r\n    }\r\n}\r\n","export { default as PickerPlugin, EditorPickerPluginInterface } from './PickerPlugin';\r\nexport { PickerPluginOptions, PickerDataProvider } from './PickerDataProvider';\r\n","import { ContentEdit, HyperLink, Paste } from 'roosterjs-editor-plugins';\r\nimport { Editor, EditorOptions, EditorPlugin } from 'roosterjs-editor-core';\r\n\r\n/**\r\n * Create an editor instance with most common options\r\n * @param contentDiv The html div element needed for creating the editor\r\n * @param additionalPlugins The additional user defined plugins. Currently the default plugins that are already included are\r\n * DefalutShortcut, HyperLink, Paste, and ContentEdit, user don't need to add those.\r\n * @param initialContent The initial content to show in editor. It can't be removed by undo, user need to manually remove it if needed.\r\n * @returns The editor instance\r\n */\r\nexport default function createEditor(\r\n    contentDiv: HTMLDivElement,\r\n    additionalPlugins?: EditorPlugin[],\r\n    initialContent?: string\r\n): Editor {\r\n    let plugins: EditorPlugin[] = [new HyperLink(), new Paste(), new ContentEdit()];\r\n\r\n    if (additionalPlugins) {\r\n        plugins = plugins.concat(additionalPlugins);\r\n    }\r\n\r\n    let options: EditorOptions = {\r\n        plugins: plugins,\r\n        initialContent: initialContent,\r\n        defaultFormat: {\r\n            fontFamily: 'Calibri,Arial,Helvetica,sans-serif',\r\n            fontSize: '11pt',\r\n            textColor: '#000000',\r\n        },\r\n    };\r\n    return new Editor(contentDiv, options);\r\n}\r\n","export { default as createEditor } from './createEditor';\r\nexport * from 'roosterjs-editor-types';\r\nexport * from 'roosterjs-editor-dom';\r\nexport * from 'roosterjs-editor-core';\r\nexport * from 'roosterjs-editor-api';\r\nexport * from 'roosterjs-editor-plugins';\r\nexport * from 'roosterjs-plugin-image-resize';\r\nexport * from 'roosterjs-html-sanitizer';\r\nexport * from 'roosterjs-plugin-picker';\r\n"],"sourceRoot":""}